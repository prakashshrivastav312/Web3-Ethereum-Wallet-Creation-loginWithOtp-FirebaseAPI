{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApiProvider = void 0;\n\nconst axios_1 = __importDefault(require(\"axios\"));\n\nconst errors = __importStar(require(\"./errors\"));\n\nconst logger_1 = require(\"./logger\");\n\nconst networkStake_1 = require(\"./networkStake\");\n\nconst stats_1 = require(\"./stats\");\n\nconst transactionOnNetwork_1 = require(\"./transactionOnNetwork\");\n\nconst token_1 = require(\"./token\");\n\nconst nftToken_1 = require(\"./nftToken\");\n\nconst JSONbig = require(\"json-bigint\");\n/**\n * This is a temporary change, this will be the only provider used, ProxyProvider will be deprecated\n */\n\n\nclass ApiProvider {\n  /**\n   * Creates a new ApiProvider.\n   * @param url the URL of the Elrond Api\n   * @param config axios request config options\n   */\n  constructor(url, config) {\n    this.url = url;\n    this.config = Object.assign({}, config, {\n      timeout: 1000,\n      // See: https://github.com/axios/axios/issues/983 regarding transformResponse\n      transformResponse: [function (data) {\n        return JSONbig.parse(data);\n      }]\n    });\n  }\n  /**\n   * Fetches the Network Stake.\n   */\n\n\n  getNetworkStake() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(\"stake\", response => networkStake_1.NetworkStake.fromHttpResponse(response));\n    });\n  }\n  /**\n   * Fetches the Network Stats.\n   */\n\n\n  getNetworkStats() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(\"stats\", response => stats_1.Stats.fromHttpResponse(response));\n    });\n  }\n  /**\n   * Fetches the state of a {@link Transaction}.\n   */\n\n\n  getTransaction(txHash) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(`transactions/${txHash.toString()}`, response => transactionOnNetwork_1.TransactionOnNetwork.fromHttpResponse(response));\n    });\n  }\n\n  getToken(tokenIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(`tokens/${tokenIdentifier}`, response => token_1.Token.fromHttpResponse(response));\n    });\n  }\n\n  getNFTToken(tokenIdentifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return this.doGetGeneric(`nfts/${tokenIdentifier}`, response => nftToken_1.NFTToken.fromHttpResponse(response));\n    });\n  }\n  /**\n   * Get method that receives the resource url and on callback the method used to map the response.\n   */\n\n\n  doGetGeneric(resourceUrl, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let response = yield this.doGet(resourceUrl);\n      return callback(response);\n    });\n  }\n\n  doGet(resourceUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        let url = `${this.url}/${resourceUrl}`;\n        let response = yield axios_1.default.get(url, this.config);\n        return response.data;\n      } catch (error) {\n        this.handleApiError(error, resourceUrl);\n      }\n    });\n  }\n\n  handleApiError(error, resourceUrl) {\n    if (!error.response) {\n      logger_1.Logger.warn(error);\n      throw new errors.ErrApiProviderGet(resourceUrl, error.toString(), error);\n    }\n\n    let errorData = error.response.data;\n    let originalErrorMessage = errorData.error || errorData.message || JSON.stringify(errorData);\n    throw new errors.ErrApiProviderGet(resourceUrl, originalErrorMessage, error);\n  }\n\n}\n\nexports.ApiProvider = ApiProvider;","map":{"version":3,"mappings":"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","names":["JSONbig","require","ApiProvider","constructor","url","config","Object","assign","timeout","transformResponse","data","parse","getNetworkStake","doGetGeneric","response","networkStake_1","fromHttpResponse","getNetworkStats","stats_1","getTransaction","txHash","toString","transactionOnNetwork_1","getToken","tokenIdentifier","token_1","getNFTToken","nftToken_1","resourceUrl","callback","doGet","axios_1","get","error","handleApiError","logger_1","warn","errors","ErrApiProviderGet","errorData","originalErrorMessage","message","JSON","stringify","exports"],"sourceRoot":"","sources":["../src/apiProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}