{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\n\nexport function ValidateNested(validationOptions) {\n  var opts = __assign({}, validationOptions);\n\n  var eachPrefix = opts.each ? 'each value in ' : '';\n  opts.message = opts.message || eachPrefix + 'nested property $property must be either object or array';\n  return function (object, propertyName) {\n    var args = {\n      type: ValidationTypes.NESTED_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      validationOptions: opts\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAEA,SAASA,eAAT,QAAgC,kCAAhC;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,kBAAT,QAAmC,gCAAnC;AAEA;;;;AAGA,OAAM,SAAUC,cAAV,CAAyBC,iBAAzB,EAA8D;EAClE,IAAMC,IAAI,gBAA2BD,iBAA3B,CAAV;;EACA,IAAME,UAAU,GAAGD,IAAI,CAACE,IAAL,GAAY,gBAAZ,GAA+B,EAAlD;EACAF,IAAI,CAACG,OAAL,GAAeH,IAAI,CAACG,OAAL,IAAgBF,UAAU,GAAG,0DAA5C;EAEA,OAAO,UAAUG,MAAV,EAA0BC,YAA1B,EAA8C;IACnD,IAAMC,IAAI,GAA2B;MACnCC,IAAI,EAAEZ,eAAe,CAACa,iBADa;MAEnCC,MAAM,EAAEL,MAAM,CAACM,WAFoB;MAGnCL,YAAY,EAAEA,YAHqB;MAInCN,iBAAiB,EAAEC;IAJgB,CAArC;IAMAH,kBAAkB,GAAGc,qBAArB,CAA2C,IAAIf,kBAAJ,CAAuBU,IAAvB,CAA3C;EACD,CARD;AASD","names":["ValidationTypes","ValidationMetadata","getMetadataStorage","ValidateNested","validationOptions","opts","eachPrefix","each","message","object","propertyName","args","type","NESTED_VALIDATION","target","constructor","addValidationMetadata"],"sourceRoot":"","sources":["../../../../src/decorator/common/ValidateNested.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}