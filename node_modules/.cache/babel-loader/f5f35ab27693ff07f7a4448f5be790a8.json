{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MintAlgoNft = void 0;\n\nconst class_validator_1 = require(\"class-validator\");\n\nconst Currency_1 = require(\"./Currency\");\n\nconst PrivateKeyOrSignatureIdBuiltInPrivateKey_1 = require(\"./PrivateKeyOrSignatureIdBuiltInPrivateKey\");\n\nconst class_transformer_1 = require(\"class-transformer\");\n\nclass MintAttr {}\n\n__decorate([class_validator_1.IsOptional(), class_validator_1.Length(1, 8), __metadata(\"design:type\", String)], MintAttr.prototype, \"assetUnit\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_validator_1.Length(58, 58), __metadata(\"design:type\", String)], MintAttr.prototype, \"manager\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_validator_1.Length(58, 58), __metadata(\"design:type\", String)], MintAttr.prototype, \"reserve\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_validator_1.Length(58, 58), __metadata(\"design:type\", String)], MintAttr.prototype, \"freeze\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_validator_1.Length(58, 58), __metadata(\"design:type\", String)], MintAttr.prototype, \"clawback\", void 0);\n\nclass MintAlgoNft extends PrivateKeyOrSignatureIdBuiltInPrivateKey_1.PrivateKeyOrSignatureIdBuiltInPrivateKey {}\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.Length(1, 32), __metadata(\"design:type\", String)], MintAlgoNft.prototype, \"name\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.IsIn([Currency_1.Currency.ALGO]), __metadata(\"design:type\", String)], MintAlgoNft.prototype, \"chain\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_validator_1.ValidateNested({\n  each: true\n}), class_transformer_1.Type(() => MintAttr), __metadata(\"design:type\", MintAttr)], MintAlgoNft.prototype, \"attr\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), __metadata(\"design:type\", String)], MintAlgoNft.prototype, \"url\", void 0);\n\n__decorate([class_validator_1.ValidateIf(o => o.signatureId), class_validator_1.IsNotEmpty(), class_validator_1.Length(58, 58), __metadata(\"design:type\", String)], MintAlgoNft.prototype, \"from\", void 0);\n\nexports.MintAlgoNft = MintAlgoNft;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAMA,QAAN,CAAc;;AAIZC,YAFCC,8BAED,EADCA,yBAAO,CAAP,EAAU,CAAV,CACD;;AAIAD,YAFCC,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AAIAD,YAFCC,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AAIAD,YAFCC,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AAIAD,YAFCC,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AAGF,MAAaC,WAAb,SAAiCC,mFAAjC,CAAyE;;AAIvEH,YAFCC,8BAED,EADCA,yBAAO,CAAP,EAAU,EAAV,CACD;;AAIAD,YAFCC,8BAED,EADCA,uBAAK,CAACG,oBAASC,IAAV,CAAL,CACD;;AAKAL,YAHCC,8BAGD,EAFCA,iCAAe;EAACK,IAAI,EAAE;AAAP,CAAf,CAED,EADCC,yBAAK,MAAMR,QAAX,CACD,4BAAcA,SAAd;;AAGAC,YADCC,8BACD;;AAKAD,YAHCC,6BAAWO,CAAC,IAAIA,CAAC,CAACC,WAAlB,CAGD,EAFCR,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AArBFS","names":["MintAttr","__decorate","class_validator_1","MintAlgoNft","PrivateKeyOrSignatureIdBuiltInPrivateKey_1","Currency_1","ALGO","each","class_transformer_1","o","signatureId","exports"],"sourceRoot":"","sources":["../../../../src/model/request/MintAlgoNft.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}