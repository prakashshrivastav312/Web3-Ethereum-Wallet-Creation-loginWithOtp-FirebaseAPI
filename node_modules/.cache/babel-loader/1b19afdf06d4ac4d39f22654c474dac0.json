{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseLedger = void 0;\n\nconst _ = __importStar(require(\"lodash\"));\n\nconst common_1 = require(\"../../common\");\n\nconst transaction_1 = __importDefault(require(\"./transaction\"));\n\nfunction parseTransactionWrapper(ledgerVersion, tx) {\n  const transaction = Object.assign({}, _.omit(tx, 'metaData'), {\n    meta: tx.metaData,\n    ledger_index: ledgerVersion\n  });\n  const result = transaction_1.default(transaction, true);\n\n  if (!result.outcome.ledgerVersion) {\n    result.outcome.ledgerVersion = ledgerVersion;\n  }\n\n  return result;\n}\n\nfunction parseTransactions(transactions, ledgerVersion) {\n  if (_.isEmpty(transactions)) {\n    return {};\n  }\n\n  if (typeof transactions[0] === 'string') {\n    return {\n      transactionHashes: transactions\n    };\n  }\n\n  return {\n    transactions: transactions.map(_.partial(parseTransactionWrapper, ledgerVersion))\n  };\n}\n\nfunction parseState(state) {\n  if (_.isEmpty(state)) {\n    return {};\n  }\n\n  if (typeof state[0] === 'string') {\n    return {\n      stateHashes: state\n    };\n  }\n\n  return {\n    rawState: JSON.stringify(state)\n  };\n}\n\nfunction parseLedger(ledger) {\n  const ledgerVersion = parseInt(ledger.ledger_index, 10);\n  return common_1.removeUndefined(Object.assign({\n    stateHash: ledger.account_hash,\n    closeTime: common_1.rippleTimeToISO8601(ledger.close_time),\n    closeTimeResolution: ledger.close_time_resolution,\n    closeFlags: ledger.close_flags,\n    ledgerHash: ledger.ledger_hash,\n    ledgerVersion: ledgerVersion,\n    parentLedgerHash: ledger.parent_hash,\n    parentCloseTime: common_1.rippleTimeToISO8601(ledger.parent_close_time),\n    totalDrops: ledger.total_coins,\n    transactionHash: ledger.transaction_hash\n  }, parseTransactions(ledger.transactions, ledgerVersion), parseState(ledger.accountState)));\n}\n\nexports.parseLedger = parseLedger;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAsBA,SAASA,uBAAT,CAAiCC,aAAjC,EAAgDC,EAAhD,EAAkD;EAEhD,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,CAAC,CAACC,IAAF,CAAOL,EAAP,EAAW,UAAX,CAAlB,EAA0C;IAC5DM,IAAI,EAAEN,EAAE,CAACO,QADmD;IAE5DC,YAAY,EAAET;EAF8C,CAA1C,CAApB;EAIA,MAAMU,MAAM,GAAGC,sBAAiBT,WAAjB,EAA8B,IAA9B,CAAf;;EACA,IAAI,CAACQ,MAAM,CAACE,OAAP,CAAeZ,aAApB,EAAmC;IACjCU,MAAM,CAACE,OAAP,CAAeZ,aAAf,GAA+BA,aAA/B;EACD;;EACD,OAAOU,MAAP;AACD;;AAED,SAASG,iBAAT,CAA2BC,YAA3B,EAAyCd,aAAzC,EAAsD;EACpD,IAAIK,CAAC,CAACU,OAAF,CAAUD,YAAV,CAAJ,EAA6B;IAC3B,OAAO,EAAP;EACD;;EACD,IAAI,OAAOA,YAAY,CAAC,CAAD,CAAnB,KAA2B,QAA/B,EAAyC;IACvC,OAAO;MAACE,iBAAiB,EAAEF;IAApB,CAAP;EACD;;EACD,OAAO;IACLA,YAAY,EAAEA,YAAY,CAACG,GAAb,CACZZ,CAAC,CAACa,OAAF,CAAUnB,uBAAV,EAAmCC,aAAnC,CADY;EADT,CAAP;AAKD;;AAED,SAASmB,UAAT,CAAoBC,KAApB,EAAyB;EACvB,IAAIf,CAAC,CAACU,OAAF,CAAUK,KAAV,CAAJ,EAAsB;IACpB,OAAO,EAAP;EACD;;EACD,IAAI,OAAOA,KAAK,CAAC,CAAD,CAAZ,KAAoB,QAAxB,EAAkC;IAChC,OAAO;MAACC,WAAW,EAAED;IAAd,CAAP;EACD;;EACD,OAAO;IAACE,QAAQ,EAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf;EAAX,CAAP;AACD;;AAOD,SAAgBK,WAAhB,CAA4BC,MAA5B,EAA0C;EACxC,MAAM1B,aAAa,GAAG2B,QAAQ,CAACD,MAAM,CAACjB,YAAR,EAAsB,EAAtB,CAA9B;EACA,OAAOmB,yBACLzB,MAAM,CAACC,MAAP,CACE;IACEyB,SAAS,EAAEH,MAAM,CAACI,YADpB;IAEEC,SAAS,EAAEH,6BAAoBF,MAAM,CAACM,UAA3B,CAFb;IAGEC,mBAAmB,EAAEP,MAAM,CAACQ,qBAH9B;IAIEC,UAAU,EAAET,MAAM,CAACU,WAJrB;IAKEC,UAAU,EAAEX,MAAM,CAACY,WALrB;IAMEtC,aAAa,EAAEA,aANjB;IAOEuC,gBAAgB,EAAEb,MAAM,CAACc,WAP3B;IAQEC,eAAe,EAAEb,6BAAoBF,MAAM,CAACgB,iBAA3B,CARnB;IASEC,UAAU,EAAEjB,MAAM,CAACkB,WATrB;IAUEC,eAAe,EAAEnB,MAAM,CAACoB;EAV1B,CADF,EAaEjC,iBAAiB,CAACa,MAAM,CAACZ,YAAR,EAAsBd,aAAtB,CAbnB,EAcEmB,UAAU,CAACO,MAAM,CAACqB,YAAR,CAdZ,CADK,CAAP;AAkBD;;AApBDC","names":["parseTransactionWrapper","ledgerVersion","tx","transaction","Object","assign","_","omit","meta","metaData","ledger_index","result","transaction_1","outcome","parseTransactions","transactions","isEmpty","transactionHashes","map","partial","parseState","state","stateHashes","rawState","JSON","stringify","parseLedger","ledger","parseInt","common_1","stateHash","account_hash","closeTime","close_time","closeTimeResolution","close_time_resolution","closeFlags","close_flags","ledgerHash","ledger_hash","parentLedgerHash","parent_hash","parentCloseTime","parent_close_time","totalDrops","total_coins","transactionHash","transaction_hash","accountState","exports"],"sourceRoot":"","sources":["../../../../src/ledger/parse/ledger.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}