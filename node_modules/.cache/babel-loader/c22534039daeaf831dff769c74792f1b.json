{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst bcrypto = require('../crypto');\n\nconst networks_1 = require('../networks');\n\nconst bscript = require('../script');\n\nconst lazy = require('./lazy');\n\nconst typef = require('typeforce');\n\nconst OPS = bscript.OPS;\n\nconst bs58check = require('bs58check');\n\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n} // input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\n\n\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  typef({\n    network: typef.maybe(typef.Object),\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    output: typef.maybe(typef.BufferN(23)),\n    redeem: typef.maybe({\n      network: typef.maybe(typef.Object),\n      output: typef.maybe(typef.Buffer),\n      input: typef.maybe(typef.Buffer),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer))\n    }),\n    input: typef.maybe(typef.Buffer),\n    witness: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a);\n  let network = a.network;\n\n  if (!network) {\n    network = a.redeem && a.redeem.network || networks_1.bitcoin;\n  }\n\n  const o = {\n    network\n  };\n\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return {\n      version,\n      hash\n    };\n  });\n\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n\n  const _redeem = lazy.value(() => {\n    const chunks = _chunks();\n\n    return {\n      network,\n      output: chunks[chunks.length - 1],\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || []\n    };\n  }); // output dependents\n\n\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(o.network.scriptHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  }); // input dependents\n\n  lazy.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return bscript.compile([].concat(bscript.decompile(a.redeem.input), a.redeem.output));\n  });\n  lazy.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined) nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n\n    if (a.address) {\n      if (_address().version !== network.scriptHash) throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n\n    if (a.output) {\n      if (a.output.length !== 23 || a.output[0] !== OPS.OP_HASH160 || a.output[1] !== 0x14 || a.output[22] !== OPS.OP_EQUAL) throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && !hash.equals(hash2)) throw new TypeError('Hash mismatch');else hash = hash2;\n    } // inlined to prevent 'no-inner-declarations' failing\n\n\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = bscript.decompile(redeem.output);\n        if (!decompile || decompile.length < 1) throw new TypeError('Redeem.output too short'); // match hash against other sources\n\n        const hash2 = bcrypto.hash160(redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2)) throw new TypeError('Hash mismatch');else hash = hash2;\n      }\n\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness) throw new TypeError('Input and witness provided');\n\n        if (hasInput) {\n          const richunks = bscript.decompile(redeem.input);\n          if (!bscript.isPushOnly(richunks)) throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n\n    if (a.input) {\n      const chunks = _chunks();\n\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!Buffer.isBuffer(_redeem().output)) throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network) throw new TypeError('Network mismatch');\n\n      if (a.input) {\n        const redeem = _redeem();\n\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output)) throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input)) throw new TypeError('Redeem.input mismatch');\n      }\n\n      checkRedeem(a.redeem);\n    }\n\n    if (a.witness) {\n      if (a.redeem && a.redeem.witness && !stacksEqual(a.redeem.witness, a.witness)) throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nexports.p2sh = p2sh;","map":{"version":3,"names":["Object","defineProperty","exports","value","bcrypto","require","networks_1","bscript","lazy","typef","OPS","bs58check","stacksEqual","a","b","length","every","x","i","equals","p2sh","opts","address","hash","output","redeem","input","TypeError","assign","validate","network","maybe","String","BufferN","Buffer","witness","arrayOf","bitcoin","o","_address","payload","decode","version","readUInt8","slice","_chunks","decompile","_redeem","chunks","compile","prop","allocUnsafe","writeUInt8","scriptHash","copy","encode","hash160","OP_HASH160","OP_EQUAL","concat","nameParts","undefined","push","name","join","from","hash2","checkRedeem","hasInput","hasWitness","richunks","isPushOnly","isBuffer"],"sources":["C:/Users/acer/node_modules/bitcoinjs-lib/src/payments/p2sh.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst typef = require('typeforce');\nconst OPS = bscript.OPS;\nconst bs58check = require('bs58check');\nfunction stacksEqual(a, b) {\n  if (a.length !== b.length) return false;\n  return a.every((x, i) => {\n    return x.equals(b[i]);\n  });\n}\n// input: [redeemScriptSig ...] {redeemScript}\n// witness: <?>\n// output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL\nfunction p2sh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.redeem && !a.input)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  typef(\n    {\n      network: typef.maybe(typef.Object),\n      address: typef.maybe(typef.String),\n      hash: typef.maybe(typef.BufferN(20)),\n      output: typef.maybe(typef.BufferN(23)),\n      redeem: typef.maybe({\n        network: typef.maybe(typef.Object),\n        output: typef.maybe(typef.Buffer),\n        input: typef.maybe(typef.Buffer),\n        witness: typef.maybe(typef.arrayOf(typef.Buffer)),\n      }),\n      input: typef.maybe(typef.Buffer),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer)),\n    },\n    a,\n  );\n  let network = a.network;\n  if (!network) {\n    network = (a.redeem && a.redeem.network) || networks_1.bitcoin;\n  }\n  const o = { network };\n  const _address = lazy.value(() => {\n    const payload = bs58check.decode(a.address);\n    const version = payload.readUInt8(0);\n    const hash = payload.slice(1);\n    return { version, hash };\n  });\n  const _chunks = lazy.value(() => {\n    return bscript.decompile(a.input);\n  });\n  const _redeem = lazy.value(() => {\n    const chunks = _chunks();\n    return {\n      network,\n      output: chunks[chunks.length - 1],\n      input: bscript.compile(chunks.slice(0, -1)),\n      witness: a.witness || [],\n    };\n  });\n  // output dependents\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(o.network.scriptHash, 0);\n    o.hash.copy(payload, 1);\n    return bs58check.encode(payload);\n  });\n  lazy.prop(o, 'hash', () => {\n    // in order of least effort\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().hash;\n    if (o.redeem && o.redeem.output) return bcrypto.hash160(o.redeem.output);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_HASH160, o.hash, OPS.OP_EQUAL]);\n  });\n  // input dependents\n  lazy.prop(o, 'redeem', () => {\n    if (!a.input) return;\n    return _redeem();\n  });\n  lazy.prop(o, 'input', () => {\n    if (!a.redeem || !a.redeem.input || !a.redeem.output) return;\n    return bscript.compile(\n      [].concat(bscript.decompile(a.redeem.input), a.redeem.output),\n    );\n  });\n  lazy.prop(o, 'witness', () => {\n    if (o.redeem && o.redeem.witness) return o.redeem.witness;\n    if (o.input) return [];\n  });\n  lazy.prop(o, 'name', () => {\n    const nameParts = ['p2sh'];\n    if (o.redeem !== undefined) nameParts.push(o.redeem.name);\n    return nameParts.join('-');\n  });\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (_address().version !== network.scriptHash)\n        throw new TypeError('Invalid version or Network mismatch');\n      if (_address().hash.length !== 20) throw new TypeError('Invalid address');\n      hash = _address().hash;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 23 ||\n        a.output[0] !== OPS.OP_HASH160 ||\n        a.output[1] !== 0x14 ||\n        a.output[22] !== OPS.OP_EQUAL\n      )\n        throw new TypeError('Output is invalid');\n      const hash2 = a.output.slice(2, 22);\n      if (hash.length > 0 && !hash.equals(hash2))\n        throw new TypeError('Hash mismatch');\n      else hash = hash2;\n    }\n    // inlined to prevent 'no-inner-declarations' failing\n    const checkRedeem = redeem => {\n      // is the redeem output empty/invalid?\n      if (redeem.output) {\n        const decompile = bscript.decompile(redeem.output);\n        if (!decompile || decompile.length < 1)\n          throw new TypeError('Redeem.output too short');\n        // match hash against other sources\n        const hash2 = bcrypto.hash160(redeem.output);\n        if (hash.length > 0 && !hash.equals(hash2))\n          throw new TypeError('Hash mismatch');\n        else hash = hash2;\n      }\n      if (redeem.input) {\n        const hasInput = redeem.input.length > 0;\n        const hasWitness = redeem.witness && redeem.witness.length > 0;\n        if (!hasInput && !hasWitness) throw new TypeError('Empty input');\n        if (hasInput && hasWitness)\n          throw new TypeError('Input and witness provided');\n        if (hasInput) {\n          const richunks = bscript.decompile(redeem.input);\n          if (!bscript.isPushOnly(richunks))\n            throw new TypeError('Non push-only scriptSig');\n        }\n      }\n    };\n    if (a.input) {\n      const chunks = _chunks();\n      if (!chunks || chunks.length < 1) throw new TypeError('Input too short');\n      if (!Buffer.isBuffer(_redeem().output))\n        throw new TypeError('Input is invalid');\n      checkRedeem(_redeem());\n    }\n    if (a.redeem) {\n      if (a.redeem.network && a.redeem.network !== network)\n        throw new TypeError('Network mismatch');\n      if (a.input) {\n        const redeem = _redeem();\n        if (a.redeem.output && !a.redeem.output.equals(redeem.output))\n          throw new TypeError('Redeem.output mismatch');\n        if (a.redeem.input && !a.redeem.input.equals(redeem.input))\n          throw new TypeError('Redeem.input mismatch');\n      }\n      checkRedeem(a.redeem);\n    }\n    if (a.witness) {\n      if (\n        a.redeem &&\n        a.redeem.witness &&\n        !stacksEqual(a.redeem.witness, a.witness)\n      )\n        throw new TypeError('Witness and redeem.witness mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2sh = p2sh;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,WAAD,CAArB;;AACA,MAAMK,GAAG,GAAGH,OAAO,CAACG,GAApB;;AACA,MAAMC,SAAS,GAAGN,OAAO,CAAC,WAAD,CAAzB;;AACA,SAASO,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;EACzB,IAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B,OAAO,KAAP;EAC3B,OAAOF,CAAC,CAACG,KAAF,CAAQ,CAACC,CAAD,EAAIC,CAAJ,KAAU;IACvB,OAAOD,CAAC,CAACE,MAAF,CAASL,CAAC,CAACI,CAAD,CAAV,CAAP;EACD,CAFM,CAAP;AAGD,C,CACD;AACA;AACA;;;AACA,SAASE,IAAT,CAAcP,CAAd,EAAiBQ,IAAjB,EAAuB;EACrB,IAAI,CAACR,CAAC,CAACS,OAAH,IAAc,CAACT,CAAC,CAACU,IAAjB,IAAyB,CAACV,CAAC,CAACW,MAA5B,IAAsC,CAACX,CAAC,CAACY,MAAzC,IAAmD,CAACZ,CAAC,CAACa,KAA1D,EACE,MAAM,IAAIC,SAAJ,CAAc,iBAAd,CAAN;EACFN,IAAI,GAAGrB,MAAM,CAAC4B,MAAP,CAAc;IAAEC,QAAQ,EAAE;EAAZ,CAAd,EAAkCR,IAAI,IAAI,EAA1C,CAAP;EACAZ,KAAK,CACH;IACEqB,OAAO,EAAErB,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAACT,MAAlB,CADX;IAEEsB,OAAO,EAAEb,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAACuB,MAAlB,CAFX;IAGET,IAAI,EAAEd,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAACwB,OAAN,CAAc,EAAd,CAAZ,CAHR;IAIET,MAAM,EAAEf,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAACwB,OAAN,CAAc,EAAd,CAAZ,CAJV;IAKER,MAAM,EAAEhB,KAAK,CAACsB,KAAN,CAAY;MAClBD,OAAO,EAAErB,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAACT,MAAlB,CADS;MAElBwB,MAAM,EAAEf,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAACyB,MAAlB,CAFU;MAGlBR,KAAK,EAAEjB,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAACyB,MAAlB,CAHW;MAIlBC,OAAO,EAAE1B,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAAC2B,OAAN,CAAc3B,KAAK,CAACyB,MAApB,CAAZ;IAJS,CAAZ,CALV;IAWER,KAAK,EAAEjB,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAACyB,MAAlB,CAXT;IAYEC,OAAO,EAAE1B,KAAK,CAACsB,KAAN,CAAYtB,KAAK,CAAC2B,OAAN,CAAc3B,KAAK,CAACyB,MAApB,CAAZ;EAZX,CADG,EAeHrB,CAfG,CAAL;EAiBA,IAAIiB,OAAO,GAAGjB,CAAC,CAACiB,OAAhB;;EACA,IAAI,CAACA,OAAL,EAAc;IACZA,OAAO,GAAIjB,CAAC,CAACY,MAAF,IAAYZ,CAAC,CAACY,MAAF,CAASK,OAAtB,IAAkCxB,UAAU,CAAC+B,OAAvD;EACD;;EACD,MAAMC,CAAC,GAAG;IAAER;EAAF,CAAV;;EACA,MAAMS,QAAQ,GAAG/B,IAAI,CAACL,KAAL,CAAW,MAAM;IAChC,MAAMqC,OAAO,GAAG7B,SAAS,CAAC8B,MAAV,CAAiB5B,CAAC,CAACS,OAAnB,CAAhB;IACA,MAAMoB,OAAO,GAAGF,OAAO,CAACG,SAAR,CAAkB,CAAlB,CAAhB;IACA,MAAMpB,IAAI,GAAGiB,OAAO,CAACI,KAAR,CAAc,CAAd,CAAb;IACA,OAAO;MAAEF,OAAF;MAAWnB;IAAX,CAAP;EACD,CALgB,CAAjB;;EAMA,MAAMsB,OAAO,GAAGrC,IAAI,CAACL,KAAL,CAAW,MAAM;IAC/B,OAAOI,OAAO,CAACuC,SAAR,CAAkBjC,CAAC,CAACa,KAApB,CAAP;EACD,CAFe,CAAhB;;EAGA,MAAMqB,OAAO,GAAGvC,IAAI,CAACL,KAAL,CAAW,MAAM;IAC/B,MAAM6C,MAAM,GAAGH,OAAO,EAAtB;;IACA,OAAO;MACLf,OADK;MAELN,MAAM,EAAEwB,MAAM,CAACA,MAAM,CAACjC,MAAP,GAAgB,CAAjB,CAFT;MAGLW,KAAK,EAAEnB,OAAO,CAAC0C,OAAR,CAAgBD,MAAM,CAACJ,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAhB,CAHF;MAILT,OAAO,EAAEtB,CAAC,CAACsB,OAAF,IAAa;IAJjB,CAAP;EAMD,CARe,CAAhB,CAnCqB,CA4CrB;;;EACA3B,IAAI,CAAC0C,IAAL,CAAUZ,CAAV,EAAa,SAAb,EAAwB,MAAM;IAC5B,IAAI,CAACA,CAAC,CAACf,IAAP,EAAa;IACb,MAAMiB,OAAO,GAAGN,MAAM,CAACiB,WAAP,CAAmB,EAAnB,CAAhB;IACAX,OAAO,CAACY,UAAR,CAAmBd,CAAC,CAACR,OAAF,CAAUuB,UAA7B,EAAyC,CAAzC;IACAf,CAAC,CAACf,IAAF,CAAO+B,IAAP,CAAYd,OAAZ,EAAqB,CAArB;IACA,OAAO7B,SAAS,CAAC4C,MAAV,CAAiBf,OAAjB,CAAP;EACD,CAND;EAOAhC,IAAI,CAAC0C,IAAL,CAAUZ,CAAV,EAAa,MAAb,EAAqB,MAAM;IACzB;IACA,IAAIzB,CAAC,CAACW,MAAN,EAAc,OAAOX,CAAC,CAACW,MAAF,CAASoB,KAAT,CAAe,CAAf,EAAkB,EAAlB,CAAP;IACd,IAAI/B,CAAC,CAACS,OAAN,EAAe,OAAOiB,QAAQ,GAAGhB,IAAlB;IACf,IAAIe,CAAC,CAACb,MAAF,IAAYa,CAAC,CAACb,MAAF,CAASD,MAAzB,EAAiC,OAAOpB,OAAO,CAACoD,OAAR,CAAgBlB,CAAC,CAACb,MAAF,CAASD,MAAzB,CAAP;EAClC,CALD;EAMAhB,IAAI,CAAC0C,IAAL,CAAUZ,CAAV,EAAa,QAAb,EAAuB,MAAM;IAC3B,IAAI,CAACA,CAAC,CAACf,IAAP,EAAa;IACb,OAAOhB,OAAO,CAAC0C,OAAR,CAAgB,CAACvC,GAAG,CAAC+C,UAAL,EAAiBnB,CAAC,CAACf,IAAnB,EAAyBb,GAAG,CAACgD,QAA7B,CAAhB,CAAP;EACD,CAHD,EA1DqB,CA8DrB;;EACAlD,IAAI,CAAC0C,IAAL,CAAUZ,CAAV,EAAa,QAAb,EAAuB,MAAM;IAC3B,IAAI,CAACzB,CAAC,CAACa,KAAP,EAAc;IACd,OAAOqB,OAAO,EAAd;EACD,CAHD;EAIAvC,IAAI,CAAC0C,IAAL,CAAUZ,CAAV,EAAa,OAAb,EAAsB,MAAM;IAC1B,IAAI,CAACzB,CAAC,CAACY,MAAH,IAAa,CAACZ,CAAC,CAACY,MAAF,CAASC,KAAvB,IAAgC,CAACb,CAAC,CAACY,MAAF,CAASD,MAA9C,EAAsD;IACtD,OAAOjB,OAAO,CAAC0C,OAAR,CACL,GAAGU,MAAH,CAAUpD,OAAO,CAACuC,SAAR,CAAkBjC,CAAC,CAACY,MAAF,CAASC,KAA3B,CAAV,EAA6Cb,CAAC,CAACY,MAAF,CAASD,MAAtD,CADK,CAAP;EAGD,CALD;EAMAhB,IAAI,CAAC0C,IAAL,CAAUZ,CAAV,EAAa,SAAb,EAAwB,MAAM;IAC5B,IAAIA,CAAC,CAACb,MAAF,IAAYa,CAAC,CAACb,MAAF,CAASU,OAAzB,EAAkC,OAAOG,CAAC,CAACb,MAAF,CAASU,OAAhB;IAClC,IAAIG,CAAC,CAACZ,KAAN,EAAa,OAAO,EAAP;EACd,CAHD;EAIAlB,IAAI,CAAC0C,IAAL,CAAUZ,CAAV,EAAa,MAAb,EAAqB,MAAM;IACzB,MAAMsB,SAAS,GAAG,CAAC,MAAD,CAAlB;IACA,IAAItB,CAAC,CAACb,MAAF,KAAaoC,SAAjB,EAA4BD,SAAS,CAACE,IAAV,CAAexB,CAAC,CAACb,MAAF,CAASsC,IAAxB;IAC5B,OAAOH,SAAS,CAACI,IAAV,CAAe,GAAf,CAAP;EACD,CAJD;;EAKA,IAAI3C,IAAI,CAACQ,QAAT,EAAmB;IACjB,IAAIN,IAAI,GAAGW,MAAM,CAAC+B,IAAP,CAAY,EAAZ,CAAX;;IACA,IAAIpD,CAAC,CAACS,OAAN,EAAe;MACb,IAAIiB,QAAQ,GAAGG,OAAX,KAAuBZ,OAAO,CAACuB,UAAnC,EACE,MAAM,IAAI1B,SAAJ,CAAc,qCAAd,CAAN;MACF,IAAIY,QAAQ,GAAGhB,IAAX,CAAgBR,MAAhB,KAA2B,EAA/B,EAAmC,MAAM,IAAIY,SAAJ,CAAc,iBAAd,CAAN;MACnCJ,IAAI,GAAGgB,QAAQ,GAAGhB,IAAlB;IACD;;IACD,IAAIV,CAAC,CAACU,IAAN,EAAY;MACV,IAAIA,IAAI,CAACR,MAAL,GAAc,CAAd,IAAmB,CAACQ,IAAI,CAACJ,MAAL,CAAYN,CAAC,CAACU,IAAd,CAAxB,EACE,MAAM,IAAII,SAAJ,CAAc,eAAd,CAAN,CADF,KAEKJ,IAAI,GAAGV,CAAC,CAACU,IAAT;IACN;;IACD,IAAIV,CAAC,CAACW,MAAN,EAAc;MACZ,IACEX,CAAC,CAACW,MAAF,CAAST,MAAT,KAAoB,EAApB,IACAF,CAAC,CAACW,MAAF,CAAS,CAAT,MAAgBd,GAAG,CAAC+C,UADpB,IAEA5C,CAAC,CAACW,MAAF,CAAS,CAAT,MAAgB,IAFhB,IAGAX,CAAC,CAACW,MAAF,CAAS,EAAT,MAAiBd,GAAG,CAACgD,QAJvB,EAME,MAAM,IAAI/B,SAAJ,CAAc,mBAAd,CAAN;MACF,MAAMuC,KAAK,GAAGrD,CAAC,CAACW,MAAF,CAASoB,KAAT,CAAe,CAAf,EAAkB,EAAlB,CAAd;MACA,IAAIrB,IAAI,CAACR,MAAL,GAAc,CAAd,IAAmB,CAACQ,IAAI,CAACJ,MAAL,CAAY+C,KAAZ,CAAxB,EACE,MAAM,IAAIvC,SAAJ,CAAc,eAAd,CAAN,CADF,KAEKJ,IAAI,GAAG2C,KAAP;IACN,CAzBgB,CA0BjB;;;IACA,MAAMC,WAAW,GAAG1C,MAAM,IAAI;MAC5B;MACA,IAAIA,MAAM,CAACD,MAAX,EAAmB;QACjB,MAAMsB,SAAS,GAAGvC,OAAO,CAACuC,SAAR,CAAkBrB,MAAM,CAACD,MAAzB,CAAlB;QACA,IAAI,CAACsB,SAAD,IAAcA,SAAS,CAAC/B,MAAV,GAAmB,CAArC,EACE,MAAM,IAAIY,SAAJ,CAAc,yBAAd,CAAN,CAHe,CAIjB;;QACA,MAAMuC,KAAK,GAAG9D,OAAO,CAACoD,OAAR,CAAgB/B,MAAM,CAACD,MAAvB,CAAd;QACA,IAAID,IAAI,CAACR,MAAL,GAAc,CAAd,IAAmB,CAACQ,IAAI,CAACJ,MAAL,CAAY+C,KAAZ,CAAxB,EACE,MAAM,IAAIvC,SAAJ,CAAc,eAAd,CAAN,CADF,KAEKJ,IAAI,GAAG2C,KAAP;MACN;;MACD,IAAIzC,MAAM,CAACC,KAAX,EAAkB;QAChB,MAAM0C,QAAQ,GAAG3C,MAAM,CAACC,KAAP,CAAaX,MAAb,GAAsB,CAAvC;QACA,MAAMsD,UAAU,GAAG5C,MAAM,CAACU,OAAP,IAAkBV,MAAM,CAACU,OAAP,CAAepB,MAAf,GAAwB,CAA7D;QACA,IAAI,CAACqD,QAAD,IAAa,CAACC,UAAlB,EAA8B,MAAM,IAAI1C,SAAJ,CAAc,aAAd,CAAN;QAC9B,IAAIyC,QAAQ,IAAIC,UAAhB,EACE,MAAM,IAAI1C,SAAJ,CAAc,4BAAd,CAAN;;QACF,IAAIyC,QAAJ,EAAc;UACZ,MAAME,QAAQ,GAAG/D,OAAO,CAACuC,SAAR,CAAkBrB,MAAM,CAACC,KAAzB,CAAjB;UACA,IAAI,CAACnB,OAAO,CAACgE,UAAR,CAAmBD,QAAnB,CAAL,EACE,MAAM,IAAI3C,SAAJ,CAAc,yBAAd,CAAN;QACH;MACF;IACF,CAxBD;;IAyBA,IAAId,CAAC,CAACa,KAAN,EAAa;MACX,MAAMsB,MAAM,GAAGH,OAAO,EAAtB;;MACA,IAAI,CAACG,MAAD,IAAWA,MAAM,CAACjC,MAAP,GAAgB,CAA/B,EAAkC,MAAM,IAAIY,SAAJ,CAAc,iBAAd,CAAN;MAClC,IAAI,CAACO,MAAM,CAACsC,QAAP,CAAgBzB,OAAO,GAAGvB,MAA1B,CAAL,EACE,MAAM,IAAIG,SAAJ,CAAc,kBAAd,CAAN;MACFwC,WAAW,CAACpB,OAAO,EAAR,CAAX;IACD;;IACD,IAAIlC,CAAC,CAACY,MAAN,EAAc;MACZ,IAAIZ,CAAC,CAACY,MAAF,CAASK,OAAT,IAAoBjB,CAAC,CAACY,MAAF,CAASK,OAAT,KAAqBA,OAA7C,EACE,MAAM,IAAIH,SAAJ,CAAc,kBAAd,CAAN;;MACF,IAAId,CAAC,CAACa,KAAN,EAAa;QACX,MAAMD,MAAM,GAAGsB,OAAO,EAAtB;;QACA,IAAIlC,CAAC,CAACY,MAAF,CAASD,MAAT,IAAmB,CAACX,CAAC,CAACY,MAAF,CAASD,MAAT,CAAgBL,MAAhB,CAAuBM,MAAM,CAACD,MAA9B,CAAxB,EACE,MAAM,IAAIG,SAAJ,CAAc,wBAAd,CAAN;QACF,IAAId,CAAC,CAACY,MAAF,CAASC,KAAT,IAAkB,CAACb,CAAC,CAACY,MAAF,CAASC,KAAT,CAAeP,MAAf,CAAsBM,MAAM,CAACC,KAA7B,CAAvB,EACE,MAAM,IAAIC,SAAJ,CAAc,uBAAd,CAAN;MACH;;MACDwC,WAAW,CAACtD,CAAC,CAACY,MAAH,CAAX;IACD;;IACD,IAAIZ,CAAC,CAACsB,OAAN,EAAe;MACb,IACEtB,CAAC,CAACY,MAAF,IACAZ,CAAC,CAACY,MAAF,CAASU,OADT,IAEA,CAACvB,WAAW,CAACC,CAAC,CAACY,MAAF,CAASU,OAAV,EAAmBtB,CAAC,CAACsB,OAArB,CAHd,EAKE,MAAM,IAAIR,SAAJ,CAAc,qCAAd,CAAN;IACH;EACF;;EACD,OAAO3B,MAAM,CAAC4B,MAAP,CAAcU,CAAd,EAAiBzB,CAAjB,CAAP;AACD;;AACDX,OAAO,CAACkB,IAAR,GAAeA,IAAf"},"metadata":{},"sourceType":"script"}