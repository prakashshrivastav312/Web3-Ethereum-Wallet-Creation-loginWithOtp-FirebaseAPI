{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UInt32 = void 0;\n\nvar uint_1 = require(\"./uint\");\n\nvar buffer_1 = require(\"buffer/\");\n/**\n * Derived UInt class for serializing/deserializing 32 bit UInt\n */\n\n\nvar UInt32 =\n/** @class */\nfunction (_super) {\n  __extends(UInt32, _super);\n\n  function UInt32(bytes) {\n    return _super.call(this, bytes !== null && bytes !== void 0 ? bytes : UInt32.defaultUInt32.bytes) || this;\n  }\n\n  UInt32.fromParser = function (parser) {\n    return new UInt32(parser.read(UInt32.width));\n  };\n  /**\n   * Construct a UInt32 object from a number\n   *\n   * @param val UInt32 object or number\n   */\n\n\n  UInt32.from = function (val) {\n    if (val instanceof UInt32) {\n      return val;\n    }\n\n    var buf = buffer_1.Buffer.alloc(UInt32.width);\n\n    if (typeof val === 'string') {\n      var num = Number.parseInt(val);\n      buf.writeUInt32BE(num, 0);\n      return new UInt32(buf);\n    }\n\n    if (typeof val === 'number') {\n      buf.writeUInt32BE(val, 0);\n      return new UInt32(buf);\n    }\n\n    throw new Error('Cannot construct UInt32 from given value');\n  };\n  /**\n   * get the value of a UInt32 object\n   *\n   * @returns the number represented by this.bytes\n   */\n\n\n  UInt32.prototype.valueOf = function () {\n    return this.bytes.readUInt32BE(0);\n  };\n\n  UInt32.width = 32 / 8; // 4\n\n  UInt32.defaultUInt32 = new UInt32(buffer_1.Buffer.alloc(UInt32.width));\n  return UInt32;\n}(uint_1.UInt);\n\nexports.UInt32 = UInt32;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AAEA;;;;;AAGA;AAAA;AAAA;EAAqBA;;EAInB,gBAAYC,KAAZ,EAAyB;WACvBC,kBAAMD,KAAK,SAAL,SAAK,WAAL,WAASE,MAAM,CAACC,aAAP,CAAqBH,KAApC,KAA0C;EAC3C;;EAEME,oBAAP,UAAkBE,MAAlB,EAAsC;IACpC,OAAO,IAAIF,MAAJ,CAAWE,MAAM,CAACC,IAAP,CAAYH,MAAM,CAACI,KAAnB,CAAX,CAAP;EACD,CAFM;EAIP;;;;;;;EAKOJ,cAAP,UAAgDK,GAAhD,EAAsD;IACpD,IAAIA,GAAG,YAAYL,MAAnB,EAA2B;MACzB,OAAOK,GAAP;IACD;;IAED,IAAMC,GAAG,GAAGC,gBAAOC,KAAP,CAAaR,MAAM,CAACI,KAApB,CAAZ;;IAEA,IAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;MAC3B,IAAMI,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBN,GAAhB,CAAZ;MACAC,GAAG,CAACM,aAAJ,CAAkBH,GAAlB,EAAuB,CAAvB;MACA,OAAO,IAAIT,MAAJ,CAAWM,GAAX,CAAP;IACD;;IAED,IAAI,OAAOD,GAAP,KAAe,QAAnB,EAA6B;MAC3BC,GAAG,CAACM,aAAJ,CAAkBP,GAAlB,EAAuB,CAAvB;MACA,OAAO,IAAIL,MAAJ,CAAWM,GAAX,CAAP;IACD;;IAED,MAAM,IAAIO,KAAJ,CAAU,0CAAV,CAAN;EACD,CAnBM;EAqBP;;;;;;;EAKAb;IACE,OAAO,KAAKF,KAAL,CAAWgB,YAAX,CAAwB,CAAxB,CAAP;EACD,CAFD;;EA1C0Bd,eAAgB,KAAK,CAArB,CAD5B,CACmD;;EACjCA,uBAAwB,IAAIA,MAAJ,CAAWO,gBAAOC,KAAP,CAAaR,MAAM,CAACI,KAApB,CAAX,CAAxB;EA4ClB;AAAC,CA9CD,CAAqBW,WAArB;;AAgDSC","names":["__extends","bytes","_super","UInt32","defaultUInt32","parser","read","width","val","buf","buffer_1","alloc","num","Number","parseInt","writeUInt32BE","Error","readUInt32BE","uint_1","exports"],"sourceRoot":"","sources":["../../src/types/uint-32.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}