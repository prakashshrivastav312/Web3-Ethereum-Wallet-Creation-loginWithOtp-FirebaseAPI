{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clawbackClaimableBalance = clawbackClaimableBalance;\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nvar _claim_claimable_balance = require('./claim_claimable_balance');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Creates a clawback operation for a claimable balance.\n *\n * @function\n * @alias Operation.clawbackClaimableBalance\n * @param {object} opts - Options object\n * @param {string} opts.balanceId - The claimable balance ID to be clawed back.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @return {xdr.ClawbackClaimableBalanceOp}\n *\n * @example\n * const op = Operation.clawbackClaimableBalance({\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\n * });\n *\n * @link https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-claimable-balance-operation\n */\n\n\nfunction clawbackClaimableBalance() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  (0, _claim_claimable_balance.validateClaimableBalanceId)(opts.balanceId);\n  var attributes = {\n    balanceId: _stellarXdr_generated2.default.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\n  };\n  var opAttributes = {\n    body: _stellarXdr_generated2.default.OperationBody.clawbackClaimableBalance(new _stellarXdr_generated2.default.ClawbackClaimableBalanceOp(attributes))\n  };\n  this.setSourceAccount(opAttributes, opts);\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","clawbackClaimableBalance","_stellarXdr_generated","require","_stellarXdr_generated2","_interopRequireDefault","_claim_claimable_balance","obj","__esModule","default","opts","arguments","length","undefined","validateClaimableBalanceId","balanceId","attributes","ClaimableBalanceId","fromXDR","opAttributes","body","OperationBody","ClawbackClaimableBalanceOp","setSourceAccount","Operation"],"sources":["C:/Users/acer/node_modules/stellar-base/lib/operations/clawback_claimable_balance.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clawbackClaimableBalance = clawbackClaimableBalance;\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nvar _claim_claimable_balance = require('./claim_claimable_balance');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a clawback operation for a claimable balance.\n *\n * @function\n * @alias Operation.clawbackClaimableBalance\n * @param {object} opts - Options object\n * @param {string} opts.balanceId - The claimable balance ID to be clawed back.\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @return {xdr.ClawbackClaimableBalanceOp}\n *\n * @example\n * const op = Operation.clawbackClaimableBalance({\n *   balanceId: '00000000da0d57da7d4850e7fc10d2a9d0ebc731f7afb40574c03395b17d49149b91f5be',\n * });\n *\n * @link https://github.com/stellar/stellar-protocol/blob/master/core/cap-0035.md#clawback-claimable-balance-operation\n */\nfunction clawbackClaimableBalance() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  (0, _claim_claimable_balance.validateClaimableBalanceId)(opts.balanceId);\n\n  var attributes = {\n    balanceId: _stellarXdr_generated2.default.ClaimableBalanceId.fromXDR(opts.balanceId, 'hex')\n  };\n\n  var opAttributes = {\n    body: _stellarXdr_generated2.default.OperationBody.clawbackClaimableBalance(new _stellarXdr_generated2.default.ClawbackClaimableBalanceOp(attributes))\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,wBAAR,GAAmCA,wBAAnC;;AAEA,IAAIC,qBAAqB,GAAGC,OAAO,CAAC,oCAAD,CAAnC;;AAEA,IAAIC,sBAAsB,GAAGC,sBAAsB,CAACH,qBAAD,CAAnD;;AAEA,IAAII,wBAAwB,GAAGH,OAAO,CAAC,2BAAD,CAAtC;;AAEA,SAASE,sBAAT,CAAgCE,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEE,OAAO,EAAEF;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASN,wBAAT,GAAoC;EAClC,IAAIS,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;EAEA,CAAC,GAAGL,wBAAwB,CAACQ,0BAA7B,EAAyDJ,IAAI,CAACK,SAA9D;EAEA,IAAIC,UAAU,GAAG;IACfD,SAAS,EAAEX,sBAAsB,CAACK,OAAvB,CAA+BQ,kBAA/B,CAAkDC,OAAlD,CAA0DR,IAAI,CAACK,SAA/D,EAA0E,KAA1E;EADI,CAAjB;EAIA,IAAII,YAAY,GAAG;IACjBC,IAAI,EAAEhB,sBAAsB,CAACK,OAAvB,CAA+BY,aAA/B,CAA6CpB,wBAA7C,CAAsE,IAAIG,sBAAsB,CAACK,OAAvB,CAA+Ba,0BAAnC,CAA8DN,UAA9D,CAAtE;EADW,CAAnB;EAGA,KAAKO,gBAAL,CAAsBJ,YAAtB,EAAoCT,IAApC;EAEA,OAAO,IAAIN,sBAAsB,CAACK,OAAvB,CAA+Be,SAAnC,CAA6CL,YAA7C,CAAP;AACD"},"metadata":{},"sourceType":"script"}