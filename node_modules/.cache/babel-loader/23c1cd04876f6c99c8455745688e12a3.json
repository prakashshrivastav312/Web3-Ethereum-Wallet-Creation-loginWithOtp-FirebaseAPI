{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.offchainCompleteWithdrawal = exports.offchainCancelWithdrawal = exports.offchainStoreWithdrawal = exports.offchainBroadcast = exports.getDepositAddressesForAccount = exports.removeDepositAddress = exports.registerTronTrc = exports.storeTrcContractAddress = exports.storeErc20ContractAddress = exports.registerEthereumErc20 = exports.assignDepositAddress = exports.getWithdrawals = exports.checkAddressExists = exports.generateDepositAddresses = exports.generateDepositAddress = void 0;\n\nconst tatum_1 = require(\"../connector/tatum\");\n\nconst model_1 = require(\"../model\");\n\nconst CreateOffchainAddressesBatch_1 = require(\"../model/request/CreateOffchainAddressesBatch\");\n\nconst CreateTrcOffchain_1 = require(\"../model/request/CreateTrcOffchain\");\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/generateDepositAddress\" target=\"_blank\">Tatum API documentation</a>\n */\n\n\nconst generateDepositAddress = async (id, index) => {\n  const url = `/v3/offchain/account/${id}/address`;\n  return tatum_1.post(index === undefined ? url : `${url}?index=${index}`);\n};\n\nexports.generateDepositAddress = generateDepositAddress;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/generateDepositAddressesBatch\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst generateDepositAddresses = async batch => tatum_1.post(`/v3/offchain/account/address/batch`, batch, CreateOffchainAddressesBatch_1.AddressBatch);\n\nexports.generateDepositAddresses = generateDepositAddresses;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/addressExists\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst checkAddressExists = async (address, currency, index) => {\n  const url = `/v3/offchain/account/address/${address}/${currency}`;\n  return tatum_1.get(index === undefined ? url : `${url}?index=${index}`);\n};\n\nexports.checkAddressExists = checkAddressExists;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/GetWithdrawals\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst getWithdrawals = async function (status, currency) {\n  let pageSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 50;\n  let offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let url = `/v3/offchain/withdrawal?pageSize=${pageSize}&offset=${offset}`;\n\n  if (status) {\n    url += `&status=${status}`;\n  }\n\n  if (currency) {\n    url += `&currency=${currency}`;\n  }\n\n  return tatum_1.get(url);\n};\n\nexports.getWithdrawals = getWithdrawals;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/assignAddress\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst assignDepositAddress = async (id, address) => tatum_1.post(`/v3/offchain/account/${id}/address/${address}`);\n\nexports.assignDepositAddress = assignDepositAddress;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/createErc20\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst registerEthereumErc20 = async data => tatum_1.post(`/v3/offchain/ethereum/erc20`, data, model_1.CreateErc20Offchain);\n\nexports.registerEthereumErc20 = registerEthereumErc20;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/storeErc20Address\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst storeErc20ContractAddress = async (name, address) => tatum_1.post(`/v3/offchain/ethereum/erc20/${name}/${address}`);\n\nexports.storeErc20ContractAddress = storeErc20ContractAddress;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/storeTrcAddress\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst storeTrcContractAddress = async (name, address) => tatum_1.post(`/v3/offchain/tron/trc/${name}/${address}`);\n\nexports.storeTrcContractAddress = storeTrcContractAddress;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/createTrc\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst registerTronTrc = async data => tatum_1.post(`/v3/offchain/tron/trc`, data, CreateTrcOffchain_1.CreateTrcOffchain);\n\nexports.registerTronTrc = registerTronTrc;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/removeAddress\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst removeDepositAddress = async (id, address) => tatum_1.httpDelete(`/v3/offchain/account/${id}/address/${address}`);\n\nexports.removeDepositAddress = removeDepositAddress;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/getAllDepositAddresses\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst getDepositAddressesForAccount = async id => tatum_1.get(`/v3/offchain/account/${id}/address`);\n\nexports.getDepositAddressesForAccount = getDepositAddressesForAccount;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/broadcastBlockchainTransaction\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst offchainBroadcast = async data => tatum_1.post(`/v3/offchain/withdrawal/broadcast`, data, model_1.BroadcastWithdrawal);\n\nexports.offchainBroadcast = offchainBroadcast;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/storeWithdrawal\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst offchainStoreWithdrawal = async data => tatum_1.post(`/v3/offchain/withdrawal`, data);\n\nexports.offchainStoreWithdrawal = offchainStoreWithdrawal;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/cancelInProgressWithdrawal\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst offchainCancelWithdrawal = async function (id) {\n  let revert = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return tatum_1.httpDelete(`/v3/offchain/withdrawal/${id}?revert=${revert}`);\n};\n\nexports.offchainCancelWithdrawal = offchainCancelWithdrawal;\n/**\n * For more details, see <a href=\"https://tatum.io/apidoc#operation/completeWithdrawal\" target=\"_blank\">Tatum API documentation</a>\n */\n\nconst offchainCompleteWithdrawal = async (id, txId) => tatum_1.put(`/v3/offchain/withdrawal/${id}/${txId}`);\n\nexports.offchainCompleteWithdrawal = offchainCompleteWithdrawal;","map":{"version":3,"mappings":"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","names":["generateDepositAddress","id","index","url","tatum_1","undefined","exports","generateDepositAddresses","batch","CreateOffchainAddressesBatch_1","checkAddressExists","address","currency","getWithdrawals","status","pageSize","offset","assignDepositAddress","registerEthereumErc20","data","model_1","storeErc20ContractAddress","name","storeTrcContractAddress","registerTronTrc","CreateTrcOffchain_1","removeDepositAddress","getDepositAddressesForAccount","offchainBroadcast","offchainStoreWithdrawal","offchainCancelWithdrawal","revert","offchainCompleteWithdrawal","txId"],"sourceRoot":"","sources":["../../../src/offchain/common.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}