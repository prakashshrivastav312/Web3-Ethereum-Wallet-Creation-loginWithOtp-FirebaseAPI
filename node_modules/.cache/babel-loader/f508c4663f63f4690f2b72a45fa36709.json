{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isNumericValidator from 'validator/lib/isNumeric';\nexport var IS_NUMBER_STRING = 'isNumberString';\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\n\nexport function isNumberString(value, options) {\n  return typeof value === 'string' && isNumericValidator(value, options);\n}\n/**\n * Checks if the string is numeric.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsNumberString(options, validationOptions) {\n  return ValidateBy({\n    name: IS_NUMBER_STRING,\n    constraints: [options],\n    validator: {\n      validate: function (value, args) {\n        return isNumberString(value, args.constraints[0]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a number string';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AAGA,OAAO,IAAMC,gBAAgB,GAAG,gBAAzB;AAEP;;;;;AAIA,OAAM,SAAUC,cAAV,CAAyBC,KAAzB,EAAyCC,OAAzC,EAA+E;EACnF,OAAO,OAAOD,KAAP,KAAiB,QAAjB,IAA6BH,kBAAkB,CAACG,KAAD,EAAQC,OAAR,CAAtD;AACD;AAED;;;;;AAIA,OAAM,SAAUC,cAAV,CACJD,OADI,EAEJE,iBAFI,EAEiC;EAErC,OAAOP,UAAU,CACf;IACEQ,IAAI,EAAEN,gBADR;IAEEO,WAAW,EAAE,CAACJ,OAAD,CAFf;IAGEK,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACP,KAAD,EAAQQ,IAAR,EAAY;QAAc,qBAAc,CAACR,KAAD,EAAQQ,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAR,CAAd;MAA0C,CADrE;MAETI,cAAc,EAAEd,YAAY,CAAC,sBAAU;QAAI,iBAAU,GAAG,mCAAb;MAAgD,CAA/D,EAAiEQ,iBAAjE;IAFnB;EAHb,CADe,EASfA,iBATe,CAAjB;AAWD","names":["buildMessage","ValidateBy","isNumericValidator","IS_NUMBER_STRING","isNumberString","value","options","IsNumberString","validationOptions","name","constraints","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsNumberString.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}