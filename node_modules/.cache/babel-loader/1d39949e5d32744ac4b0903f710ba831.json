{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BooleanValue = exports.BooleanType = void 0;\n\nconst types_1 = require(\"./types\");\n\nclass BooleanType extends types_1.PrimitiveType {\n  constructor() {\n    super(\"bool\");\n  }\n\n}\n\nexports.BooleanType = BooleanType;\n/**\n * A boolean value fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\n\nclass BooleanValue extends types_1.PrimitiveValue {\n  constructor(value) {\n    super(new BooleanType());\n    this.value = value;\n  }\n  /**\n   * Returns whether two objects have the same value.\n   *\n   * @param other another BooleanValue\n   */\n\n\n  equals(other) {\n    return this.value === other.value;\n  }\n\n  isTrue() {\n    return this.value === true;\n  }\n\n  isFalse() {\n    return !this.isTrue();\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.BooleanValue = BooleanValue;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,MAAaA,WAAb,SAAiCC,qBAAjC,CAA8C;EAC1CC;IACI,MAAM,MAAN;EACH;;AAHyC;;AAA9CC;AAMA;;;;AAGA,MAAaC,YAAb,SAAkCH,sBAAlC,CAAgD;EAG5CC,YAAYG,KAAZ,EAA0B;IACtB,MAAM,IAAIL,WAAJ,EAAN;IACA,KAAKK,KAAL,GAAaA,KAAb;EACH;EAED;;;;;;;EAKAC,MAAM,CAACC,KAAD,EAAoB;IACtB,OAAO,KAAKF,KAAL,KAAeE,KAAK,CAACF,KAA5B;EACH;;EAEDG,MAAM;IACF,OAAO,KAAKH,KAAL,KAAe,IAAtB;EACH;;EAEDI,OAAO;IACH,OAAO,CAAC,KAAKD,MAAL,EAAR;EACH;;EAEDE,OAAO;IACH,OAAO,KAAKL,KAAZ;EACH;;AA3B2C;;AAAhDF","names":["BooleanType","types_1","constructor","exports","BooleanValue","value","equals","other","isTrue","isFalse","valueOf"],"sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/boolean.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}