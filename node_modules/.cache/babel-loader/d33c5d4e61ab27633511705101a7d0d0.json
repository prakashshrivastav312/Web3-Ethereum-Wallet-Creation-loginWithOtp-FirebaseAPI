{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _amino = require(\"../amino\");\n\nvar crypto = _interopRequireWildcard(require(\"../crypto\"));\n\nvar _types = require(\"../types\");\n/**\n * Creates a new transaction object.\n * @example\n * var rawTx = {\n *   accountNumber: 1,\n *   chainId: 'bnbchain-1000',\n *   memo: '',\n *   msg: {},\n *   type: 'NewOrderMsg',\n *   sequence: 29,\n *   source: 0\n * };\n * var tx = new Transaction(rawTx);\n * @property {Buffer} raw The raw vstruct encoded transaction\n * @param {Number} data.account_number account number\n * @param {String} data.chain_id bnbChain Id\n * @param {String} data.memo transaction memo\n * @param {String} type transaction type\n * @param {Msg} data.msg object data of tx type\n * @param {Number} data.sequence transaction counts\n * @param {Number} data.source where does this transaction come from\n */\n\n\nvar Transaction = /*#__PURE__*/function () {\n  // DEPRECATED: Retained for backward compatibility,\n  function Transaction(data) {\n    (0, _classCallCheck2[\"default\"])(this, Transaction);\n    (0, _defineProperty2[\"default\"])(this, \"sequence\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"accountNumber\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"chainId\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"msg\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"baseMsg\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"memo\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"source\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"signatures\", void 0);\n    data = data || {};\n\n    if (!data.chainId) {\n      throw new Error(\"chain id should not be null\");\n    }\n\n    this.sequence = data.sequence || 0;\n    this.accountNumber = data.accountNumber || 0;\n    this.chainId = data.chainId;\n    this.msg = data.msg;\n    this.baseMsg = data.baseMsg;\n    this.memo = data.memo;\n    this.source = data.source || 0; // default value is 0\n\n    this.signatures = [];\n  }\n  /**\n   * generate the sign bytes for a transaction, given a msg\n   * @param {SignMsg} concrete msg object\n   * @return {Buffer}\n   **/\n\n\n  (0, _createClass2[\"default\"])(Transaction, [{\n    key: \"getSignBytes\",\n    value: function getSignBytes(msg) {\n      msg = msg || this.baseMsg && this.baseMsg.getSignMsg();\n      var signMsg = {\n        account_number: this.accountNumber.toString(),\n        chain_id: this.chainId,\n        data: null,\n        memo: this.memo,\n        msgs: [msg],\n        sequence: this.sequence.toString(),\n        source: this.source.toString()\n      };\n      return (0, _amino.convertObjectToSignBytes)(signMsg);\n    }\n    /**\n     * attaches a signature to the transaction\n     * @param {Elliptic.PublicKey} pubKey\n     * @param {Buffer} signature\n     * @return {Transaction}\n     **/\n\n  }, {\n    key: \"addSignature\",\n    value: function addSignature(pubKey, signature) {\n      var pubKeyBuf = this._serializePubKey(pubKey); // => Buffer\n\n\n      this.signatures = [{\n        pub_key: pubKeyBuf,\n        signature: signature,\n        account_number: this.accountNumber,\n        sequence: this.sequence\n      }];\n      return this;\n    }\n    /**\n     * sign transaction with a given private key and msg\n     * @param {string} privateKey private key hex string\n     * @param {SignMsg} concrete msg object\n     * @return {Transaction}\n     **/\n\n  }, {\n    key: \"sign\",\n    value: function sign(privateKey, msg) {\n      if (!privateKey) {\n        throw new Error(\"private key should not be null\");\n      }\n\n      var signBytes = this.getSignBytes(msg);\n      var privKeyBuf = Buffer.from(privateKey, \"hex\");\n      var signature = crypto.generateSignature(signBytes.toString(\"hex\"), privKeyBuf);\n      this.addSignature(crypto.generatePubKey(privKeyBuf), signature);\n      return this;\n    }\n    /**\n     * encode signed transaction to hex which is compatible with amino\n     */\n\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      if (!this.signatures) {\n        throw new Error(\"need signature\");\n      }\n\n      var msg = this.msg || this.baseMsg && this.baseMsg.getMsg();\n      var stdTx = {\n        msg: [msg],\n        signatures: this.signatures,\n        memo: this.memo,\n        source: this.source,\n        // sdk value is 0, web wallet value is 1\n        data: \"\",\n        aminoPrefix: _types.AminoPrefix.StdTx\n      };\n      var bytes = (0, _amino.marshalBinary)(stdTx);\n      return bytes.toString(\"hex\");\n    }\n    /**\n     * serializes a public key in a 33-byte compressed format.\n     * @param {Elliptic.PublicKey} unencodedPubKey\n     * @return {Buffer}\n     */\n\n  }, {\n    key: \"_serializePubKey\",\n    value: function _serializePubKey(unencodedPubKey) {\n      var format = 0x2;\n      var y = unencodedPubKey.getY();\n      var x = unencodedPubKey.getX();\n\n      if (y && y.isOdd()) {\n        format |= 0x1;\n      }\n\n      var pubBz = Buffer.concat([_amino.UVarInt.encode(format), x.toArrayLike(Buffer, \"be\", 32)]); // prefixed with length\n\n      pubBz = (0, _amino.encodeBinaryByteArray)(pubBz); // add the amino prefix\n\n      pubBz = Buffer.concat([Buffer.from(\"EB5AE987\", \"hex\"), pubBz]);\n      return pubBz;\n    }\n  }]);\n  return Transaction;\n}();\n\nexports[\"default\"] = Transaction;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_defineProperty2","_amino","crypto","_types","Transaction","data","chainId","Error","sequence","accountNumber","msg","baseMsg","memo","source","signatures","key","getSignBytes","getSignMsg","signMsg","account_number","toString","chain_id","msgs","convertObjectToSignBytes","addSignature","pubKey","signature","pubKeyBuf","_serializePubKey","pub_key","sign","privateKey","signBytes","privKeyBuf","Buffer","from","generateSignature","generatePubKey","serialize","getMsg","stdTx","aminoPrefix","AminoPrefix","StdTx","bytes","marshalBinary","unencodedPubKey","format","y","getY","x","getX","isOdd","pubBz","concat","UVarInt","encode","toArrayLike","encodeBinaryByteArray"],"sources":["C:/Users/acer/node_modules/@binance-chain/javascript-sdk/lib/tx/index.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _amino = require(\"../amino\");\n\nvar crypto = _interopRequireWildcard(require(\"../crypto\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Creates a new transaction object.\n * @example\n * var rawTx = {\n *   accountNumber: 1,\n *   chainId: 'bnbchain-1000',\n *   memo: '',\n *   msg: {},\n *   type: 'NewOrderMsg',\n *   sequence: 29,\n *   source: 0\n * };\n * var tx = new Transaction(rawTx);\n * @property {Buffer} raw The raw vstruct encoded transaction\n * @param {Number} data.account_number account number\n * @param {String} data.chain_id bnbChain Id\n * @param {String} data.memo transaction memo\n * @param {String} type transaction type\n * @param {Msg} data.msg object data of tx type\n * @param {Number} data.sequence transaction counts\n * @param {Number} data.source where does this transaction come from\n */\nvar Transaction = /*#__PURE__*/function () {\n  // DEPRECATED: Retained for backward compatibility,\n  function Transaction(data) {\n    (0, _classCallCheck2[\"default\"])(this, Transaction);\n    (0, _defineProperty2[\"default\"])(this, \"sequence\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"accountNumber\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"chainId\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"msg\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"baseMsg\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"memo\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"source\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"signatures\", void 0);\n    data = data || {};\n\n    if (!data.chainId) {\n      throw new Error(\"chain id should not be null\");\n    }\n\n    this.sequence = data.sequence || 0;\n    this.accountNumber = data.accountNumber || 0;\n    this.chainId = data.chainId;\n    this.msg = data.msg;\n    this.baseMsg = data.baseMsg;\n    this.memo = data.memo;\n    this.source = data.source || 0; // default value is 0\n\n    this.signatures = [];\n  }\n  /**\n   * generate the sign bytes for a transaction, given a msg\n   * @param {SignMsg} concrete msg object\n   * @return {Buffer}\n   **/\n\n\n  (0, _createClass2[\"default\"])(Transaction, [{\n    key: \"getSignBytes\",\n    value: function getSignBytes(msg) {\n      msg = msg || this.baseMsg && this.baseMsg.getSignMsg();\n      var signMsg = {\n        account_number: this.accountNumber.toString(),\n        chain_id: this.chainId,\n        data: null,\n        memo: this.memo,\n        msgs: [msg],\n        sequence: this.sequence.toString(),\n        source: this.source.toString()\n      };\n      return (0, _amino.convertObjectToSignBytes)(signMsg);\n    }\n    /**\n     * attaches a signature to the transaction\n     * @param {Elliptic.PublicKey} pubKey\n     * @param {Buffer} signature\n     * @return {Transaction}\n     **/\n\n  }, {\n    key: \"addSignature\",\n    value: function addSignature(pubKey, signature) {\n      var pubKeyBuf = this._serializePubKey(pubKey); // => Buffer\n\n\n      this.signatures = [{\n        pub_key: pubKeyBuf,\n        signature: signature,\n        account_number: this.accountNumber,\n        sequence: this.sequence\n      }];\n      return this;\n    }\n    /**\n     * sign transaction with a given private key and msg\n     * @param {string} privateKey private key hex string\n     * @param {SignMsg} concrete msg object\n     * @return {Transaction}\n     **/\n\n  }, {\n    key: \"sign\",\n    value: function sign(privateKey, msg) {\n      if (!privateKey) {\n        throw new Error(\"private key should not be null\");\n      }\n\n      var signBytes = this.getSignBytes(msg);\n      var privKeyBuf = Buffer.from(privateKey, \"hex\");\n      var signature = crypto.generateSignature(signBytes.toString(\"hex\"), privKeyBuf);\n      this.addSignature(crypto.generatePubKey(privKeyBuf), signature);\n      return this;\n    }\n    /**\n     * encode signed transaction to hex which is compatible with amino\n     */\n\n  }, {\n    key: \"serialize\",\n    value: function serialize() {\n      if (!this.signatures) {\n        throw new Error(\"need signature\");\n      }\n\n      var msg = this.msg || this.baseMsg && this.baseMsg.getMsg();\n      var stdTx = {\n        msg: [msg],\n        signatures: this.signatures,\n        memo: this.memo,\n        source: this.source,\n        // sdk value is 0, web wallet value is 1\n        data: \"\",\n        aminoPrefix: _types.AminoPrefix.StdTx\n      };\n      var bytes = (0, _amino.marshalBinary)(stdTx);\n      return bytes.toString(\"hex\");\n    }\n    /**\n     * serializes a public key in a 33-byte compressed format.\n     * @param {Elliptic.PublicKey} unencodedPubKey\n     * @return {Buffer}\n     */\n\n  }, {\n    key: \"_serializePubKey\",\n    value: function _serializePubKey(unencodedPubKey) {\n      var format = 0x2;\n      var y = unencodedPubKey.getY();\n      var x = unencodedPubKey.getX();\n\n      if (y && y.isOdd()) {\n        format |= 0x1;\n      }\n\n      var pubBz = Buffer.concat([_amino.UVarInt.encode(format), x.toArrayLike(Buffer, \"be\", 32)]); // prefixed with length\n\n      pubBz = (0, _amino.encodeBinaryByteArray)(pubBz); // add the amino prefix\n\n      pubBz = Buffer.concat([Buffer.from(\"EB5AE987\", \"hex\"), pubBz]);\n      return pubBz;\n    }\n  }]);\n  return Transaction;\n}();\n\nexports[\"default\"] = Transaction;"],"mappings":"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"},"metadata":{},"sourceType":"script"}