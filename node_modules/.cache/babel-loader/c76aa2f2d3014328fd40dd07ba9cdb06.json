{"ast":null,"code":"'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\n\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16); // Use Montgomery, when there is no fast reduction for the prime\n\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p); // Useful for many curves\n\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red); // Curve configuration, optional\n\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed); // Temporary arrays\n\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0; // Generalized Greg Maxwell's trick\n\n  var adjustCount = this.n && this.p.div(this.n);\n\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\n\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3; // Translate into more windowed form\n\n  var repr = [];\n\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n\n    for (var k = j + doubles.step - 1; k >= j; k--) nafW = (nafW << 1) + naf[k];\n\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n\n    a = a.add(b);\n  }\n\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4; // Precompute window\n\n  var nafPoints = p._getNAFPoints(w);\n\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points; // Get NAF form\n\n  var naf = getNAF(k, w, this._bitLength); // Add `this`*(N+1) for every w-NAF index\n\n  var acc = this.jpoint(null, null, null);\n\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--) k++;\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n    var z = naf[i];\n    assert(z !== 0);\n\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3; // Fill all arrays\n\n  var max = 0;\n\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n\n    var nafPoints = p._getNAFPoints(defW);\n\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  } // Comb small window NAFs\n\n\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [points[a],\n    /* 1 */\n    null,\n    /* 3 */\n    null,\n    /* 5 */\n    points[b]\n    /* 7 */\n    ]; // Try to avoid Projective points, if possible\n\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [-3,\n    /* -1 -1 */\n    -1,\n    /* -1 0 */\n    -5,\n    /* -1 1 */\n    -7,\n    /* 0 -1 */\n    0,\n    /* 0 0 */\n    7,\n    /* 0 1 */\n    5,\n    /* 1 -1 */\n    1,\n    /* 1 0 */\n    3\n    /* 1 1 */\n    ];\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n\n      if (!zero) break;\n      k++;\n      i--;\n    }\n\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  } // Zeroify references\n\n\n  for (var i = 0; i < len; i++) wnd[i] = null;\n\n  if (jacobianResult) return acc;else return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\n\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function\n  /*other*/\neq() {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n  var len = this.p.byteLength(); // uncompressed, hybrid-odd, hybrid-even\n\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) acc = acc.dbl();\n\n    doubles.push(acc);\n  }\n\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n\n  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n\n  for (var i = 0; i < k; i++) r = r.dbl();\n\n  return r;\n};","map":{"version":3,"names":["BN","require","utils","getNAF","getJSF","assert","BaseCurve","type","conf","p","red","prime","mont","zero","toRed","one","two","n","g","pointFromJSON","gRed","_wnafT1","Array","_wnafT2","_wnafT3","_wnafT4","_bitLength","bitLength","adjustCount","div","cmpn","redN","_maxwellTrick","module","exports","prototype","point","Error","validate","_fixedNafMul","k","precomputed","doubles","_getDoubles","naf","I","step","repr","j","length","nafW","push","a","jpoint","b","i","mixedAdd","points","neg","add","toP","_wnafMul","w","nafPoints","_getNAFPoints","wnd","acc","dblp","z","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","max","Math","comb","y","cmp","toJ","redNeg","index","jsf","ja","jb","tmp","BasePoint","curve","eq","decodePoint","bytes","enc","toArray","byteLength","res","slice","pointFromX","encodeCompressed","encode","_encode","compact","x","getX","getY","isEven","concat","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","r"],"sources":["C:/Users/acer/node_modules/thor-devkit/node_modules/elliptic/lib/elliptic/curve/base.js"],"sourcesContent":["'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}