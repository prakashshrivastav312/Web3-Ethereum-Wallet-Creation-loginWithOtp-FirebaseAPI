{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils_1 = require(\"./utils\");\n\nconst common_1 = require(\"../../common\");\n\nconst settings_1 = __importDefault(require(\"./settings\"));\n\nconst account_delete_1 = __importDefault(require(\"./account-delete\"));\n\nconst check_cancel_1 = __importDefault(require(\"./check-cancel\"));\n\nconst check_cash_1 = __importDefault(require(\"./check-cash\"));\n\nconst check_create_1 = __importDefault(require(\"./check-create\"));\n\nconst deposit_preauth_1 = __importDefault(require(\"./deposit-preauth\"));\n\nconst escrow_cancellation_1 = __importDefault(require(\"./escrow-cancellation\"));\n\nconst escrow_creation_1 = __importDefault(require(\"./escrow-creation\"));\n\nconst escrow_execution_1 = __importDefault(require(\"./escrow-execution\"));\n\nconst cancellation_1 = __importDefault(require(\"./cancellation\"));\n\nconst order_1 = __importDefault(require(\"./order\"));\n\nconst payment_1 = __importDefault(require(\"./payment\"));\n\nconst payment_channel_claim_1 = __importDefault(require(\"./payment-channel-claim\"));\n\nconst payment_channel_create_1 = __importDefault(require(\"./payment-channel-create\"));\n\nconst payment_channel_fund_1 = __importDefault(require(\"./payment-channel-fund\"));\n\nconst ticket_create_1 = __importDefault(require(\"./ticket-create\"));\n\nconst trustline_1 = __importDefault(require(\"./trustline\"));\n\nconst amendment_1 = __importDefault(require(\"./amendment\"));\n\nconst fee_update_1 = __importDefault(require(\"./fee-update\"));\n\nfunction parseTransactionType(type) {\n  const mapping = {\n    AccountSet: 'settings',\n    AccountDelete: 'accountDelete',\n    CheckCancel: 'checkCancel',\n    CheckCash: 'checkCash',\n    CheckCreate: 'checkCreate',\n    DepositPreauth: 'depositPreauth',\n    EscrowCancel: 'escrowCancellation',\n    EscrowCreate: 'escrowCreation',\n    EscrowFinish: 'escrowExecution',\n    OfferCancel: 'orderCancellation',\n    OfferCreate: 'order',\n    Payment: 'payment',\n    PaymentChannelClaim: 'paymentChannelClaim',\n    PaymentChannelCreate: 'paymentChannelCreate',\n    PaymentChannelFund: 'paymentChannelFund',\n    SetRegularKey: 'settings',\n    SignerListSet: 'settings',\n    TicketCreate: 'ticketCreate',\n    TrustSet: 'trustline',\n    EnableAmendment: 'amendment',\n    SetFee: 'feeUpdate'\n  };\n  return mapping[type] || null;\n}\n\nfunction parseTransaction(tx, includeRawTransaction) {\n  const type = parseTransactionType(tx.TransactionType);\n  const mapping = {\n    settings: settings_1.default,\n    accountDelete: account_delete_1.default,\n    checkCancel: check_cancel_1.default,\n    checkCash: check_cash_1.default,\n    checkCreate: check_create_1.default,\n    depositPreauth: deposit_preauth_1.default,\n    escrowCancellation: escrow_cancellation_1.default,\n    escrowCreation: escrow_creation_1.default,\n    escrowExecution: escrow_execution_1.default,\n    orderCancellation: cancellation_1.default,\n    order: order_1.default,\n    payment: payment_1.default,\n    paymentChannelClaim: payment_channel_claim_1.default,\n    paymentChannelCreate: payment_channel_create_1.default,\n    paymentChannelFund: payment_channel_fund_1.default,\n    ticketCreate: ticket_create_1.default,\n    trustline: trustline_1.default,\n    amendment: amendment_1.default,\n    feeUpdate: fee_update_1.default\n  };\n  const parser = mapping[type];\n  const specification = parser ? parser(tx) : {\n    UNAVAILABLE: 'Unrecognized transaction type.',\n    SEE_RAW_TRANSACTION: 'Since this type is unrecognized, `rawTransaction` is included in this response.'\n  };\n\n  if (!parser) {\n    includeRawTransaction = true;\n  }\n\n  const outcome = utils_1.parseOutcome(tx);\n  return common_1.removeUndefined({\n    type: type,\n    address: tx.Account,\n    sequence: tx.Sequence,\n    id: tx.hash,\n    specification: common_1.removeUndefined(specification),\n    outcome: outcome ? common_1.removeUndefined(outcome) : undefined,\n    rawTransaction: includeRawTransaction ? JSON.stringify(tx) : undefined\n  });\n}\n\nexports.default = parseTransaction;","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA,SAASA,oBAAT,CAA8BC,IAA9B,EAAkC;EAEhC,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,UADE;IAEdC,aAAa,EAAE,eAFD;IAGdC,WAAW,EAAE,aAHC;IAIdC,SAAS,EAAE,WAJG;IAKdC,WAAW,EAAE,aALC;IAMdC,cAAc,EAAE,gBANF;IAOdC,YAAY,EAAE,oBAPA;IAQdC,YAAY,EAAE,gBARA;IASdC,YAAY,EAAE,iBATA;IAUdC,WAAW,EAAE,mBAVC;IAWdC,WAAW,EAAE,OAXC;IAYdC,OAAO,EAAE,SAZK;IAadC,mBAAmB,EAAE,qBAbP;IAcdC,oBAAoB,EAAE,sBAdR;IAedC,kBAAkB,EAAE,oBAfN;IAgBdC,aAAa,EAAE,UAhBD;IAiBdC,aAAa,EAAE,UAjBD;IAkBdC,YAAY,EAAE,cAlBA;IAmBdC,QAAQ,EAAE,WAnBI;IAqBdC,eAAe,EAAE,WArBH;IAsBdC,MAAM,EAAE;EAtBM,CAAhB;EAwBA,OAAOrB,OAAO,CAACD,IAAD,CAAP,IAAiB,IAAxB;AACD;;AAGD,SAASuB,gBAAT,CAA0BC,EAA1B,EAAmCC,qBAAnC,EAAiE;EAC/D,MAAMzB,IAAI,GAAGD,oBAAoB,CAACyB,EAAE,CAACE,eAAJ,CAAjC;EACA,MAAMzB,OAAO,GAAG;IACd0B,QAAQ,EAAEC,kBADI;IAEdC,aAAa,EAAEC,wBAFD;IAGdC,WAAW,EAAEC,sBAHC;IAIdC,SAAS,EAAEC,oBAJG;IAKdC,WAAW,EAAEC,sBALC;IAMdC,cAAc,EAAEC,yBANF;IAOdC,kBAAkB,EAAEC,6BAPN;IAQdC,cAAc,EAAEC,yBARF;IASdC,eAAe,EAAEC,0BATH;IAUdC,iBAAiB,EAAEC,sBAVL;IAWdC,KAAK,EAAEC,eAXO;IAYdC,OAAO,EAAEC,iBAZK;IAadC,mBAAmB,EAAEC,+BAbP;IAcdC,oBAAoB,EAAEC,gCAdR;IAedC,kBAAkB,EAAEC,8BAfN;IAgBdC,YAAY,EAAEC,uBAhBA;IAiBdC,SAAS,EAAEC,mBAjBG;IAmBdC,SAAS,EAAEC,mBAnBG;IAoBdC,SAAS,EAAEC;EApBG,CAAhB;EAsBA,MAAMC,MAAM,GAAahE,OAAO,CAACD,IAAD,CAAhC;EAEA,MAAMkE,aAAa,GAAGD,MAAM,GACxBA,MAAM,CAACzC,EAAD,CADkB,GAExB;IACE2C,WAAW,EAAE,gCADf;IAEEC,mBAAmB,EACjB;EAHJ,CAFJ;;EAOA,IAAI,CAACH,MAAL,EAAa;IACXxC,qBAAqB,GAAG,IAAxB;EACD;;EAED,MAAM4C,OAAO,GAAGC,qBAAa9C,EAAb,CAAhB;EACA,OAAO+C,yBAAgB;IACrBvE,IAAI,EAAEA,IADe;IAErBwE,OAAO,EAAEhD,EAAE,CAACiD,OAFS;IAGrBC,QAAQ,EAAElD,EAAE,CAACmD,QAHQ;IAIrBC,EAAE,EAAEpD,EAAE,CAACqD,IAJc;IAKrBX,aAAa,EAAEK,yBAAgBL,aAAhB,CALM;IAMrBG,OAAO,EAAEA,OAAO,GAAGE,yBAAgBF,OAAhB,CAAH,GAA8BS,SANzB;IAOrBC,cAAc,EAAEtD,qBAAqB,GAAGuD,IAAI,CAACC,SAAL,CAAezD,EAAf,CAAH,GAAwBsD;EAPxC,CAAhB,CAAP;AASD;;AAEDI,kBAAe3D,gBAAf","names":["parseTransactionType","type","mapping","AccountSet","AccountDelete","CheckCancel","CheckCash","CheckCreate","DepositPreauth","EscrowCancel","EscrowCreate","EscrowFinish","OfferCancel","OfferCreate","Payment","PaymentChannelClaim","PaymentChannelCreate","PaymentChannelFund","SetRegularKey","SignerListSet","TicketCreate","TrustSet","EnableAmendment","SetFee","parseTransaction","tx","includeRawTransaction","TransactionType","settings","settings_1","accountDelete","account_delete_1","checkCancel","check_cancel_1","checkCash","check_cash_1","checkCreate","check_create_1","depositPreauth","deposit_preauth_1","escrowCancellation","escrow_cancellation_1","escrowCreation","escrow_creation_1","escrowExecution","escrow_execution_1","orderCancellation","cancellation_1","order","order_1","payment","payment_1","paymentChannelClaim","payment_channel_claim_1","paymentChannelCreate","payment_channel_create_1","paymentChannelFund","payment_channel_fund_1","ticketCreate","ticket_create_1","trustline","trustline_1","amendment","amendment_1","feeUpdate","fee_update_1","parser","specification","UNAVAILABLE","SEE_RAW_TRANSACTION","outcome","utils_1","common_1","address","Account","sequence","Sequence","id","hash","undefined","rawTransaction","JSON","stringify","exports"],"sourceRoot":"","sources":["../../../../src/ledger/parse/transaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}