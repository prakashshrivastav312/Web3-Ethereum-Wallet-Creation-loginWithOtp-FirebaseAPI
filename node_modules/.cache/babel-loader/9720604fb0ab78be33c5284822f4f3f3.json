{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseAccountOrder = void 0;\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nconst amount_1 = __importDefault(require(\"./amount\"));\n\nconst utils_1 = require(\"./utils\");\n\nconst common_1 = require(\"../../common\");\n\nconst flags_1 = require(\"./flags\");\n\nfunction computeQuality(takerGets, takerPays) {\n  const quotient = new bignumber_js_1.default(takerPays.value).dividedBy(takerGets.value);\n  return quotient.precision(16, bignumber_js_1.default.ROUND_HALF_UP).toString();\n}\n\nfunction parseAccountOrder(address, order) {\n  const direction = (order.flags & flags_1.orderFlags.Sell) === 0 ? 'buy' : 'sell';\n  const takerGetsAmount = amount_1.default(order.taker_gets);\n  const takerPaysAmount = amount_1.default(order.taker_pays);\n  const quantity = direction === 'buy' ? takerPaysAmount : takerGetsAmount;\n  const totalPrice = direction === 'buy' ? takerGetsAmount : takerPaysAmount;\n  const specification = common_1.removeUndefined({\n    direction: direction,\n    quantity: quantity,\n    totalPrice: totalPrice,\n    passive: (order.flags & flags_1.orderFlags.Passive) !== 0 || undefined,\n    expirationTime: utils_1.parseTimestamp(order.expiration)\n  });\n  const makerExchangeRate = order.quality ? utils_1.adjustQualityForXRP(order.quality.toString(), takerGetsAmount.currency, takerPaysAmount.currency) : computeQuality(takerGetsAmount, takerPaysAmount);\n  const properties = {\n    maker: address,\n    sequence: order.seq,\n    makerExchangeRate: makerExchangeRate\n  };\n  return {\n    specification,\n    properties\n  };\n}\n\nexports.parseAccountOrder = parseAccountOrder;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAaA,SAASA,cAAT,CAAwBC,SAAxB,EAAmCC,SAAnC,EAA4C;EAC1C,MAAMC,QAAQ,GAAG,IAAIC,sBAAJ,CAAcF,SAAS,CAACG,KAAxB,EAA+BC,SAA/B,CAAyCL,SAAS,CAACI,KAAnD,CAAjB;EACA,OAAOF,QAAQ,CAACI,SAAT,CAAmB,EAAnB,EAAuBH,uBAAUI,aAAjC,EAAgDC,QAAhD,EAAP;AACD;;AAID,SAAgBC,iBAAhB,CACEC,OADF,EAEEC,KAFF,EAEY;EAEV,MAAMC,SAAS,GAAG,CAACD,KAAK,CAACE,KAAN,GAAcC,mBAAWC,IAA1B,MAAoC,CAApC,GAAwC,KAAxC,GAAgD,MAAlE;EACA,MAAMC,eAAe,GAAGC,iBAAYN,KAAK,CAACO,UAAlB,CAAxB;EACA,MAAMC,eAAe,GAAGF,iBAAYN,KAAK,CAACS,UAAlB,CAAxB;EACA,MAAMC,QAAQ,GAAGT,SAAS,KAAK,KAAd,GAAsBO,eAAtB,GAAwCH,eAAzD;EACA,MAAMM,UAAU,GAAGV,SAAS,KAAK,KAAd,GAAsBI,eAAtB,GAAwCG,eAA3D;EAIA,MAAMI,aAAa,GAAGC,yBAAgB;IACpCZ,SAAS,EAAEA,SADyB;IAEpCS,QAAQ,EAAEA,QAF0B;IAGpCC,UAAU,EAAEA,UAHwB;IAIpCG,OAAO,EAAE,CAACd,KAAK,CAACE,KAAN,GAAcC,mBAAWY,OAA1B,MAAuC,CAAvC,IAA4CC,SAJjB;IAMpCC,cAAc,EAAEC,uBAAelB,KAAK,CAACmB,UAArB;EANoB,CAAhB,CAAtB;EASA,MAAMC,iBAAiB,GAAGpB,KAAK,CAACqB,OAAN,GACtBH,4BACElB,KAAK,CAACqB,OAAN,CAAcxB,QAAd,EADF,EAEEQ,eAAe,CAACiB,QAFlB,EAGEd,eAAe,CAACc,QAHlB,CADsB,GAMtBlC,cAAc,CAACiB,eAAD,EAAkBG,eAAlB,CANlB;EAOA,MAAMe,UAAU,GAAG;IACjBC,KAAK,EAAEzB,OADU;IAEjB0B,QAAQ,EAAEzB,KAAK,CAAC0B,GAFC;IAGjBN,iBAAiB,EAAEA;EAHF,CAAnB;EAMA,OAAO;IAACR,aAAD;IAAgBW;EAAhB,CAAP;AACD;;AAnCDI","names":["computeQuality","takerGets","takerPays","quotient","bignumber_js_1","value","dividedBy","precision","ROUND_HALF_UP","toString","parseAccountOrder","address","order","direction","flags","flags_1","Sell","takerGetsAmount","amount_1","taker_gets","takerPaysAmount","taker_pays","quantity","totalPrice","specification","common_1","passive","Passive","undefined","expirationTime","utils_1","expiration","makerExchangeRate","quality","currency","properties","maker","sequence","seq","exports"],"sourceRoot":"","sources":["../../../../src/ledger/parse/account-order.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}