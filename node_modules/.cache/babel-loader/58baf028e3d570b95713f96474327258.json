{"ast":null,"code":"/*\n  info from:\n    https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/chainparams.cpp\n*/\nvar common = {\n  name: 'BitcoinCash',\n  per1: 1e8,\n  unit: 'BCH'\n};\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f',\n  // nDefaultPort\n  port: 8333,\n  portRpc: 8332,\n  protocol: {\n    // pchMessageStart\n    magic: 0xe8f3e1e3 // careful, sent over wire as little endian\n\n  },\n  // vSeeds\n  seedsDns: ['seed.bitcoinabc.org', 'seed-abc.bitcoinforks.org', 'btccash-seeder.bitcoinunlimited.info', 'seed.bitprim.org', 'seed.deadalnix.me', 'seeder.criptolayer.net'],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 145,\n    private: 0x80,\n    public: 0x00,\n    scripthash: 0x05\n  }\n}, common);\nvar test = Object.assign({}, {\n  hashGenesisBlock: '000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943',\n  port: 18333,\n  portRpc: 18332,\n  protocol: {\n    magic: 0xf4f3e5f4\n  },\n  seedsDns: ['testnet-seed.bitcoinabc.org', 'testnet-seed-abc.bitcoinforks.org', 'testnet-seed.bitprim.org', 'testnet-seed.deadalnix.me', 'testnet-seeder.criptolayer.net'],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common);\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206',\n  port: 18444,\n  portRpc: 18332,\n  protocol: {\n    magic: 0xfabfb5da\n  },\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common);\nmodule.exports = {\n  main,\n  test,\n  regtest\n};","map":{"version":3,"names":["common","name","per1","unit","main","Object","assign","hashGenesisBlock","port","portRpc","protocol","magic","seedsDns","versions","bip32","private","public","bip44","scripthash","test","regtest","module","exports"],"sources":["C:/Users/acer/node_modules/coininfo/lib/coins/bch.js"],"sourcesContent":["/*\n  info from:\n    https://github.com/Bitcoin-ABC/bitcoin-abc/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'BitcoinCash',\n  per1: 1e8,\n  unit: 'BCH'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f',\n  // nDefaultPort\n  port: 8333,\n  portRpc: 8332,\n  protocol: {\n    // pchMessageStart\n    magic: 0xe8f3e1e3 // careful, sent over wire as little endian\n  },\n  // vSeeds\n  seedsDns: [\n    'seed.bitcoinabc.org',\n    'seed-abc.bitcoinforks.org',\n    'btccash-seeder.bitcoinunlimited.info',\n    'seed.bitprim.org',\n    'seed.deadalnix.me',\n    'seeder.criptolayer.net'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 145,\n    private: 0x80,\n    public: 0x00,\n    scripthash: 0x05\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943',\n  port: 18333,\n  portRpc: 18332,\n  protocol: {\n    magic: 0xf4f3e5f4\n  },\n  seedsDns: [\n    'testnet-seed.bitcoinabc.org',\n    'testnet-seed-abc.bitcoinforks.org',\n    'testnet-seed.bitprim.org',\n    'testnet-seed.deadalnix.me',\n    'testnet-seeder.criptolayer.net'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206',\n  port: 18444,\n  portRpc: 18332,\n  protocol: {\n    magic: 0xfabfb5da\n  },\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test,\n  regtest\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAG;EACXC,IAAI,EAAE,aADK;EAEXC,IAAI,EAAE,GAFK;EAGXC,IAAI,EAAE;AAHK,CAAb;AAMA,IAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;EAC3BC,gBAAgB,EAAE,kEADS;EAE3B;EACAC,IAAI,EAAE,IAHqB;EAI3BC,OAAO,EAAE,IAJkB;EAK3BC,QAAQ,EAAE;IACR;IACAC,KAAK,EAAE,UAFC,CAEU;;EAFV,CALiB;EAS3B;EACAC,QAAQ,EAAE,CACR,qBADQ,EAER,2BAFQ,EAGR,sCAHQ,EAIR,kBAJQ,EAKR,mBALQ,EAMR,wBANQ,CAViB;EAkB3B;EACAC,QAAQ,EAAE;IACRC,KAAK,EAAE;MACLC,OAAO,EAAE,UADJ;MAELC,MAAM,EAAE;IAFH,CADC;IAKRC,KAAK,EAAE,GALC;IAMRF,OAAO,EAAE,IAND;IAORC,MAAM,EAAE,IAPA;IAQRE,UAAU,EAAE;EARJ;AAnBiB,CAAlB,EA6BRlB,MA7BQ,CAAX;AA+BA,IAAImB,IAAI,GAAGd,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;EAC3BC,gBAAgB,EAAE,kEADS;EAE3BC,IAAI,EAAE,KAFqB;EAG3BC,OAAO,EAAE,KAHkB;EAI3BC,QAAQ,EAAE;IACRC,KAAK,EAAE;EADC,CAJiB;EAO3BC,QAAQ,EAAE,CACR,6BADQ,EAER,mCAFQ,EAGR,0BAHQ,EAIR,2BAJQ,EAKR,gCALQ,CAPiB;EAc3BC,QAAQ,EAAE;IACRC,KAAK,EAAE;MACLC,OAAO,EAAE,UADJ;MAELC,MAAM,EAAE;IAFH,CADC;IAKRC,KAAK,EAAE,CALC;IAMRF,OAAO,EAAE,IAND;IAORC,MAAM,EAAE,IAPA;IAQRE,UAAU,EAAE;EARJ;AAdiB,CAAlB,EAwBRlB,MAxBQ,CAAX;AA0BA,IAAIoB,OAAO,GAAGf,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;EAC9BC,gBAAgB,EAAE,kEADY;EAE9BC,IAAI,EAAE,KAFwB;EAG9BC,OAAO,EAAE,KAHqB;EAI9BC,QAAQ,EAAE;IACRC,KAAK,EAAE;EADC,CAJoB;EAO9BC,QAAQ,EAAE,EAPoB;EAQ9BC,QAAQ,EAAE;IACRC,KAAK,EAAE;MACLC,OAAO,EAAE,UADJ;MAELC,MAAM,EAAE;IAFH,CADC;IAKRC,KAAK,EAAE,CALC;IAMRF,OAAO,EAAE,IAND;IAORC,MAAM,EAAE,IAPA;IAQRE,UAAU,EAAE;EARJ;AARoB,CAAlB,EAkBXlB,MAlBW,CAAd;AAoBAqB,MAAM,CAACC,OAAP,GAAiB;EACflB,IADe;EAEfe,IAFe;EAGfC;AAHe,CAAjB"},"metadata":{},"sourceType":"script"}