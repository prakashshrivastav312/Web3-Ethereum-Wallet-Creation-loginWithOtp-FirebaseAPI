{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContractWrapper = void 0;\n\nconst path_1 = __importDefault(require(\"path\"));\n\nconst fs_1 = __importDefault(require(\"fs\"));\n\nconst __1 = require(\"..\");\n\nconst chainSendContext_1 = require(\"./chainSendContext\");\n\nconst generateMethods_1 = require(\"./generateMethods\");\n\nconst formattedCall_1 = require(\"./formattedCall\");\n\nconst argumentErrorContext_1 = require(\"../argumentErrorContext\");\n\nconst __2 = require(\"../..\");\n\nconst preparedCall_1 = require(\"./preparedCall\");\n\nconst _1 = require(\".\");\n\nconst testutils_1 = require(\"../../testutils\");\n/**\n * Provides a simple interface in order to easily call or query the smart contract's methods.\n */\n\n\nclass ContractWrapper extends chainSendContext_1.ChainSendContext {\n  constructor(smartContract, abi, wasmPath, context, builtinFunctions) {\n    super(context);\n    this.context = context;\n    this.smartContract = smartContract;\n    this.abi = abi;\n    this.wasmPath = wasmPath;\n    this.builtinFunctions = builtinFunctions || this;\n    this.call = generateMethods_1.generateMethods(this, this.abi, this.handleCall);\n    this.results = generateMethods_1.generateMethods(this, this.abi, this.handleResults);\n    this.query = generateMethods_1.generateMethods(this, this.abi, this.handleQuery);\n    this.format = generateMethods_1.generateMethods(this, this.abi, this.handleFormat);\n    let constructor = this.abi.getConstructorDefinition();\n\n    if (constructor !== null) {\n      this.call.deploy = this.handleDeployCall.bind(this, constructor);\n      this.format.deploy = this.handleFormat.bind(this, constructor);\n    }\n  }\n\n  address(address) {\n    let typedAddress = __1.NativeSerializer.convertNativeToAddress(address, new argumentErrorContext_1.ArgumentErrorContext(\"address\", \"0\", new __1.EndpointParameterDefinition(\"address\", \"\", new __1.AddressType())));\n\n    this.smartContract.setAddress(typedAddress);\n    return this;\n  }\n\n  getAddress() {\n    return this.smartContract.getAddress();\n  }\n\n  getAbi() {\n    return this.abi;\n  }\n\n  getSmartContract() {\n    return this.smartContract;\n  }\n\n  getCode() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.wasmPath == null) {\n        throw new __2.Err(\"contract wasm path not configured\");\n      }\n\n      return yield testutils_1.loadContractCode(this.wasmPath);\n    });\n  }\n\n  buildDeployTransaction(constructorDefinition, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let contractCode = yield this.getCode();\n      let convertedArgs = formattedCall_1.formatEndpoint(constructorDefinition, constructorDefinition, ...args).toTypedValues();\n      let transaction = this.smartContract.deploy({\n        code: contractCode,\n        gasLimit: this.context.getGasLimit(),\n        initArguments: convertedArgs\n      });\n      return transaction;\n    });\n  }\n\n  handleDeployCall(constructorDefinition) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return __awaiter(this, void 0, void 0, function* () {\n      let transaction = yield this.buildDeployTransaction(constructorDefinition, args);\n      let transactionOnNetwork = yield this.processTransaction(transaction);\n      let smartContractResults = transactionOnNetwork.getSmartContractResults();\n      let immediateResult = smartContractResults.getImmediate();\n      immediateResult.assertSuccess();\n      let logger = this.context.getLogger();\n      logger === null || logger === void 0 ? void 0 : logger.deployComplete(transaction, smartContractResults, this.smartContract.getAddress());\n    });\n  }\n\n  static loadProject(provider, builtinFunctions, projectPath, filenameHint, sendContext) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let {\n        abiPath,\n        wasmPath\n      } = yield expandProjectPath(projectPath, filenameHint);\n      let abi = yield __1.SmartContractAbi.fromAbiPath(abiPath);\n      let smartContract = new __1.SmartContract({\n        abi: abi\n      });\n      sendContext = sendContext || new _1.SendContext(provider).logger(new _1.ContractLogger());\n      return new ContractWrapper(smartContract, abi, wasmPath, sendContext, builtinFunctions);\n    });\n  }\n\n  handleQuery(endpoint) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return __awaiter(this, void 0, void 0, function* () {\n      let preparedCall = yield this.prepareCallWithPayment(endpoint, args);\n      let interaction = this.convertPreparedCallToInteraction(preparedCall);\n      let provider = this.context.getProvider();\n      let logger = this.context.getLogger();\n      let query = interaction.buildQuery();\n      logger === null || logger === void 0 ? void 0 : logger.queryCreated(query);\n      let optionalSender = this.context.getSenderOptional();\n\n      if (optionalSender != null) {\n        query.caller = optionalSender.address;\n      }\n\n      let response = yield provider.queryContract(query);\n      let queryResponseBundle = interaction.interpretQueryResponse(response);\n      let result = queryResponseBundle.queryResponse.unpackOutput();\n      logger === null || logger === void 0 ? void 0 : logger.queryComplete(result, response);\n      return result;\n    });\n  }\n\n  handleCall(endpoint) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return __awaiter(this, void 0, void 0, function* () {\n      let {\n        transaction,\n        interaction\n      } = this.buildTransactionAndInteraction(endpoint, args);\n      let {\n        result\n      } = yield this.processTransactionAndInterpretResults({\n        transaction,\n        interaction\n      });\n      return result;\n    });\n  }\n\n  handleResults(endpoint) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n\n    return __awaiter(this, void 0, void 0, function* () {\n      let {\n        transaction,\n        interaction\n      } = this.buildTransactionAndInteraction(endpoint, args);\n      let {\n        executionResultsBundle\n      } = yield this.processTransactionAndInterpretResults({\n        transaction,\n        interaction\n      });\n      return executionResultsBundle;\n    });\n  }\n\n  processTransactionAndInterpretResults(_ref) {\n    let {\n      transaction,\n      interaction\n    } = _ref;\n    return __awaiter(this, void 0, void 0, function* () {\n      let transactionOnNetwork = yield this.processTransaction(transaction);\n      let executionResultsBundle = interaction.interpretExecutionResults(transactionOnNetwork);\n      let {\n        smartContractResults,\n        immediateResult\n      } = executionResultsBundle;\n      let result = immediateResult === null || immediateResult === void 0 ? void 0 : immediateResult.unpackOutput();\n      let logger = this.context.getLogger();\n      logger === null || logger === void 0 ? void 0 : logger.transactionComplete(result, immediateResult === null || immediateResult === void 0 ? void 0 : immediateResult.data, transaction, smartContractResults);\n      return {\n        executionResultsBundle,\n        result\n      };\n    });\n  }\n\n  processTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let provider = this.context.getProvider();\n      let sender = this.context.getSender();\n      transaction.setNonce(sender.account.nonce);\n      yield sender.signer.sign(transaction);\n      let logger = this.context.getLogger();\n      logger === null || logger === void 0 ? void 0 : logger.transactionCreated(transaction);\n      yield transaction.send(provider); // increment the nonce only after the transaction is sent\n      // since an exception thrown by the provider means we will have to re-use the same nonce\n      // otherwise the next transactions will hang (and never complete)\n\n      sender.account.incrementNonce();\n      logger === null || logger === void 0 ? void 0 : logger.transactionSent(transaction);\n      yield transaction.awaitExecuted(provider);\n      let transactionOnNetwork = yield transaction.getAsOnNetwork(provider, true, false, true);\n\n      if (transaction.getStatus().isFailed()) {\n        // TODO: extract the error messages\n        //let results = transactionOnNetwork.getSmartContractResults().getAllResults();\n        //let messages = results.map((result) => console.log(result));\n        throw new __2.ErrContract(`Transaction status failed: [${transaction.getStatus().toString()}].`); // Return messages:\\n${messages}`);\n      }\n\n      return transactionOnNetwork;\n    });\n  }\n\n  handleFormat(endpoint) {\n    for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n      args[_key5 - 1] = arguments[_key5];\n    }\n\n    let {\n      formattedCall\n    } = this.prepareCallWithPayment(endpoint, args);\n    return formattedCall;\n  }\n\n  buildTransactionAndInteraction(endpoint, args) {\n    let preparedCall = this.prepareCallWithPayment(endpoint, args);\n    let interaction = this.convertPreparedCallToInteraction(preparedCall);\n    interaction.withGasLimit(this.context.getGasLimit());\n    let transaction = interaction.buildTransaction();\n    return {\n      transaction,\n      interaction\n    };\n  }\n\n  prepareCallWithPayment(endpoint, args) {\n    let value = this.context.getAndResetValue();\n\n    if (value == null && endpoint.modifiers.isPayable()) {\n      throw new __2.Err(\"Did not provide any value for a payable method\");\n    }\n\n    if (value != null && !endpoint.modifiers.isPayable()) {\n      throw new __2.Err(\"A value was provided for a non-payable method\");\n    }\n\n    if (value != null && !endpoint.modifiers.isPayableInToken(value.token.getTokenIdentifier())) {\n      throw new __2.Err(`Token ${value.token.getTokenIdentifier()} is not accepted by payable method. Accepted tokens: ${endpoint.modifiers.payableInTokens}`);\n    }\n\n    let formattedCall = formattedCall_1.formatEndpoint(endpoint, endpoint, ...args);\n    let preparedCall = new preparedCall_1.PreparedCall(this.smartContract.getAddress(), __2.Egld(0), formattedCall);\n    this.applyValueModfiers(value, preparedCall);\n    return preparedCall;\n  }\n\n  convertPreparedCallToInteraction(preparedCall) {\n    let executingFunction = preparedCall.formattedCall.getExecutingFunction();\n    let interpretingFunction = preparedCall.formattedCall.getInterpretingFunction();\n    let typedValueArgs = preparedCall.formattedCall.toTypedValues();\n    let interaction = new __1.Interaction(this.smartContract, executingFunction, interpretingFunction, typedValueArgs, preparedCall.receiver);\n    interaction.withValue(preparedCall.egldValue);\n    return interaction;\n  }\n\n  applyValueModfiers(value, preparedCall) {\n    if (value == null) {\n      return;\n    }\n\n    if (value.token.isEgld()) {\n      preparedCall.egldValue = value;\n      return;\n    }\n\n    if (value.token.isFungible()) {\n      preparedCall.wrap(this.builtinFunctions.format.ESDTTransfer(value.token.getTokenIdentifier(), value.valueOf(), preparedCall.formattedCall));\n    } else {\n      preparedCall.receiver = this.context.getSender().address;\n      preparedCall.wrap(this.builtinFunctions.format.ESDTNFTTransfer(value.token.getTokenIdentifier(), value.getNonce(), value.valueOf(), this.smartContract, preparedCall.formattedCall));\n    }\n  }\n\n}\n\nexports.ContractWrapper = ContractWrapper;\n\nfunction filterByExtension(fileList, extension) {\n  return fileList.filter(name => name.endsWith(extension));\n}\n\nfunction filterByFilename(fileList, filename) {\n  return fileList.filter(name => name == filename);\n} // Compiling creates a temporary file which sometimes doesn't get deleted. It should be ignored.\n\n\nfunction ignoreTemporaryWasmFiles(fileList) {\n  let temporaryWasmFiles = filterByExtension(fileList, \"_wasm.wasm\");\n  let difference = fileList.filter(file => temporaryWasmFiles.indexOf(file) === -1);\n  return difference;\n}\n\nfunction filterWithHint(fileList, extension, filenameHint) {\n  if (filenameHint) {\n    let pattern = filenameHint + extension;\n    return {\n      pattern,\n      filteredFileList: filterByFilename(fileList, pattern)\n    };\n  }\n\n  return {\n    pattern: \"*\" + extension,\n    filteredFileList: filterByExtension(fileList, extension)\n  };\n}\n\nfunction getFileByExtension(fileList, folderPath, extension, filenameHint) {\n  let {\n    pattern,\n    filteredFileList\n  } = filterWithHint(fileList, extension, filenameHint);\n\n  if (filteredFileList.length != 1) {\n    throw new __2.ErrInvalidArgument(`Expected a single ${pattern} file in ${folderPath} (found ${filteredFileList.length})`);\n  }\n\n  return path_1.default.join(folderPath, filteredFileList[0]);\n}\n\nfunction getAbiAndWasmPaths(outputPath, filenameHint) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let filesInOutput = yield fs_1.default.promises.readdir(outputPath);\n    filesInOutput = ignoreTemporaryWasmFiles(filesInOutput);\n    let abiPath = getFileByExtension(filesInOutput, outputPath, \".abi.json\", filenameHint);\n    let wasmPath;\n\n    try {\n      wasmPath = getFileByExtension(filesInOutput, outputPath, \".wasm\", filenameHint);\n    } catch (_) {\n      wasmPath = null;\n    }\n\n    return {\n      abiPath,\n      wasmPath\n    };\n  });\n}\n\nfunction expandProjectPath(projectPath, filenameHint) {\n  return __awaiter(this, void 0, void 0, function* () {\n    projectPath = path_1.default.resolve(projectPath);\n\n    try {\n      return yield getAbiAndWasmPaths(projectPath, filenameHint);\n    } catch (_) {\n      let outputPath = path_1.default.join(projectPath, \"output\");\n      return yield getAbiAndWasmPaths(outputPath, filenameHint);\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["ContractWrapper","chainSendContext_1","constructor","smartContract","abi","wasmPath","context","builtinFunctions","call","generateMethods_1","handleCall","results","handleResults","query","handleQuery","format","handleFormat","getConstructorDefinition","deploy","handleDeployCall","bind","address","typedAddress","__1","convertNativeToAddress","argumentErrorContext_1","setAddress","getAddress","getAbi","getSmartContract","getCode","__2","testutils_1","buildDeployTransaction","constructorDefinition","args","contractCode","convertedArgs","formattedCall_1","toTypedValues","transaction","code","gasLimit","getGasLimit","initArguments","transactionOnNetwork","processTransaction","smartContractResults","getSmartContractResults","immediateResult","getImmediate","assertSuccess","logger","getLogger","deployComplete","loadProject","provider","projectPath","filenameHint","sendContext","abiPath","expandProjectPath","fromAbiPath","_1","endpoint","preparedCall","prepareCallWithPayment","interaction","convertPreparedCallToInteraction","getProvider","buildQuery","queryCreated","optionalSender","getSenderOptional","caller","response","queryContract","queryResponseBundle","interpretQueryResponse","result","queryResponse","unpackOutput","queryComplete","buildTransactionAndInteraction","processTransactionAndInterpretResults","executionResultsBundle","interpretExecutionResults","transactionComplete","data","sender","getSender","setNonce","account","nonce","signer","sign","transactionCreated","send","incrementNonce","transactionSent","awaitExecuted","getAsOnNetwork","getStatus","isFailed","toString","formattedCall","withGasLimit","buildTransaction","value","getAndResetValue","modifiers","isPayable","isPayableInToken","token","getTokenIdentifier","payableInTokens","preparedCall_1","applyValueModfiers","executingFunction","getExecutingFunction","interpretingFunction","getInterpretingFunction","typedValueArgs","receiver","withValue","egldValue","isEgld","isFungible","wrap","ESDTTransfer","valueOf","ESDTNFTTransfer","getNonce","exports","filterByExtension","fileList","extension","filter","name","endsWith","filterByFilename","filename","ignoreTemporaryWasmFiles","temporaryWasmFiles","difference","file","indexOf","filterWithHint","pattern","filteredFileList","getFileByExtension","folderPath","length","path_1","join","getAbiAndWasmPaths","outputPath","filesInOutput","fs_1","promises","readdir","_","resolve"],"sourceRoot":"","sources":["../../../src/smartcontracts/wrapper/contractWrapper.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}