{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport var IS_INSTANCE = 'isInstance';\n/**\n * Checks if the value is an instance of the specified object.\n */\n\nexport function isInstance(object, targetTypeConstructor) {\n  return targetTypeConstructor && typeof targetTypeConstructor === 'function' && object instanceof targetTypeConstructor;\n}\n/**\n * Checks if the value is an instance of the specified object.\n */\n\nexport function IsInstance(targetType, validationOptions) {\n  return ValidateBy({\n    name: IS_INSTANCE,\n    constraints: [targetType],\n    validator: {\n      validate: function (value, args) {\n        return isInstance(value, args.constraints[0]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix, args) {\n        if (args.constraints[0]) {\n          return eachPrefix + (\"$property must be an instance of \" + args.constraints[0].name);\n        } else {\n          return eachPrefix + (IS_INSTANCE + \" decorator expects and object as value, but got falsy value.\");\n        }\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AAEA,OAAO,IAAMC,WAAW,GAAG,YAApB;AAEP;;;;AAGA,OAAM,SAAUC,UAAV,CAAqBC,MAArB,EAAsCC,qBAAtC,EAAwF;EAC5F,OACEA,qBAAqB,IAAI,OAAOA,qBAAP,KAAiC,UAA1D,IAAwED,MAAM,YAAYC,qBAD5F;AAGD;AAED;;;;AAGA,OAAM,SAAUC,UAAV,CACJC,UADI,EAEJC,iBAFI,EAEiC;EAErC,OAAOP,UAAU,CACf;IACEQ,IAAI,EAAEP,WADR;IAEEQ,WAAW,EAAE,CAACH,UAAD,CAFf;IAGEI,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACC,KAAD,EAAQC,IAAR,EAAY;QAAc,iBAAU,CAACD,KAAD,EAAQC,IAAI,CAACJ,WAAL,CAAiB,CAAjB,CAAR,CAAV;MAAsC,CADjE;MAETK,cAAc,EAAEf,YAAY,CAAC,UAACgB,UAAD,EAAaF,IAAb,EAAiB;QAC5C,IAAIA,IAAI,CAACJ,WAAL,CAAiB,CAAjB,CAAJ,EAAyB;UACvB,OAAOM,UAAU,IAAG,sCAAoCF,IAAI,CAACJ,WAAL,CAAiB,CAAjB,EAAoBD,IAA3D,CAAjB;QACD,CAFD,MAEO;UACL,OAAOO,UAAU,IAAMd,WAAW,iEAAjB,CAAjB;QACD;MACF,CAN2B,EAMzBM,iBANyB;IAFnB;EAHb,CADe,EAefA,iBAfe,CAAjB;AAiBD","names":["buildMessage","ValidateBy","IS_INSTANCE","isInstance","object","targetTypeConstructor","IsInstance","targetType","validationOptions","name","constraints","validator","validate","value","args","defaultMessage","eachPrefix"],"sourceRoot":"","sources":["../../../../src/decorator/object/IsInstance.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}