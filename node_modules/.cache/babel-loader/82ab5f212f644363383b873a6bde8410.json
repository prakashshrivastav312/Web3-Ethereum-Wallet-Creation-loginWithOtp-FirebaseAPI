{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isBase32Validator from 'validator/lib/isBase32';\nexport var IS_BASE32 = 'isBase32';\n/**\n * Checks if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\n\nexport function isBase32(value) {\n  return typeof value === 'string' && isBase32Validator(value);\n}\n/**\n * Check if a string is base32 encoded.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsBase32(validationOptions) {\n  return ValidateBy({\n    name: IS_BASE32,\n    validator: {\n      validate: function (value, args) {\n        return isBase32(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be base32 encoded';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AAEA,OAAO,IAAMC,SAAS,GAAG,UAAlB;AAEP;;;;;AAIA,OAAM,SAAUC,QAAV,CAAmBC,KAAnB,EAAiC;EACrC,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BH,iBAAiB,CAACG,KAAD,CAArD;AACD;AAED;;;;;AAIA,OAAM,SAAUC,QAAV,CAAmBC,iBAAnB,EAAwD;EAC5D,OAAON,UAAU,CACf;IACEO,IAAI,EAAEL,SADR;IAEEM,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACL,KAAD,EAAQM,IAAR,EAAY;QAAc,eAAQ,CAACN,KAAD,CAAR;MAAe,CAD1C;MAETO,cAAc,EAAEZ,YAAY,CAAC,sBAAU;QAAI,iBAAU,GAAG,kCAAb;MAA+C,CAA9D,EAAgEO,iBAAhE;IAFnB;EAFb,CADe,EAQfA,iBARe,CAAjB;AAUD","names":["buildMessage","ValidateBy","isBase32Validator","IS_BASE32","isBase32","value","IsBase32","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsBase32.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}