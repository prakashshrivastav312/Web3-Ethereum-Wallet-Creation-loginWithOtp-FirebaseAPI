{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-crypto\n * @hidden\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromBech32 = exports.toBech32 = exports.convertBits = exports.tHRP = exports.HRP = exports.bech32Decode = exports.bech32Encode = void 0;\n\nvar utils_1 = require(\"@harmony-js/utils\");\n\nvar keyTool_1 = require(\"./keyTool\"); // This code is taken from https://github.com/sipa/bech32/tree/bdc264f84014c234e908d72026b7b780122be11f/ref/javascript\n// Copyright (c) 2017 Pieter Wuille\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nvar CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\nvar GENERATOR = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\n\nvar polymod = function (values) {\n  var chk = 1; // tslint:disable-next-line\n\n  for (var p = 0; p < values.length; ++p) {\n    var top_1 = chk >> 25;\n    chk = (chk & 0x1ffffff) << 5 ^ values[p];\n\n    for (var i = 0; i < 5; ++i) {\n      if (top_1 >> i & 1) {\n        chk ^= GENERATOR[i];\n      }\n    }\n  }\n\n  return chk;\n};\n\nvar hrpExpand = function (hrp) {\n  var ret = [];\n  var p;\n\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) >> 5);\n  }\n\n  ret.push(0);\n\n  for (p = 0; p < hrp.length; ++p) {\n    ret.push(hrp.charCodeAt(p) & 31);\n  }\n\n  return Buffer.from(ret);\n};\n\nfunction verifyChecksum(hrp, data) {\n  return polymod(Buffer.concat([hrpExpand(hrp), data])) === 1;\n}\n\nfunction createChecksum(hrp, data) {\n  var values = Buffer.concat([Buffer.from(hrpExpand(hrp)), data, Buffer.from([0, 0, 0, 0, 0, 0])]); // var values = hrpExpand(hrp).concat(data).concat([0, 0, 0, 0, 0, 0]);\n\n  var mod = polymod(values) ^ 1;\n  var ret = [];\n\n  for (var p = 0; p < 6; ++p) {\n    ret.push(mod >> 5 * (5 - p) & 31);\n  }\n\n  return Buffer.from(ret);\n}\n\nexports.bech32Encode = function (hrp, data) {\n  var combined = Buffer.concat([data, createChecksum(hrp, data)]);\n  var ret = hrp + '1'; // tslint:disable-next-line\n\n  for (var p = 0; p < combined.length; ++p) {\n    ret += CHARSET.charAt(combined[p]);\n  }\n\n  return ret;\n};\n\nexports.bech32Decode = function (bechString) {\n  var p;\n  var hasLower = false;\n  var hasUpper = false;\n\n  for (p = 0; p < bechString.length; ++p) {\n    if (bechString.charCodeAt(p) < 33 || bechString.charCodeAt(p) > 126) {\n      return null;\n    }\n\n    if (bechString.charCodeAt(p) >= 97 && bechString.charCodeAt(p) <= 122) {\n      hasLower = true;\n    }\n\n    if (bechString.charCodeAt(p) >= 65 && bechString.charCodeAt(p) <= 90) {\n      hasUpper = true;\n    }\n  }\n\n  if (hasLower && hasUpper) {\n    return null;\n  }\n\n  bechString = bechString.toLowerCase();\n  var pos = bechString.lastIndexOf('1');\n\n  if (pos < 1 || pos + 7 > bechString.length || bechString.length > 90) {\n    return null;\n  }\n\n  var hrp = bechString.substring(0, pos);\n  var data = [];\n\n  for (p = pos + 1; p < bechString.length; ++p) {\n    var d = CHARSET.indexOf(bechString.charAt(p));\n\n    if (d === -1) {\n      return null;\n    }\n\n    data.push(d);\n  }\n\n  if (!verifyChecksum(hrp, Buffer.from(data))) {\n    return null;\n  }\n\n  return {\n    hrp: hrp,\n    data: Buffer.from(data.slice(0, data.length - 6))\n  };\n}; // HRP is the human-readable part of Harmony bech32 addresses\n\n\nexports.HRP = 'one';\nexports.tHRP = 'tone';\n/**\n * convertBits\n *\n * groups buffers of a certain width to buffers of the desired width.\n *\n * For example, converts byte buffers to buffers of maximum 5 bit numbers,\n * padding those numbers as necessary. Necessary for encoding Ethereum-style\n * addresses as bech32 ones.\n *\n * @param {Buffer} data\n * @param {number} fromWidth\n * @param {number} toWidth\n * @param {boolean} pad\n * @returns {Buffer|null}\n */\n\nexports.convertBits = function (data, fromWidth, toWidth, pad) {\n  if (pad === void 0) {\n    pad = true;\n  }\n\n  var acc = 0;\n  var bits = 0;\n  var ret = [];\n  var maxv = (1 << toWidth) - 1; // tslint:disable-next-line\n\n  for (var p = 0; p < data.length; ++p) {\n    var value = data[p];\n\n    if (value < 0 || value >> fromWidth !== 0) {\n      return null;\n    }\n\n    acc = acc << fromWidth | value;\n    bits += fromWidth;\n\n    while (bits >= toWidth) {\n      bits -= toWidth;\n      ret.push(acc >> bits & maxv);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      ret.push(acc << toWidth - bits & maxv);\n    }\n  } else if (bits >= fromWidth || acc << toWidth - bits & maxv) {\n    return null;\n  }\n\n  return Buffer.from(ret);\n};\n/**\n * toBech32Address\n *\n * bech32Encodes a canonical 20-byte Ethereum-style address as a bech32 Harmony\n * address.\n *\n * The expected format is one1<address><checksum> where address and checksum\n * are the result of bech32 encoding a Buffer containing the address bytes.\n *\n * @param {string} 20 byte canonical address\n * @returns {string} 38 char bech32 bech32Encoded Harmony address\n */\n\n\nexports.toBech32 = function (address, useHRP) {\n  if (useHRP === void 0) {\n    useHRP = exports.HRP;\n  }\n\n  if (!utils_1.isAddress(address)) {\n    throw new Error('Invalid address format.');\n  }\n\n  var addrBz = exports.convertBits(Buffer.from(address.replace('0x', ''), 'hex'), 8, 5);\n\n  if (addrBz === null) {\n    throw new Error('Could not convert byte Buffer to 5-bit Buffer');\n  }\n\n  return exports.bech32Encode(useHRP, addrBz);\n};\n/**\n * fromBech32Address\n *\n * @param {string} address - a valid Harmony bech32 address\n * @returns {string} a canonical 20-byte Ethereum-style address\n */\n\n\nexports.fromBech32 = function (address, useHRP) {\n  if (useHRP === void 0) {\n    useHRP = exports.HRP;\n  }\n\n  var res = exports.bech32Decode(address);\n\n  if (res === null) {\n    throw new Error('Invalid bech32 address');\n  }\n\n  var hrp = res.hrp,\n      data = res.data;\n\n  if (hrp !== useHRP) {\n    throw new Error(\"Expected hrp to be \" + useHRP + \" but got \" + hrp);\n  }\n\n  var buf = exports.convertBits(data, 5, 8, false);\n\n  if (buf === null) {\n    throw new Error('Could not convert buffer to bytes');\n  }\n\n  return keyTool_1.toChecksumAddress('0x' + buf.toString('hex'));\n};","map":{"version":3,"mappings":"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","names":["CHARSET","GENERATOR","polymod","values","chk","p","length","top_1","i","hrpExpand","hrp","ret","push","charCodeAt","Buffer","from","verifyChecksum","data","concat","createChecksum","mod","exports","combined","charAt","bechString","hasLower","hasUpper","toLowerCase","pos","lastIndexOf","substring","d","indexOf","slice","fromWidth","toWidth","pad","acc","bits","maxv","value","address","useHRP","utils_1","Error","addrBz","replace","res","buf","keyTool_1","toString"],"sourceRoot":"","sources":["../src/bech32.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}