{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHashValidator from 'validator/lib/isHash';\nexport var IS_HASH = 'isHash';\n/**\n * Check if the string is a hash of type algorithm.\n * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',\n * 'tiger160', 'tiger192', 'crc32', 'crc32b']\n */\n\nexport function isHash(value, algorithm) {\n  return typeof value === 'string' && isHashValidator(value, algorithm);\n}\n/**\n * Check if the string is a hash of type algorithm.\n * Algorithm is one of ['md4', 'md5', 'sha1', 'sha256', 'sha384', 'sha512', 'ripemd128', 'ripemd160', 'tiger128',\n * 'tiger160', 'tiger192', 'crc32', 'crc32b']\n */\n\nexport function IsHash(algorithm, validationOptions) {\n  return ValidateBy({\n    name: IS_HASH,\n    constraints: [algorithm],\n    validator: {\n      validate: function (value, args) {\n        return isHash(value, args.constraints[0]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a hash of type $constraint1';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AAGA,OAAO,IAAMC,OAAO,GAAG,QAAhB;AAEP;;;;;;AAKA,OAAM,SAAUC,MAAV,CAAiBC,KAAjB,EAAiCC,SAAjC,EAAqE;EACzE,OAAO,OAAOD,KAAP,KAAiB,QAAjB,IAA6BH,eAAe,CAACG,KAAD,EAAQC,SAAR,CAAnD;AACD;AAED;;;;;;AAKA,OAAM,SAAUC,MAAV,CAAiBD,SAAjB,EAAoCE,iBAApC,EAAyE;EAC7E,OAAOP,UAAU,CACf;IACEQ,IAAI,EAAEN,OADR;IAEEO,WAAW,EAAE,CAACJ,SAAD,CAFf;IAGEK,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACP,KAAD,EAAQQ,IAAR,EAAY;QAAc,aAAM,CAACR,KAAD,EAAQQ,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAR,CAAN;MAAkC,CAD7D;MAETI,cAAc,EAAEd,YAAY,CAC1B,sBAAU;QAAI,iBAAU,GAAG,+CAAb;MAA4D,CADhD,EAE1BQ,iBAF0B;IAFnB;EAHb,CADe,EAYfA,iBAZe,CAAjB;AAcD","names":["buildMessage","ValidateBy","isHashValidator","IS_HASH","isHash","value","algorithm","IsHash","validationOptions","name","constraints","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsHash.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}