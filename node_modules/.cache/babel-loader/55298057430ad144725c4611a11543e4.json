{"ast":null,"code":"'use strict';\n\nconst {\n  names\n} = require('multibase/src/constants');\n\nconst {\n  TextDecoder\n} = require('web-encoding');\n\nconst utf8Decoder = new TextDecoder('utf8');\n/**\n * Turns a Uint8Array of bytes into a string with each\n * character being the char code of the corresponding byte\n *\n * @param {Uint8Array} array The array to turn into a string\n * @returns {String}\n */\n\nfunction uint8ArrayToAsciiString(array) {\n  let string = '';\n\n  for (let i = 0; i < array.length; i++) {\n    string += String.fromCharCode(array[i]);\n  }\n\n  return string;\n}\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {Uint8Array} array The array to turn into a string\n * @param {String} [encoding=utf8] The encoding to use\n * @returns {String}\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\n */\n\n\nfunction toString(array) {\n  let encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'utf8';\n\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Decoder.decode(array);\n  }\n\n  if (encoding === 'ascii') {\n    return uint8ArrayToAsciiString(array);\n  }\n\n  const codec = names[encoding];\n\n  if (!codec) {\n    throw new Error('Unknown base');\n  }\n\n  return codec.encode(array);\n}\n\nmodule.exports = toString;","map":{"version":3,"names":["names","require","TextDecoder","utf8Decoder","uint8ArrayToAsciiString","array","string","i","length","String","fromCharCode","toString","encoding","decode","codec","Error","encode","module","exports"],"sources":["C:/Users/acer/node_modules/ipld-dag-pb/node_modules/uint8arrays/to-string.js"],"sourcesContent":["'use strict'\n\nconst { names } = require('multibase/src/constants')\nconst { TextDecoder } = require('web-encoding')\nconst utf8Decoder = new TextDecoder('utf8')\n\n/**\n * Turns a Uint8Array of bytes into a string with each\n * character being the char code of the corresponding byte\n *\n * @param {Uint8Array} array The array to turn into a string\n * @returns {String}\n */\nfunction uint8ArrayToAsciiString (array) {\n  let string = ''\n\n  for (let i = 0; i < array.length; i++) {\n    string += String.fromCharCode(array[i])\n  }\n  return string\n}\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {Uint8Array} array The array to turn into a string\n * @param {String} [encoding=utf8] The encoding to use\n * @returns {String}\n * @see {@link https://www.npmjs.com/package/multibase|multibase} for supported encodings other than `utf8`\n */\nfunction toString (array, encoding = 'utf8') {\n  if (encoding === 'utf8' || encoding === 'utf-8') {\n    return utf8Decoder.decode(array)\n  }\n\n  if (encoding === 'ascii') {\n    return uint8ArrayToAsciiString(array)\n  }\n\n  const codec = names[encoding]\n\n  if (!codec) {\n    throw new Error('Unknown base')\n  }\n\n  return codec.encode(array)\n}\n\nmodule.exports = toString\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAYC,OAAO,CAAC,yBAAD,CAAzB;;AACA,MAAM;EAAEC;AAAF,IAAkBD,OAAO,CAAC,cAAD,CAA/B;;AACA,MAAME,WAAW,GAAG,IAAID,WAAJ,CAAgB,MAAhB,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASE,uBAAT,CAAkCC,KAAlC,EAAyC;EACvC,IAAIC,MAAM,GAAG,EAAb;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACrCD,MAAM,IAAIG,MAAM,CAACC,YAAP,CAAoBL,KAAK,CAACE,CAAD,CAAzB,CAAV;EACD;;EACD,OAAOD,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,QAAT,CAAmBN,KAAnB,EAA6C;EAAA,IAAnBO,QAAmB,uEAAR,MAAQ;;EAC3C,IAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,KAAK,OAAxC,EAAiD;IAC/C,OAAOT,WAAW,CAACU,MAAZ,CAAmBR,KAAnB,CAAP;EACD;;EAED,IAAIO,QAAQ,KAAK,OAAjB,EAA0B;IACxB,OAAOR,uBAAuB,CAACC,KAAD,CAA9B;EACD;;EAED,MAAMS,KAAK,GAAGd,KAAK,CAACY,QAAD,CAAnB;;EAEA,IAAI,CAACE,KAAL,EAAY;IACV,MAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;EACD;;EAED,OAAOD,KAAK,CAACE,MAAN,CAAaX,KAAb,CAAP;AACD;;AAEDY,MAAM,CAACC,OAAP,GAAiBP,QAAjB"},"metadata":{},"sourceType":"script"}