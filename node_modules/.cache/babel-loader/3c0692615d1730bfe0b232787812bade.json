{"ast":null,"code":"/*\n  info from:\n    https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n*/\nvar common = {\n  name: 'Bitcoin',\n  per1: 1e8,\n  unit: 'BTC',\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n'\n};\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f',\n  // nDefaultPort\n  port: 8333,\n  portRpc: 8332,\n  protocol: {\n    // pchMessageStart\n    magic: 0xd9b4bef9 // careful, sent over wire as little endian\n\n  },\n  bech32: 'bc',\n  // vSeeds\n  seedsDns: ['seed.bitcoin.sipa.be', 'dnsseed.bluematt.me', 'seed.bitcoinstats.com', 'seed.bitcoin.jonasschnelli.ch', 'seed.btc.petertodd.org', 'seed.bitcoin.sprovoost.nl', 'dnsseed.emzy.de'],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 0,\n    private: 0x80,\n    public: 0x00,\n    scripthash: 0x05\n  }\n}, common);\nvar test = Object.assign({}, {\n  hashGenesisBlock: '000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943',\n  port: 18333,\n  portRpc: 18332,\n  protocol: {\n    magic: 0x0709110b\n  },\n  bech32: 'tb',\n  seedsDns: ['testnet-seed.alexykot.me', 'testnet-seed.bitcoin.schildbach.de', 'testnet-seed.bitcoin.petertodd.org', 'testnet-seed.bluematt.me'],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common);\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206',\n  port: 18444,\n  portRpc: 18332,\n  protocol: {\n    magic: 0xdab5bffa\n  },\n  bech32: 'bcrt',\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common); // source: https://github.com/btcsuite/btcd/blob/6867ff32788a1beb9d148e414d7f84f50958f0d2/chaincfg/params.go#L508\n\nvar simnet = Object.assign({}, {\n  hashGenesisBlock: 'f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68',\n  port: 18555,\n  portRpc: 18556,\n  protocol: {\n    magic: 0x12141c16\n  },\n  bech32: 'sb',\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x0420b900,\n      public: 0x0420bd3a\n    },\n    bip44: 115,\n    private: 0x64,\n    public: 0x3f,\n    scripthash: 0x7b\n  }\n}, common);\nmodule.exports = {\n  main,\n  test,\n  regtest,\n  simnet\n};","map":{"version":3,"names":["common","name","per1","unit","messagePrefix","main","Object","assign","hashGenesisBlock","port","portRpc","protocol","magic","bech32","seedsDns","versions","bip32","private","public","bip44","scripthash","test","regtest","simnet","module","exports"],"sources":["C:/Users/acer/node_modules/coininfo/lib/coins/btc.js"],"sourcesContent":["/*\n  info from:\n    https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp\n*/\n\nvar common = {\n  name: 'Bitcoin',\n  per1: 1e8,\n  unit: 'BTC',\n  messagePrefix: '\\x18Bitcoin Signed Message:\\n'\n}\n\nvar main = Object.assign({}, {\n  hashGenesisBlock: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f',\n  // nDefaultPort\n  port: 8333,\n  portRpc: 8332,\n  protocol: {\n    // pchMessageStart\n    magic: 0xd9b4bef9 // careful, sent over wire as little endian\n  },\n  bech32: 'bc',\n  // vSeeds\n  seedsDns: [\n    'seed.bitcoin.sipa.be',\n    'dnsseed.bluematt.me',\n    'seed.bitcoinstats.com',\n    'seed.bitcoin.jonasschnelli.ch',\n    'seed.btc.petertodd.org',\n    'seed.bitcoin.sprovoost.nl',\n    'dnsseed.emzy.de'\n  ],\n  // base58Prefixes\n  versions: {\n    bip32: {\n      private: 0x0488ade4,\n      public: 0x0488b21e\n    },\n    bip44: 0,\n    private: 0x80,\n    public: 0x00,\n    scripthash: 0x05\n  }\n}, common)\n\nvar test = Object.assign({}, {\n  hashGenesisBlock: '000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943',\n  port: 18333,\n  portRpc: 18332,\n  protocol: {\n    magic: 0x0709110b\n  },\n  bech32: 'tb',\n  seedsDns: [\n    'testnet-seed.alexykot.me',\n    'testnet-seed.bitcoin.schildbach.de',\n    'testnet-seed.bitcoin.petertodd.org',\n    'testnet-seed.bluematt.me'\n  ],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\nvar regtest = Object.assign({}, {\n  hashGenesisBlock: '0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206',\n  port: 18444,\n  portRpc: 18332,\n  protocol: {\n    magic: 0xdab5bffa\n  },\n  bech32: 'bcrt',\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x04358394,\n      public: 0x043587cf\n    },\n    bip44: 1,\n    private: 0xef,\n    public: 0x6f,\n    scripthash: 0xc4\n  }\n}, common)\n\n// source: https://github.com/btcsuite/btcd/blob/6867ff32788a1beb9d148e414d7f84f50958f0d2/chaincfg/params.go#L508\nvar simnet = Object.assign({}, {\n  hashGenesisBlock: 'f67ad7695d9b662a72ff3d8edbbb2de0bfa67b13974bb9910d116d5cbd863e68',\n  port: 18555,\n  portRpc: 18556,\n  protocol: {\n    magic: 0x12141c16\n  },\n  bech32: 'sb',\n  seedsDns: [],\n  versions: {\n    bip32: {\n      private: 0x0420b900,\n      public: 0x0420bd3a\n    },\n    bip44: 115,\n    private: 0x64,\n    public: 0x3f,\n    scripthash: 0x7b\n  }\n}, common)\n\nmodule.exports = {\n  main,\n  test,\n  regtest,\n  simnet\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}