{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrivateKeyOrSignatureIdBtcBased = void 0;\n\nconst class_validator_1 = require(\"class-validator\");\n\nconst SignatureIdValidator_1 = require(\"../validation/SignatureIdValidator\");\n\nclass PrivateKeyOrSignatureIdBtcBased {}\n\n__decorate([class_validator_1.ValidateIf(o => o.privateKey || !o.signatureId), class_validator_1.IsNotEmpty(), class_validator_1.Length(52, 256), __metadata(\"design:type\", String)], PrivateKeyOrSignatureIdBtcBased.prototype, \"privateKey\", void 0);\n\n__decorate([class_validator_1.ValidateIf(o => o.signatureId || !o.privateKey), class_validator_1.Validate(SignatureIdValidator_1.SignatureIdValidator), class_validator_1.IsNotEmpty(), class_validator_1.Length(36, 36), class_validator_1.IsUUID('4'), __metadata(\"design:type\", String)], PrivateKeyOrSignatureIdBtcBased.prototype, \"signatureId\", void 0);\n\nexports.PrivateKeyOrSignatureIdBtcBased = PrivateKeyOrSignatureIdBtcBased;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA,MAAaA,+BAAb,CAA4C;;AAI1CC,YAHCC,6BAAWC,CAAC,IAAKA,CAAC,CAACC,UAAF,IAAiB,CAACD,CAAC,CAACE,WAArC,CAGD,EAFCH,8BAED,EADCA,yBAAO,EAAP,EAAW,GAAX,CACD;;AAOAD,YALCC,6BAAWC,CAAC,IAAKA,CAAC,CAACE,WAAF,IAAiB,CAACF,CAAC,CAACC,UAArC,CAKD,EAJCF,2BAASI,2CAAT,CAID,EAHCJ,8BAGD,EAFCA,yBAAO,EAAP,EAAW,EAAX,CAED,EADCA,yBAAO,GAAP,CACD;;AAXFK","names":["PrivateKeyOrSignatureIdBtcBased","__decorate","class_validator_1","o","privateKey","signatureId","SignatureIdValidator_1","exports"],"sourceRoot":"","sources":["../../../../src/model/request/PrivateKeyOrSignatureIdBtcBased.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}