{"ast":null,"code":"var pushdata = require('@tatumio/pushdata-bitcoin');\n\nvar varuint = require('varuint-bitcoin'); // https://github.com/feross/buffer/blob/master/index.js#L1127\n\n\nfunction verifuint(value, max) {\n  if (typeof value !== 'number') throw new Error('cannot write a non-number as a number');\n  if (value < 0) throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value) throw new Error('value has a fractional component');\n}\n\nfunction readUInt64LE(buffer, offset) {\n  var a = buffer.readUInt32LE(offset);\n  var b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\n\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n} // TODO: remove in 4.0.0?\n\n\nfunction readVarInt(buffer, offset) {\n  var result = varuint.decode(buffer, offset);\n  return {\n    number: result,\n    size: varuint.decode.bytes\n  };\n} // TODO: remove in 4.0.0?\n\n\nfunction writeVarInt(buffer, number, offset) {\n  varuint.encode(number, buffer, offset);\n  return varuint.encode.bytes;\n}\n\nmodule.exports = {\n  pushDataSize: pushdata.encodingLength,\n  readPushDataInt: pushdata.decode,\n  readUInt64LE: readUInt64LE,\n  readVarInt: readVarInt,\n  varIntBuffer: varuint.encode,\n  varIntSize: varuint.encodingLength,\n  writePushDataInt: pushdata.encode,\n  writeUInt64LE: writeUInt64LE,\n  writeVarInt: writeVarInt\n};","map":{"version":3,"names":["pushdata","require","varuint","verifuint","value","max","Error","Math","floor","readUInt64LE","buffer","offset","a","readUInt32LE","b","writeUInt64LE","writeInt32LE","writeUInt32LE","readVarInt","result","decode","number","size","bytes","writeVarInt","encode","module","exports","pushDataSize","encodingLength","readPushDataInt","varIntBuffer","varIntSize","writePushDataInt"],"sources":["C:/Users/acer/node_modules/@tatumio/bitcoincashjs2-lib/src/bufferutils.js"],"sourcesContent":["var pushdata = require('@tatumio/pushdata-bitcoin')\nvar varuint = require('varuint-bitcoin')\n\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint (value, max) {\n  if (typeof value !== 'number') throw new Error('cannot write a non-number as a number')\n  if (value < 0) throw new Error('specified a negative value for writing an unsigned value')\n  if (value > max) throw new Error('RangeError: value out of range')\n  if (Math.floor(value) !== value) throw new Error('value has a fractional component')\n}\n\nfunction readUInt64LE (buffer, offset) {\n  var a = buffer.readUInt32LE(offset)\n  var b = buffer.readUInt32LE(offset + 4)\n  b *= 0x100000000\n\n  verifuint(b + a, 0x001fffffffffffff)\n\n  return b + a\n}\n\nfunction writeUInt64LE (buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff)\n\n  buffer.writeInt32LE(value & -1, offset)\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4)\n  return offset + 8\n}\n\n// TODO: remove in 4.0.0?\nfunction readVarInt (buffer, offset) {\n  var result = varuint.decode(buffer, offset)\n\n  return {\n    number: result,\n    size: varuint.decode.bytes\n  }\n}\n\n// TODO: remove in 4.0.0?\nfunction writeVarInt (buffer, number, offset) {\n  varuint.encode(number, buffer, offset)\n  return varuint.encode.bytes\n}\n\nmodule.exports = {\n  pushDataSize: pushdata.encodingLength,\n  readPushDataInt: pushdata.decode,\n  readUInt64LE: readUInt64LE,\n  readVarInt: readVarInt,\n  varIntBuffer: varuint.encode,\n  varIntSize: varuint.encodingLength,\n  writePushDataInt: pushdata.encode,\n  writeUInt64LE: writeUInt64LE,\n  writeVarInt: writeVarInt\n}\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,2BAAD,CAAtB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAArB,C,CAEA;;;AACA,SAASE,SAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;EAC9B,IAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B,MAAM,IAAIE,KAAJ,CAAU,uCAAV,CAAN;EAC/B,IAAIF,KAAK,GAAG,CAAZ,EAAe,MAAM,IAAIE,KAAJ,CAAU,0DAAV,CAAN;EACf,IAAIF,KAAK,GAAGC,GAAZ,EAAiB,MAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;EACjB,IAAIC,IAAI,CAACC,KAAL,CAAWJ,KAAX,MAAsBA,KAA1B,EAAiC,MAAM,IAAIE,KAAJ,CAAU,kCAAV,CAAN;AAClC;;AAED,SAASG,YAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuC;EACrC,IAAIC,CAAC,GAAGF,MAAM,CAACG,YAAP,CAAoBF,MAApB,CAAR;EACA,IAAIG,CAAC,GAAGJ,MAAM,CAACG,YAAP,CAAoBF,MAAM,GAAG,CAA7B,CAAR;EACAG,CAAC,IAAI,WAAL;EAEAX,SAAS,CAACW,CAAC,GAAGF,CAAL,EAAQ,kBAAR,CAAT;EAEA,OAAOE,CAAC,GAAGF,CAAX;AACD;;AAED,SAASG,aAAT,CAAwBL,MAAxB,EAAgCN,KAAhC,EAAuCO,MAAvC,EAA+C;EAC7CR,SAAS,CAACC,KAAD,EAAQ,kBAAR,CAAT;EAEAM,MAAM,CAACM,YAAP,CAAoBZ,KAAK,GAAG,CAAC,CAA7B,EAAgCO,MAAhC;EACAD,MAAM,CAACO,aAAP,CAAqBV,IAAI,CAACC,KAAL,CAAWJ,KAAK,GAAG,WAAnB,CAArB,EAAsDO,MAAM,GAAG,CAA/D;EACA,OAAOA,MAAM,GAAG,CAAhB;AACD,C,CAED;;;AACA,SAASO,UAAT,CAAqBR,MAArB,EAA6BC,MAA7B,EAAqC;EACnC,IAAIQ,MAAM,GAAGjB,OAAO,CAACkB,MAAR,CAAeV,MAAf,EAAuBC,MAAvB,CAAb;EAEA,OAAO;IACLU,MAAM,EAAEF,MADH;IAELG,IAAI,EAAEpB,OAAO,CAACkB,MAAR,CAAeG;EAFhB,CAAP;AAID,C,CAED;;;AACA,SAASC,WAAT,CAAsBd,MAAtB,EAA8BW,MAA9B,EAAsCV,MAAtC,EAA8C;EAC5CT,OAAO,CAACuB,MAAR,CAAeJ,MAAf,EAAuBX,MAAvB,EAA+BC,MAA/B;EACA,OAAOT,OAAO,CAACuB,MAAR,CAAeF,KAAtB;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;EACfC,YAAY,EAAE5B,QAAQ,CAAC6B,cADR;EAEfC,eAAe,EAAE9B,QAAQ,CAACoB,MAFX;EAGfX,YAAY,EAAEA,YAHC;EAIfS,UAAU,EAAEA,UAJG;EAKfa,YAAY,EAAE7B,OAAO,CAACuB,MALP;EAMfO,UAAU,EAAE9B,OAAO,CAAC2B,cANL;EAOfI,gBAAgB,EAAEjC,QAAQ,CAACyB,MAPZ;EAQfV,aAAa,EAAEA,aARA;EASfS,WAAW,EAAEA;AATE,CAAjB"},"metadata":{},"sourceType":"script"}