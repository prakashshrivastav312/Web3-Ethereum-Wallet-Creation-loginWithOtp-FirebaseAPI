{"ast":null,"code":"'use strict';\n\nvar _ = require('lodash');\n\nvar $ = require('../util/preconditions');\n\nvar inherits = require('inherits');\n\nvar BufferUtil = require('../util/buffer');\n\nvar JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\n\nvar errors = require('../errors');\n\nvar Signature = require('../crypto/signature');\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\n\n\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\n\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function (arg) {\n  this._checkObjectArgs(arg);\n\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : Buffer.from(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = arg.signature instanceof Signature ? arg.signature : BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) : Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function (arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature || BufferUtil.isBuffer(arg.signature) || JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) || JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\n\n\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\n\n\nTransactionSignature.fromObject = function (object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;","map":{"version":3,"names":["_","require","$","inherits","BufferUtil","JSUtil","PublicKey","errors","Signature","TransactionSignature","arg","isObject","_fromObject","InvalidArgument","prototype","_checkObjectArgs","publicKey","prevTxId","isBuffer","Buffer","from","outputIndex","inputIndex","signature","fromBuffer","fromString","sigtype","checkArgument","isUndefined","checkState","isNumber","isHexa","toObject","toJSON","toString","fromObject","object","module","exports"],"sources":["C:/Users/acer/node_modules/bitcore-lib/lib/transaction/signature.js"],"sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar inherits = require('inherits');\nvar BufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\nvar errors = require('../errors');\nvar Signature = require('../crypto/signature');\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function(arg) {\n  this._checkObjectArgs(arg);\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : Buffer.from(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = (arg.signature instanceof Signature) ? arg.signature :\n                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :\n                     Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function(arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature ||\n               BufferUtil.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function(object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}