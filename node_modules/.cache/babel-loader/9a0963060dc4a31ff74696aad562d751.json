{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Blob = void 0;\n\nvar serialized_type_1 = require(\"./serialized-type\");\n\nvar buffer_1 = require(\"buffer/\");\n/**\n * Variable length encoded type\n */\n\n\nvar Blob =\n/** @class */\nfunction (_super) {\n  __extends(Blob, _super);\n\n  function Blob(bytes) {\n    return _super.call(this, bytes) || this;\n  }\n  /**\n   * Defines how to read a Blob from a BinaryParser\n   *\n   * @param parser The binary parser to read the Blob from\n   * @param hint The length of the blob, computed by readVariableLengthLength() and passed in\n   * @returns A Blob object\n   */\n\n\n  Blob.fromParser = function (parser, hint) {\n    return new Blob(parser.read(hint));\n  };\n  /**\n   * Create a Blob object from a hex-string\n   *\n   * @param value existing Blob object or a hex-string\n   * @returns A Blob object\n   */\n\n\n  Blob.from = function (value) {\n    if (value instanceof Blob) {\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      return new Blob(buffer_1.Buffer.from(value, 'hex'));\n    }\n\n    throw new Error('Cannot construct Blob from value given');\n  };\n\n  return Blob;\n}(serialized_type_1.SerializedType);\n\nexports.Blob = Blob;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AAEA;;;;;AAGA;AAAA;AAAA;EAAmBA;;EACjB,cAAYC,KAAZ,EAAyB;WACvBC,kBAAMD,KAAN,KAAY;EACb;EAED;;;;;;;;;EAOOE,kBAAP,UAAkBC,MAAlB,EAAwCC,IAAxC,EAAoD;IAClD,OAAO,IAAIF,IAAJ,CAASC,MAAM,CAACE,IAAP,CAAYD,IAAZ,CAAT,CAAP;EACD,CAFM;EAIP;;;;;;;;EAMOF,YAAP,UAAqCI,KAArC,EAA6C;IAC3C,IAAIA,KAAK,YAAYJ,IAArB,EAA2B;MACzB,OAAOI,KAAP;IACD;;IAED,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OAAO,IAAIJ,IAAJ,CAASK,gBAAOC,IAAP,CAAYF,KAAZ,EAAmB,KAAnB,CAAT,CAAP;IACD;;IAED,MAAM,IAAIG,KAAJ,CAAU,wCAAV,CAAN;EACD,CAVM;;EAWT;AAAC,CAjCD,CAAmBC,gCAAnB;;AAmCSC","names":["__extends","bytes","_super","Blob","parser","hint","read","value","buffer_1","from","Error","serialized_type_1","exports"],"sourceRoot":"","sources":["../../src/types/blob.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}