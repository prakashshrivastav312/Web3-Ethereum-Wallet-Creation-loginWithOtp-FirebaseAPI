{"ast":null,"code":"var bigInt = function (undefined) {\n  \"use strict\";\n\n  var BASE = 1e7,\n      LOG_BASE = 7,\n      MAX_INT = 9007199254740992,\n      MAX_INT_ARR = smallToArray(MAX_INT),\n      LOG_MAX_INT = Math.log(MAX_INT);\n\n  function Integer(v, radix) {\n    if (typeof v === \"undefined\") return Integer[0];\n    if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\n    return parseValue(v);\n  }\n\n  function BigInteger(value, sign) {\n    this.value = value;\n    this.sign = sign;\n    this.isSmall = false;\n  }\n\n  BigInteger.prototype = Object.create(Integer.prototype);\n\n  function SmallInteger(value) {\n    this.value = value;\n    this.sign = value < 0;\n    this.isSmall = true;\n  }\n\n  SmallInteger.prototype = Object.create(Integer.prototype);\n\n  function isPrecise(n) {\n    return -MAX_INT < n && n < MAX_INT;\n  }\n\n  function smallToArray(n) {\n    // For performance reasons doesn't reference BASE, need to change this function if BASE changes\n    if (n < 1e7) return [n];\n    if (n < 1e14) return [n % 1e7, Math.floor(n / 1e7)];\n    return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\n  }\n\n  function arrayToSmall(arr) {\n    // If BASE changes this function may need to change\n    trim(arr);\n    var length = arr.length;\n\n    if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\n      switch (length) {\n        case 0:\n          return 0;\n\n        case 1:\n          return arr[0];\n\n        case 2:\n          return arr[0] + arr[1] * BASE;\n\n        default:\n          return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\n      }\n    }\n\n    return arr;\n  }\n\n  function trim(v) {\n    var i = v.length;\n\n    while (v[--i] === 0);\n\n    v.length = i + 1;\n  }\n\n  function createArray(length) {\n    // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\n    var x = new Array(length);\n    var i = -1;\n\n    while (++i < length) {\n      x[i] = 0;\n    }\n\n    return x;\n  }\n\n  function truncate(n) {\n    if (n > 0) return Math.floor(n);\n    return Math.ceil(n);\n  }\n\n  function add(a, b) {\n    // assumes a and b are arrays with a.length >= b.length\n    var l_a = a.length,\n        l_b = b.length,\n        r = new Array(l_a),\n        carry = 0,\n        base = BASE,\n        sum,\n        i;\n\n    for (i = 0; i < l_b; i++) {\n      sum = a[i] + b[i] + carry;\n      carry = sum >= base ? 1 : 0;\n      r[i] = sum - carry * base;\n    }\n\n    while (i < l_a) {\n      sum = a[i] + carry;\n      carry = sum === base ? 1 : 0;\n      r[i++] = sum - carry * base;\n    }\n\n    if (carry > 0) r.push(carry);\n    return r;\n  }\n\n  function addAny(a, b) {\n    if (a.length >= b.length) return add(a, b);\n    return add(b, a);\n  }\n\n  function addSmall(a, carry) {\n    // assumes a is array, carry is number with 0 <= carry < MAX_INT\n    var l = a.length,\n        r = new Array(l),\n        base = BASE,\n        sum,\n        i;\n\n    for (i = 0; i < l; i++) {\n      sum = a[i] - base + carry;\n      carry = Math.floor(sum / base);\n      r[i] = sum - carry * base;\n      carry += 1;\n    }\n\n    while (carry > 0) {\n      r[i++] = carry % base;\n      carry = Math.floor(carry / base);\n    }\n\n    return r;\n  }\n\n  BigInteger.prototype.add = function (v) {\n    var n = parseValue(v);\n\n    if (this.sign !== n.sign) {\n      return this.subtract(n.negate());\n    }\n\n    var a = this.value,\n        b = n.value;\n\n    if (n.isSmall) {\n      return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\n    }\n\n    return new BigInteger(addAny(a, b), this.sign);\n  };\n\n  BigInteger.prototype.plus = BigInteger.prototype.add;\n\n  SmallInteger.prototype.add = function (v) {\n    var n = parseValue(v);\n    var a = this.value;\n\n    if (a < 0 !== n.sign) {\n      return this.subtract(n.negate());\n    }\n\n    var b = n.value;\n\n    if (n.isSmall) {\n      if (isPrecise(a + b)) return new SmallInteger(a + b);\n      b = smallToArray(Math.abs(b));\n    }\n\n    return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\n  };\n\n  SmallInteger.prototype.plus = SmallInteger.prototype.add;\n\n  function subtract(a, b) {\n    // assumes a and b are arrays with a >= b\n    var a_l = a.length,\n        b_l = b.length,\n        r = new Array(a_l),\n        borrow = 0,\n        base = BASE,\n        i,\n        difference;\n\n    for (i = 0; i < b_l; i++) {\n      difference = a[i] - borrow - b[i];\n\n      if (difference < 0) {\n        difference += base;\n        borrow = 1;\n      } else borrow = 0;\n\n      r[i] = difference;\n    }\n\n    for (i = b_l; i < a_l; i++) {\n      difference = a[i] - borrow;\n      if (difference < 0) difference += base;else {\n        r[i++] = difference;\n        break;\n      }\n      r[i] = difference;\n    }\n\n    for (; i < a_l; i++) {\n      r[i] = a[i];\n    }\n\n    trim(r);\n    return r;\n  }\n\n  function subtractAny(a, b, sign) {\n    var value;\n\n    if (compareAbs(a, b) >= 0) {\n      value = subtract(a, b);\n    } else {\n      value = subtract(b, a);\n      sign = !sign;\n    }\n\n    value = arrayToSmall(value);\n\n    if (typeof value === \"number\") {\n      if (sign) value = -value;\n      return new SmallInteger(value);\n    }\n\n    return new BigInteger(value, sign);\n  }\n\n  function subtractSmall(a, b, sign) {\n    // assumes a is array, b is number with 0 <= b < MAX_INT\n    var l = a.length,\n        r = new Array(l),\n        carry = -b,\n        base = BASE,\n        i,\n        difference;\n\n    for (i = 0; i < l; i++) {\n      difference = a[i] + carry;\n      carry = Math.floor(difference / base);\n      difference %= base;\n      r[i] = difference < 0 ? difference + base : difference;\n    }\n\n    r = arrayToSmall(r);\n\n    if (typeof r === \"number\") {\n      if (sign) r = -r;\n      return new SmallInteger(r);\n    }\n\n    return new BigInteger(r, sign);\n  }\n\n  BigInteger.prototype.subtract = function (v) {\n    var n = parseValue(v);\n\n    if (this.sign !== n.sign) {\n      return this.add(n.negate());\n    }\n\n    var a = this.value,\n        b = n.value;\n    if (n.isSmall) return subtractSmall(a, Math.abs(b), this.sign);\n    return subtractAny(a, b, this.sign);\n  };\n\n  BigInteger.prototype.minus = BigInteger.prototype.subtract;\n\n  SmallInteger.prototype.subtract = function (v) {\n    var n = parseValue(v);\n    var a = this.value;\n\n    if (a < 0 !== n.sign) {\n      return this.add(n.negate());\n    }\n\n    var b = n.value;\n\n    if (n.isSmall) {\n      return new SmallInteger(a - b);\n    }\n\n    return subtractSmall(b, Math.abs(a), a >= 0);\n  };\n\n  SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\n\n  BigInteger.prototype.negate = function () {\n    return new BigInteger(this.value, !this.sign);\n  };\n\n  SmallInteger.prototype.negate = function () {\n    var sign = this.sign;\n    var small = new SmallInteger(-this.value);\n    small.sign = !sign;\n    return small;\n  };\n\n  BigInteger.prototype.abs = function () {\n    return new BigInteger(this.value, false);\n  };\n\n  SmallInteger.prototype.abs = function () {\n    return new SmallInteger(Math.abs(this.value));\n  };\n\n  function multiplyLong(a, b) {\n    var a_l = a.length,\n        b_l = b.length,\n        l = a_l + b_l,\n        r = createArray(l),\n        base = BASE,\n        product,\n        carry,\n        i,\n        a_i,\n        b_j;\n\n    for (i = 0; i < a_l; ++i) {\n      a_i = a[i];\n\n      for (var j = 0; j < b_l; ++j) {\n        b_j = b[j];\n        product = a_i * b_j + r[i + j];\n        carry = Math.floor(product / base);\n        r[i + j] = product - carry * base;\n        r[i + j + 1] += carry;\n      }\n    }\n\n    trim(r);\n    return r;\n  }\n\n  function multiplySmall(a, b) {\n    // assumes a is array, b is number with |b| < BASE\n    var l = a.length,\n        r = new Array(l),\n        base = BASE,\n        carry = 0,\n        product,\n        i;\n\n    for (i = 0; i < l; i++) {\n      product = a[i] * b + carry;\n      carry = Math.floor(product / base);\n      r[i] = product - carry * base;\n    }\n\n    while (carry > 0) {\n      r[i++] = carry % base;\n      carry = Math.floor(carry / base);\n    }\n\n    return r;\n  }\n\n  function shiftLeft(x, n) {\n    var r = [];\n\n    while (n-- > 0) r.push(0);\n\n    return r.concat(x);\n  }\n\n  function multiplyKaratsuba(x, y) {\n    var n = Math.max(x.length, y.length);\n    if (n <= 30) return multiplyLong(x, y);\n    n = Math.ceil(n / 2);\n    var b = x.slice(n),\n        a = x.slice(0, n),\n        d = y.slice(n),\n        c = y.slice(0, n);\n    var ac = multiplyKaratsuba(a, c),\n        bd = multiplyKaratsuba(b, d),\n        abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\n    var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\n    trim(product);\n    return product;\n  } // The following function is derived from a surface fit of a graph plotting the performance difference\n  // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\n\n\n  function useKaratsuba(l1, l2) {\n    return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\n  }\n\n  BigInteger.prototype.multiply = function (v) {\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value,\n        sign = this.sign !== n.sign,\n        abs;\n\n    if (n.isSmall) {\n      if (b === 0) return Integer[0];\n      if (b === 1) return this;\n      if (b === -1) return this.negate();\n      abs = Math.abs(b);\n\n      if (abs < BASE) {\n        return new BigInteger(multiplySmall(a, abs), sign);\n      }\n\n      b = smallToArray(abs);\n    }\n\n    if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\n      return new BigInteger(multiplyKaratsuba(a, b), sign);\n    return new BigInteger(multiplyLong(a, b), sign);\n  };\n\n  BigInteger.prototype.times = BigInteger.prototype.multiply;\n\n  function multiplySmallAndArray(a, b, sign) {\n    // a >= 0\n    if (a < BASE) {\n      return new BigInteger(multiplySmall(b, a), sign);\n    }\n\n    return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\n  }\n\n  SmallInteger.prototype._multiplyBySmall = function (a) {\n    if (isPrecise(a.value * this.value)) {\n      return new SmallInteger(a.value * this.value);\n    }\n\n    return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\n  };\n\n  BigInteger.prototype._multiplyBySmall = function (a) {\n    if (a.value === 0) return Integer[0];\n    if (a.value === 1) return this;\n    if (a.value === -1) return this.negate();\n    return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\n  };\n\n  SmallInteger.prototype.multiply = function (v) {\n    return parseValue(v)._multiplyBySmall(this);\n  };\n\n  SmallInteger.prototype.times = SmallInteger.prototype.multiply;\n\n  function square(a) {\n    //console.assert(2 * BASE * BASE < MAX_INT);\n    var l = a.length,\n        r = createArray(l + l),\n        base = BASE,\n        product,\n        carry,\n        i,\n        a_i,\n        a_j;\n\n    for (i = 0; i < l; i++) {\n      a_i = a[i];\n      carry = 0 - a_i * a_i;\n\n      for (var j = i; j < l; j++) {\n        a_j = a[j];\n        product = 2 * (a_i * a_j) + r[i + j] + carry;\n        carry = Math.floor(product / base);\n        r[i + j] = product - carry * base;\n      }\n\n      r[i + l] = carry;\n    }\n\n    trim(r);\n    return r;\n  }\n\n  BigInteger.prototype.square = function () {\n    return new BigInteger(square(this.value), false);\n  };\n\n  SmallInteger.prototype.square = function () {\n    var value = this.value * this.value;\n    if (isPrecise(value)) return new SmallInteger(value);\n    return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\n  };\n\n  function divMod1(a, b) {\n    // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\n    var a_l = a.length,\n        b_l = b.length,\n        base = BASE,\n        result = createArray(b.length),\n        divisorMostSignificantDigit = b[b_l - 1],\n        // normalization\n    lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\n        remainder = multiplySmall(a, lambda),\n        divisor = multiplySmall(b, lambda),\n        quotientDigit,\n        shift,\n        carry,\n        borrow,\n        i,\n        l,\n        q;\n    if (remainder.length <= a_l) remainder.push(0);\n    divisor.push(0);\n    divisorMostSignificantDigit = divisor[b_l - 1];\n\n    for (shift = a_l - b_l; shift >= 0; shift--) {\n      quotientDigit = base - 1;\n\n      if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\n        quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\n      } // quotientDigit <= base - 1\n\n\n      carry = 0;\n      borrow = 0;\n      l = divisor.length;\n\n      for (i = 0; i < l; i++) {\n        carry += quotientDigit * divisor[i];\n        q = Math.floor(carry / base);\n        borrow += remainder[shift + i] - (carry - q * base);\n        carry = q;\n\n        if (borrow < 0) {\n          remainder[shift + i] = borrow + base;\n          borrow = -1;\n        } else {\n          remainder[shift + i] = borrow;\n          borrow = 0;\n        }\n      }\n\n      while (borrow !== 0) {\n        quotientDigit -= 1;\n        carry = 0;\n\n        for (i = 0; i < l; i++) {\n          carry += remainder[shift + i] - base + divisor[i];\n\n          if (carry < 0) {\n            remainder[shift + i] = carry + base;\n            carry = 0;\n          } else {\n            remainder[shift + i] = carry;\n            carry = 1;\n          }\n        }\n\n        borrow += carry;\n      }\n\n      result[shift] = quotientDigit;\n    } // denormalization\n\n\n    remainder = divModSmall(remainder, lambda)[0];\n    return [arrayToSmall(result), arrayToSmall(remainder)];\n  }\n\n  function divMod2(a, b) {\n    // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\n    // Performs faster than divMod1 on larger input sizes.\n    var a_l = a.length,\n        b_l = b.length,\n        result = [],\n        part = [],\n        base = BASE,\n        guess,\n        xlen,\n        highx,\n        highy,\n        check;\n\n    while (a_l) {\n      part.unshift(a[--a_l]);\n      trim(part);\n\n      if (compareAbs(part, b) < 0) {\n        result.push(0);\n        continue;\n      }\n\n      xlen = part.length;\n      highx = part[xlen - 1] * base + part[xlen - 2];\n      highy = b[b_l - 1] * base + b[b_l - 2];\n\n      if (xlen > b_l) {\n        highx = (highx + 1) * base;\n      }\n\n      guess = Math.ceil(highx / highy);\n\n      do {\n        check = multiplySmall(b, guess);\n        if (compareAbs(check, part) <= 0) break;\n        guess--;\n      } while (guess);\n\n      result.push(guess);\n      part = subtract(part, check);\n    }\n\n    result.reverse();\n    return [arrayToSmall(result), arrayToSmall(part)];\n  }\n\n  function divModSmall(value, lambda) {\n    var length = value.length,\n        quotient = createArray(length),\n        base = BASE,\n        i,\n        q,\n        remainder,\n        divisor;\n    remainder = 0;\n\n    for (i = length - 1; i >= 0; --i) {\n      divisor = remainder * base + value[i];\n      q = truncate(divisor / lambda);\n      remainder = divisor - q * lambda;\n      quotient[i] = q | 0;\n    }\n\n    return [quotient, remainder | 0];\n  }\n\n  function divModAny(self, v) {\n    var value,\n        n = parseValue(v);\n    var a = self.value,\n        b = n.value;\n    var quotient;\n    if (b === 0) throw new Error(\"Cannot divide by zero\");\n\n    if (self.isSmall) {\n      if (n.isSmall) {\n        return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\n      }\n\n      return [Integer[0], self];\n    }\n\n    if (n.isSmall) {\n      if (b === 1) return [self, Integer[0]];\n      if (b == -1) return [self.negate(), Integer[0]];\n      var abs = Math.abs(b);\n\n      if (abs < BASE) {\n        value = divModSmall(a, abs);\n        quotient = arrayToSmall(value[0]);\n        var remainder = value[1];\n        if (self.sign) remainder = -remainder;\n\n        if (typeof quotient === \"number\") {\n          if (self.sign !== n.sign) quotient = -quotient;\n          return [new SmallInteger(quotient), new SmallInteger(remainder)];\n        }\n\n        return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\n      }\n\n      b = smallToArray(abs);\n    }\n\n    var comparison = compareAbs(a, b);\n    if (comparison === -1) return [Integer[0], self];\n    if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]]; // divMod1 is faster on smaller input sizes\n\n    if (a.length + b.length <= 200) value = divMod1(a, b);else value = divMod2(a, b);\n    quotient = value[0];\n    var qSign = self.sign !== n.sign,\n        mod = value[1],\n        mSign = self.sign;\n\n    if (typeof quotient === \"number\") {\n      if (qSign) quotient = -quotient;\n      quotient = new SmallInteger(quotient);\n    } else quotient = new BigInteger(quotient, qSign);\n\n    if (typeof mod === \"number\") {\n      if (mSign) mod = -mod;\n      mod = new SmallInteger(mod);\n    } else mod = new BigInteger(mod, mSign);\n\n    return [quotient, mod];\n  }\n\n  BigInteger.prototype.divmod = function (v) {\n    var result = divModAny(this, v);\n    return {\n      quotient: result[0],\n      remainder: result[1]\n    };\n  };\n\n  SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\n\n  BigInteger.prototype.divide = function (v) {\n    return divModAny(this, v)[0];\n  };\n\n  SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\n\n  BigInteger.prototype.mod = function (v) {\n    return divModAny(this, v)[1];\n  };\n\n  SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\n\n  BigInteger.prototype.pow = function (v) {\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value,\n        value,\n        x,\n        y;\n    if (b === 0) return Integer[1];\n    if (a === 0) return Integer[0];\n    if (a === 1) return Integer[1];\n    if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\n\n    if (n.sign) {\n      return Integer[0];\n    }\n\n    if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\n\n    if (this.isSmall) {\n      if (isPrecise(value = Math.pow(a, b))) return new SmallInteger(truncate(value));\n    }\n\n    x = this;\n    y = Integer[1];\n\n    while (true) {\n      if (b & 1 === 1) {\n        y = y.times(x);\n        --b;\n      }\n\n      if (b === 0) break;\n      b /= 2;\n      x = x.square();\n    }\n\n    return y;\n  };\n\n  SmallInteger.prototype.pow = BigInteger.prototype.pow;\n\n  BigInteger.prototype.modPow = function (exp, mod) {\n    exp = parseValue(exp);\n    mod = parseValue(mod);\n    if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\n    var r = Integer[1],\n        base = this.mod(mod);\n\n    while (exp.isPositive()) {\n      if (base.isZero()) return Integer[0];\n      if (exp.isOdd()) r = r.multiply(base).mod(mod);\n      exp = exp.divide(2);\n      base = base.square().mod(mod);\n    }\n\n    return r;\n  };\n\n  SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\n\n  function compareAbs(a, b) {\n    if (a.length !== b.length) {\n      return a.length > b.length ? 1 : -1;\n    }\n\n    for (var i = a.length - 1; i >= 0; i--) {\n      if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\n    }\n\n    return 0;\n  }\n\n  BigInteger.prototype.compareAbs = function (v) {\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value;\n    if (n.isSmall) return 1;\n    return compareAbs(a, b);\n  };\n\n  SmallInteger.prototype.compareAbs = function (v) {\n    var n = parseValue(v),\n        a = Math.abs(this.value),\n        b = n.value;\n\n    if (n.isSmall) {\n      b = Math.abs(b);\n      return a === b ? 0 : a > b ? 1 : -1;\n    }\n\n    return -1;\n  };\n\n  BigInteger.prototype.compare = function (v) {\n    // See discussion about comparison with Infinity:\n    // https://github.com/peterolson/BigInteger.js/issues/61\n    if (v === Infinity) {\n      return -1;\n    }\n\n    if (v === -Infinity) {\n      return 1;\n    }\n\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value;\n\n    if (this.sign !== n.sign) {\n      return n.sign ? 1 : -1;\n    }\n\n    if (n.isSmall) {\n      return this.sign ? -1 : 1;\n    }\n\n    return compareAbs(a, b) * (this.sign ? -1 : 1);\n  };\n\n  BigInteger.prototype.compareTo = BigInteger.prototype.compare;\n\n  SmallInteger.prototype.compare = function (v) {\n    if (v === Infinity) {\n      return -1;\n    }\n\n    if (v === -Infinity) {\n      return 1;\n    }\n\n    var n = parseValue(v),\n        a = this.value,\n        b = n.value;\n\n    if (n.isSmall) {\n      return a == b ? 0 : a > b ? 1 : -1;\n    }\n\n    if (a < 0 !== n.sign) {\n      return a < 0 ? -1 : 1;\n    }\n\n    return a < 0 ? 1 : -1;\n  };\n\n  SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\n\n  BigInteger.prototype.equals = function (v) {\n    return this.compare(v) === 0;\n  };\n\n  SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\n\n  BigInteger.prototype.notEquals = function (v) {\n    return this.compare(v) !== 0;\n  };\n\n  SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\n\n  BigInteger.prototype.greater = function (v) {\n    return this.compare(v) > 0;\n  };\n\n  SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\n\n  BigInteger.prototype.lesser = function (v) {\n    return this.compare(v) < 0;\n  };\n\n  SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\n\n  BigInteger.prototype.greaterOrEquals = function (v) {\n    return this.compare(v) >= 0;\n  };\n\n  SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\n\n  BigInteger.prototype.lesserOrEquals = function (v) {\n    return this.compare(v) <= 0;\n  };\n\n  SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\n\n  BigInteger.prototype.isEven = function () {\n    return (this.value[0] & 1) === 0;\n  };\n\n  SmallInteger.prototype.isEven = function () {\n    return (this.value & 1) === 0;\n  };\n\n  BigInteger.prototype.isOdd = function () {\n    return (this.value[0] & 1) === 1;\n  };\n\n  SmallInteger.prototype.isOdd = function () {\n    return (this.value & 1) === 1;\n  };\n\n  BigInteger.prototype.isPositive = function () {\n    return !this.sign;\n  };\n\n  SmallInteger.prototype.isPositive = function () {\n    return this.value > 0;\n  };\n\n  BigInteger.prototype.isNegative = function () {\n    return this.sign;\n  };\n\n  SmallInteger.prototype.isNegative = function () {\n    return this.value < 0;\n  };\n\n  BigInteger.prototype.isUnit = function () {\n    return false;\n  };\n\n  SmallInteger.prototype.isUnit = function () {\n    return Math.abs(this.value) === 1;\n  };\n\n  BigInteger.prototype.isZero = function () {\n    return false;\n  };\n\n  SmallInteger.prototype.isZero = function () {\n    return this.value === 0;\n  };\n\n  BigInteger.prototype.isDivisibleBy = function (v) {\n    var n = parseValue(v);\n    var value = n.value;\n    if (value === 0) return false;\n    if (value === 1) return true;\n    if (value === 2) return this.isEven();\n    return this.mod(n).equals(Integer[0]);\n  };\n\n  SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\n\n  function isBasicPrime(v) {\n    var n = v.abs();\n    if (n.isUnit()) return false;\n    if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\n    if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\n    if (n.lesser(49)) return true; // we don't know if it's prime: let the other functions figure it out\n  }\n\n  function millerRabinTest(n, a) {\n    var nPrev = n.prev(),\n        b = nPrev,\n        r = 0,\n        d,\n        t,\n        i,\n        x;\n\n    while (b.isEven()) b = b.divide(2), r++;\n\n    next: for (i = 0; i < a.length; i++) {\n      if (n.lesser(a[i])) continue;\n      x = bigInt(a[i]).modPow(b, n);\n      if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\n\n      for (d = r - 1; d != 0; d--) {\n        x = x.square().mod(n);\n        if (x.isUnit()) return false;\n        if (x.equals(nPrev)) continue next;\n      }\n\n      return false;\n    }\n\n    return true;\n  } // Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\n\n\n  BigInteger.prototype.isPrime = function (strict) {\n    var isPrime = isBasicPrime(this);\n    if (isPrime !== undefined) return isPrime;\n    var n = this.abs();\n    var bits = n.bitLength();\n    if (bits <= 64) return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\n    var logN = Math.log(2) * bits;\n    var t = Math.ceil(strict === true ? 2 * Math.pow(logN, 2) : logN);\n\n    for (var a = [], i = 0; i < t; i++) {\n      a.push(bigInt(i + 2));\n    }\n\n    return millerRabinTest(n, a);\n  };\n\n  SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\n\n  BigInteger.prototype.isProbablePrime = function (iterations) {\n    var isPrime = isBasicPrime(this);\n    if (isPrime !== undefined) return isPrime;\n    var n = this.abs();\n    var t = iterations === undefined ? 5 : iterations;\n\n    for (var a = [], i = 0; i < t; i++) {\n      a.push(bigInt.randBetween(2, n.minus(2)));\n    }\n\n    return millerRabinTest(n, a);\n  };\n\n  SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\n\n  BigInteger.prototype.modInv = function (n) {\n    var t = bigInt.zero,\n        newT = bigInt.one,\n        r = parseValue(n),\n        newR = this.abs(),\n        q,\n        lastT,\n        lastR;\n\n    while (!newR.equals(bigInt.zero)) {\n      q = r.divide(newR);\n      lastT = t;\n      lastR = r;\n      t = newT;\n      r = newR;\n      newT = lastT.subtract(q.multiply(newT));\n      newR = lastR.subtract(q.multiply(newR));\n    }\n\n    if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\n\n    if (t.compare(0) === -1) {\n      t = t.add(n);\n    }\n\n    if (this.isNegative()) {\n      return t.negate();\n    }\n\n    return t;\n  };\n\n  SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\n\n  BigInteger.prototype.next = function () {\n    var value = this.value;\n\n    if (this.sign) {\n      return subtractSmall(value, 1, this.sign);\n    }\n\n    return new BigInteger(addSmall(value, 1), this.sign);\n  };\n\n  SmallInteger.prototype.next = function () {\n    var value = this.value;\n    if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\n    return new BigInteger(MAX_INT_ARR, false);\n  };\n\n  BigInteger.prototype.prev = function () {\n    var value = this.value;\n\n    if (this.sign) {\n      return new BigInteger(addSmall(value, 1), true);\n    }\n\n    return subtractSmall(value, 1, this.sign);\n  };\n\n  SmallInteger.prototype.prev = function () {\n    var value = this.value;\n    if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\n    return new BigInteger(MAX_INT_ARR, true);\n  };\n\n  var powersOfTwo = [1];\n\n  while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\n\n  var powers2Length = powersOfTwo.length,\n      highestPower2 = powersOfTwo[powers2Length - 1];\n\n  function shift_isSmall(n) {\n    return (typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE || n instanceof BigInteger && n.value.length <= 1;\n  }\n\n  BigInteger.prototype.shiftLeft = function (n) {\n    if (!shift_isSmall(n)) {\n      throw new Error(String(n) + \" is too large for shifting.\");\n    }\n\n    n = +n;\n    if (n < 0) return this.shiftRight(-n);\n    var result = this;\n    if (result.isZero()) return result;\n\n    while (n >= powers2Length) {\n      result = result.multiply(highestPower2);\n      n -= powers2Length - 1;\n    }\n\n    return result.multiply(powersOfTwo[n]);\n  };\n\n  SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\n\n  BigInteger.prototype.shiftRight = function (n) {\n    var remQuo;\n\n    if (!shift_isSmall(n)) {\n      throw new Error(String(n) + \" is too large for shifting.\");\n    }\n\n    n = +n;\n    if (n < 0) return this.shiftLeft(-n);\n    var result = this;\n\n    while (n >= powers2Length) {\n      if (result.isZero() || result.isNegative() && result.isUnit()) return result;\n      remQuo = divModAny(result, highestPower2);\n      result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n      n -= powers2Length - 1;\n    }\n\n    remQuo = divModAny(result, powersOfTwo[n]);\n    return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n  };\n\n  SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\n\n  function bitwise(x, y, fn) {\n    y = parseValue(y);\n    var xSign = x.isNegative(),\n        ySign = y.isNegative();\n    var xRem = xSign ? x.not() : x,\n        yRem = ySign ? y.not() : y;\n    var xDigit = 0,\n        yDigit = 0;\n    var xDivMod = null,\n        yDivMod = null;\n    var result = [];\n\n    while (!xRem.isZero() || !yRem.isZero()) {\n      xDivMod = divModAny(xRem, highestPower2);\n      xDigit = xDivMod[1].toJSNumber();\n\n      if (xSign) {\n        xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\n      }\n\n      yDivMod = divModAny(yRem, highestPower2);\n      yDigit = yDivMod[1].toJSNumber();\n\n      if (ySign) {\n        yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\n      }\n\n      xRem = xDivMod[0];\n      yRem = yDivMod[0];\n      result.push(fn(xDigit, yDigit));\n    }\n\n    var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\n\n    for (var i = result.length - 1; i >= 0; i -= 1) {\n      sum = sum.multiply(highestPower2).add(bigInt(result[i]));\n    }\n\n    return sum;\n  }\n\n  BigInteger.prototype.not = function () {\n    return this.negate().prev();\n  };\n\n  SmallInteger.prototype.not = BigInteger.prototype.not;\n\n  BigInteger.prototype.and = function (n) {\n    return bitwise(this, n, function (a, b) {\n      return a & b;\n    });\n  };\n\n  SmallInteger.prototype.and = BigInteger.prototype.and;\n\n  BigInteger.prototype.or = function (n) {\n    return bitwise(this, n, function (a, b) {\n      return a | b;\n    });\n  };\n\n  SmallInteger.prototype.or = BigInteger.prototype.or;\n\n  BigInteger.prototype.xor = function (n) {\n    return bitwise(this, n, function (a, b) {\n      return a ^ b;\n    });\n  };\n\n  SmallInteger.prototype.xor = BigInteger.prototype.xor;\n  var LOBMASK_I = 1 << 30,\n      LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\n\n  function roughLOB(n) {\n    // get lowestOneBit (rough)\n    // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\n    // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\n    var v = n.value,\n        x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\n    return x & -x;\n  }\n\n  function integerLogarithm(value, base) {\n    if (base.compareTo(value) <= 0) {\n      var tmp = integerLogarithm(value, base.square(base));\n      var p = tmp.p;\n      var e = tmp.e;\n      var t = p.multiply(base);\n      return t.compareTo(value) <= 0 ? {\n        p: t,\n        e: e * 2 + 1\n      } : {\n        p: p,\n        e: e * 2\n      };\n    }\n\n    return {\n      p: bigInt(1),\n      e: 0\n    };\n  }\n\n  BigInteger.prototype.bitLength = function () {\n    var n = this;\n\n    if (n.compareTo(bigInt(0)) < 0) {\n      n = n.negate().subtract(bigInt(1));\n    }\n\n    if (n.compareTo(bigInt(0)) === 0) {\n      return bigInt(0);\n    }\n\n    return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\n  };\n\n  SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\n\n  function max(a, b) {\n    a = parseValue(a);\n    b = parseValue(b);\n    return a.greater(b) ? a : b;\n  }\n\n  function min(a, b) {\n    a = parseValue(a);\n    b = parseValue(b);\n    return a.lesser(b) ? a : b;\n  }\n\n  function gcd(a, b) {\n    a = parseValue(a).abs();\n    b = parseValue(b).abs();\n    if (a.equals(b)) return a;\n    if (a.isZero()) return b;\n    if (b.isZero()) return a;\n    var c = Integer[1],\n        d,\n        t;\n\n    while (a.isEven() && b.isEven()) {\n      d = Math.min(roughLOB(a), roughLOB(b));\n      a = a.divide(d);\n      b = b.divide(d);\n      c = c.multiply(d);\n    }\n\n    while (a.isEven()) {\n      a = a.divide(roughLOB(a));\n    }\n\n    do {\n      while (b.isEven()) {\n        b = b.divide(roughLOB(b));\n      }\n\n      if (a.greater(b)) {\n        t = b;\n        b = a;\n        a = t;\n      }\n\n      b = b.subtract(a);\n    } while (!b.isZero());\n\n    return c.isUnit() ? a : a.multiply(c);\n  }\n\n  function lcm(a, b) {\n    a = parseValue(a).abs();\n    b = parseValue(b).abs();\n    return a.divide(gcd(a, b)).multiply(b);\n  }\n\n  function randBetween(a, b) {\n    a = parseValue(a);\n    b = parseValue(b);\n    var low = min(a, b),\n        high = max(a, b);\n    var range = high.subtract(low).add(1);\n    if (range.isSmall) return low.add(Math.floor(Math.random() * range));\n    var length = range.value.length - 1;\n    var result = [],\n        restricted = true;\n\n    for (var i = length; i >= 0; i--) {\n      var top = restricted ? range.value[i] : BASE;\n      var digit = truncate(Math.random() * top);\n      result.unshift(digit);\n      if (digit < top) restricted = false;\n    }\n\n    result = arrayToSmall(result);\n    return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\n  }\n\n  var parseBase = function (text, base) {\n    var length = text.length;\n    var i;\n    var absBase = Math.abs(base);\n\n    for (var i = 0; i < length; i++) {\n      var c = text[i].toLowerCase();\n      if (c === \"-\") continue;\n\n      if (/[a-z0-9]/.test(c)) {\n        if (/[0-9]/.test(c) && +c >= absBase) {\n          if (c === \"1\" && absBase === 1) continue;\n          throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n        } else if (c.charCodeAt(0) - 87 >= absBase) {\n          throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n        }\n      }\n    }\n\n    if (2 <= base && base <= 36) {\n      if (length <= LOG_MAX_INT / Math.log(base)) {\n        var result = parseInt(text, base);\n\n        if (isNaN(result)) {\n          throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n        }\n\n        return new SmallInteger(parseInt(text, base));\n      }\n    }\n\n    base = parseValue(base);\n    var digits = [];\n    var isNegative = text[0] === \"-\";\n\n    for (i = isNegative ? 1 : 0; i < text.length; i++) {\n      var c = text[i].toLowerCase(),\n          charCode = c.charCodeAt(0);\n      if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));else if (c === \"<\") {\n        var start = i;\n\n        do {\n          i++;\n        } while (text[i] !== \">\");\n\n        digits.push(parseValue(text.slice(start + 1, i)));\n      } else throw new Error(c + \" is not a valid character\");\n    }\n\n    return parseBaseFromArray(digits, base, isNegative);\n  };\n\n  function parseBaseFromArray(digits, base, isNegative) {\n    var val = Integer[0],\n        pow = Integer[1],\n        i;\n\n    for (i = digits.length - 1; i >= 0; i--) {\n      val = val.add(digits[i].times(pow));\n      pow = pow.times(base);\n    }\n\n    return isNegative ? val.negate() : val;\n  }\n\n  function stringify(digit) {\n    if (digit <= 35) {\n      return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\n    }\n\n    return \"<\" + digit + \">\";\n  }\n\n  function toBase(n, base) {\n    base = bigInt(base);\n\n    if (base.isZero()) {\n      if (n.isZero()) return {\n        value: [0],\n        isNegative: false\n      };\n      throw new Error(\"Cannot convert nonzero numbers to base 0.\");\n    }\n\n    if (base.equals(-1)) {\n      if (n.isZero()) return {\n        value: [0],\n        isNegative: false\n      };\n      if (n.isNegative()) return {\n        value: [].concat.apply([], Array.apply(null, Array(-n)).map(Array.prototype.valueOf, [1, 0])),\n        isNegative: false\n      };\n      var arr = Array.apply(null, Array(+n - 1)).map(Array.prototype.valueOf, [0, 1]);\n      arr.unshift([1]);\n      return {\n        value: [].concat.apply([], arr),\n        isNegative: false\n      };\n    }\n\n    var neg = false;\n\n    if (n.isNegative() && base.isPositive()) {\n      neg = true;\n      n = n.abs();\n    }\n\n    if (base.equals(1)) {\n      if (n.isZero()) return {\n        value: [0],\n        isNegative: false\n      };\n      return {\n        value: Array.apply(null, Array(+n)).map(Number.prototype.valueOf, 1),\n        isNegative: neg\n      };\n    }\n\n    var out = [];\n    var left = n,\n        divmod;\n\n    while (left.isNegative() || left.compareAbs(base) >= 0) {\n      divmod = left.divmod(base);\n      left = divmod.quotient;\n      var digit = divmod.remainder;\n\n      if (digit.isNegative()) {\n        digit = base.minus(digit).abs();\n        left = left.next();\n      }\n\n      out.push(digit.toJSNumber());\n    }\n\n    out.push(left.toJSNumber());\n    return {\n      value: out.reverse(),\n      isNegative: neg\n    };\n  }\n\n  function toBaseString(n, base) {\n    var arr = toBase(n, base);\n    return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\n  }\n\n  BigInteger.prototype.toArray = function (radix) {\n    return toBase(this, radix);\n  };\n\n  SmallInteger.prototype.toArray = function (radix) {\n    return toBase(this, radix);\n  };\n\n  BigInteger.prototype.toString = function (radix) {\n    if (radix === undefined) radix = 10;\n    if (radix !== 10) return toBaseString(this, radix);\n    var v = this.value,\n        l = v.length,\n        str = String(v[--l]),\n        zeros = \"0000000\",\n        digit;\n\n    while (--l >= 0) {\n      digit = String(v[l]);\n      str += zeros.slice(digit.length) + digit;\n    }\n\n    var sign = this.sign ? \"-\" : \"\";\n    return sign + str;\n  };\n\n  SmallInteger.prototype.toString = function (radix) {\n    if (radix === undefined) radix = 10;\n    if (radix != 10) return toBaseString(this, radix);\n    return String(this.value);\n  };\n\n  BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () {\n    return this.toString();\n  };\n\n  BigInteger.prototype.valueOf = function () {\n    return parseInt(this.toString(), 10);\n  };\n\n  BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\n\n  SmallInteger.prototype.valueOf = function () {\n    return this.value;\n  };\n\n  SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\n\n  function parseStringValue(v) {\n    if (isPrecise(+v)) {\n      var x = +v;\n      if (x === truncate(x)) return new SmallInteger(x);\n      throw new Error(\"Invalid integer: \" + v);\n    }\n\n    var sign = v[0] === \"-\";\n    if (sign) v = v.slice(1);\n    var split = v.split(/e/i);\n    if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\n\n    if (split.length === 2) {\n      var exp = split[1];\n      if (exp[0] === \"+\") exp = exp.slice(1);\n      exp = +exp;\n      if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\n      var text = split[0];\n      var decimalPlace = text.indexOf(\".\");\n\n      if (decimalPlace >= 0) {\n        exp -= text.length - decimalPlace - 1;\n        text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\n      }\n\n      if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\n      text += new Array(exp + 1).join(\"0\");\n      v = text;\n    }\n\n    var isValid = /^([0-9][0-9]*)$/.test(v);\n    if (!isValid) throw new Error(\"Invalid integer: \" + v);\n    var r = [],\n        max = v.length,\n        l = LOG_BASE,\n        min = max - l;\n\n    while (max > 0) {\n      r.push(+v.slice(min, max));\n      min -= l;\n      if (min < 0) min = 0;\n      max -= l;\n    }\n\n    trim(r);\n    return new BigInteger(r, sign);\n  }\n\n  function parseNumberValue(v) {\n    if (isPrecise(v)) {\n      if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\n      return new SmallInteger(v);\n    }\n\n    return parseStringValue(v.toString());\n  }\n\n  function parseValue(v) {\n    if (typeof v === \"number\") {\n      return parseNumberValue(v);\n    }\n\n    if (typeof v === \"string\") {\n      return parseStringValue(v);\n    }\n\n    return v;\n  } // Pre-define numbers in range [-999,999]\n\n\n  for (var i = 0; i < 1000; i++) {\n    Integer[i] = new SmallInteger(i);\n    if (i > 0) Integer[-i] = new SmallInteger(-i);\n  } // Backwards compatibility\n\n\n  Integer.one = Integer[1];\n  Integer.zero = Integer[0];\n  Integer.minusOne = Integer[-1];\n  Integer.max = max;\n  Integer.min = min;\n  Integer.gcd = gcd;\n  Integer.lcm = lcm;\n\n  Integer.isInstance = function (x) {\n    return x instanceof BigInteger || x instanceof SmallInteger;\n  };\n\n  Integer.randBetween = randBetween;\n\n  Integer.fromArray = function (digits, base, isNegative) {\n    return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\n  };\n\n  return Integer;\n}(); // Node.js check\n\n\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\n  module.exports = bigInt;\n} //amd check\n\n\nif (typeof define === \"function\" && define.amd) {\n  define(\"big-integer\", [], function () {\n    return bigInt;\n  });\n}","map":{"version":3,"names":["bigInt","undefined","BASE","LOG_BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Math","log","Integer","v","radix","parseValue","parseBase","BigInteger","value","sign","isSmall","prototype","Object","create","SmallInteger","isPrecise","n","floor","arrayToSmall","arr","trim","length","compareAbs","i","createArray","x","Array","truncate","ceil","add","a","b","l_a","l_b","r","carry","base","sum","push","addAny","addSmall","l","subtract","negate","abs","plus","a_l","b_l","borrow","difference","subtractAny","subtractSmall","minus","small","multiplyLong","product","a_i","b_j","j","multiplySmall","shiftLeft","concat","multiplyKaratsuba","y","max","slice","d","c","ac","bd","abcd","useKaratsuba","l1","l2","multiply","times","multiplySmallAndArray","_multiplyBySmall","square","a_j","divMod1","result","divisorMostSignificantDigit","lambda","remainder","divisor","quotientDigit","shift","q","divModSmall","divMod2","part","guess","xlen","highx","highy","check","unshift","reverse","quotient","divModAny","self","Error","comparison","qSign","mod","mSign","divmod","divide","over","pow","isEven","toString","modPow","exp","isZero","isPositive","isOdd","compare","Infinity","compareTo","equals","eq","notEquals","neq","greater","gt","lesser","lt","greaterOrEquals","geq","lesserOrEquals","leq","isNegative","isUnit","isDivisibleBy","isBasicPrime","millerRabinTest","nPrev","prev","t","next","isPrime","strict","bits","bitLength","logN","isProbablePrime","iterations","randBetween","modInv","zero","newT","one","newR","lastT","lastR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","String","shiftRight","remQuo","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","and","or","xor","LOBMASK_I","LOBMASK_BI","roughLOB","integerLogarithm","tmp","p","e","min","gcd","lcm","low","high","range","random","restricted","top","digit","text","absBase","toLowerCase","test","charCodeAt","parseInt","isNaN","digits","charCode","start","parseBaseFromArray","val","stringify","charAt","toBase","apply","map","valueOf","neg","Number","out","left","toBaseString","join","toArray","str","zeros","toJSON","parseStringValue","split","decimalPlace","indexOf","isValid","parseNumberValue","minusOne","isInstance","fromArray","module","hasOwnProperty","exports","define","amd"],"sources":["C:/Users/acer/node_modules/big-integer/BigInteger.js"],"sourcesContent":["var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\n    function Integer(v, radix) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        var value = n.value;\r\n        if (value === 0) return false;\r\n        if (value === 1) return true;\r\n        if (value === 2) return this.isEven();\r\n        return this.mod(n).equals(Integer[0]);\r\n    };\r\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n    \r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next : for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;    \r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n// Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if(bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits;\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.equals(bigInt.zero)) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n            (n instanceof BigInteger && n.value.length <= 1);\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var remQuo;\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = Math.min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var length = range.value.length - 1;\r\n        var result = [], restricted = true;\r\n        for (var i = length; i >= 0; i--) {\r\n            var top = restricted ? range.value[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.unshift(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        result = arrayToSmall(result);\r\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n    }\r\n    var parseBase = function (text, base) {\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        for (var i = 0; i < length; i++) {\r\n            var c = text[i].toLowerCase();\r\n            if (c === \"-\") continue;\r\n            if (/[a-z0-9]/.test(c)) {\r\n                if (/[0-9]/.test(c) && +c >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                } else if (c.charCodeAt(0) - 87 >= absBase) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        if (2 <= base && base <= 36) {\r\n            if (length <= LOG_MAX_INT / Math.log(base)) {\r\n                var result = parseInt(text, base);\r\n                if (isNaN(result)) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n                return new SmallInteger(parseInt(text, base));\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i].toLowerCase(),\r\n                charCode = c.charCodeAt(0);\r\n            if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n            else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\");\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit) {\r\n        if (digit <= 35) {\r\n            return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(+n - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.equals(1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(+n))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix);\r\n        return String(this.value);\r\n    };\r\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = new SmallInteger(i);\r\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}