{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransferFromCustodialAddressBatch = void 0;\n\nconst class_transformer_1 = require(\"class-transformer\");\n\nconst class_validator_1 = require(\"class-validator\");\n\nconst CustodialBatchTransferValidator_1 = require(\"../validation/CustodialBatchTransferValidator\");\n\nconst ContractType_1 = require(\"./ContractType\");\n\nconst Currency_1 = require(\"./Currency\");\n\nconst Fee_1 = require(\"./Fee\");\n\nconst PrivateKeyOrSignatureId_1 = require(\"./PrivateKeyOrSignatureId\");\n\nclass TransferFromCustodialAddressBatch extends PrivateKeyOrSignatureId_1.PrivateKeyOrSignatureId {}\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.Length(34, 43), __metadata(\"design:type\", String)], TransferFromCustodialAddressBatch.prototype, \"custodialAddress\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.IsIn([Currency_1.Currency.ETH, Currency_1.Currency.MATIC, Currency_1.Currency.BSC, Currency_1.Currency.ONE, Currency_1.Currency.CELO, Currency_1.Currency.KLAY, Currency_1.Currency.TRON, Currency_1.Currency.XDC]), __metadata(\"design:type\", String)], TransferFromCustodialAddressBatch.prototype, \"chain\", void 0);\n\n__decorate([class_validator_1.Validate(CustodialBatchTransferValidator_1.CustodialBatchTransferValidator), class_validator_1.ValidateIf(o => o.contractType !== ContractType_1.ContractType.NATIVE_ASSET), class_validator_1.IsArray(), class_validator_1.IsNotEmpty(), __metadata(\"design:type\", Array)], TransferFromCustodialAddressBatch.prototype, \"tokenAddress\", void 0);\n\n__decorate([class_validator_1.Validate(CustodialBatchTransferValidator_1.CustodialBatchTransferValidator), class_validator_1.IsArray(), class_validator_1.IsNotEmpty(), __metadata(\"design:type\", Array)], TransferFromCustodialAddressBatch.prototype, \"contractType\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.Validate(CustodialBatchTransferValidator_1.CustodialBatchTransferValidator), class_validator_1.IsArray(), __metadata(\"design:type\", Array)], TransferFromCustodialAddressBatch.prototype, \"recipient\", void 0);\n\n__decorate([class_validator_1.Validate(CustodialBatchTransferValidator_1.CustodialBatchTransferValidator), class_validator_1.ValidateIf(o => o.contractType !== ContractType_1.ContractType.NON_FUNGIBLE_TOKEN), class_validator_1.IsNotEmpty(), class_validator_1.IsArray(), __metadata(\"design:type\", Array)], TransferFromCustodialAddressBatch.prototype, \"amount\", void 0);\n\n__decorate([class_validator_1.ValidateIf(o => o.contractType !== ContractType_1.ContractType.NATIVE_ASSET && o.contractType !== ContractType_1.ContractType.FUNGIBLE_TOKEN), class_validator_1.IsNotEmpty(), class_validator_1.Validate(CustodialBatchTransferValidator_1.CustodialBatchTransferValidator), class_validator_1.IsArray(), __metadata(\"design:type\", Array)], TransferFromCustodialAddressBatch.prototype, \"tokenId\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_validator_1.Min(0), __metadata(\"design:type\", Number)], TransferFromCustodialAddressBatch.prototype, \"nonce\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_transformer_1.Type(() => Fee_1.Fee), __metadata(\"design:type\", Fee_1.Fee)], TransferFromCustodialAddressBatch.prototype, \"fee\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_validator_1.IsIn([Currency_1.Currency.CELO, Currency_1.Currency.CUSD, Currency_1.Currency.CEUR]), __metadata(\"design:type\", String)], TransferFromCustodialAddressBatch.prototype, \"feeCurrency\", void 0);\n\nexports.TransferFromCustodialAddressBatch = TransferFromCustodialAddressBatch;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAaA,iCAAb,SAAuDC,iDAAvD,CAA8E;;AAI5EC,YAFCC,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AAIAD,YAFCC,8BAED,EADCA,uBAAK,CAACC,oBAASC,GAAV,EAAeD,oBAASE,KAAxB,EAA+BF,oBAASG,GAAxC,EAA6CH,oBAASI,GAAtD,EAA2DJ,oBAASK,IAApE,EAA0EL,oBAASM,IAAnF,EAAyFN,oBAASO,IAAlG,EAAwGP,oBAASQ,GAAjH,CAAL,CACD;;AAMAV,YAJCC,2BAASU,iEAAT,CAID,EAHCV,6BAAWW,CAAC,IAAIA,CAAC,CAACC,YAAF,KAAmBC,4BAAaC,YAAhD,CAGD,EAFCd,2BAED,EADCA,8BACD;;AAKAD,YAHCC,2BAASU,iEAAT,CAGD,EAFCV,2BAED,EADCA,8BACD;;AAKAD,YAHCC,8BAGD,EAFCA,2BAASU,iEAAT,CAED,EADCV,2BACD;;AAMAD,YAJCC,2BAASU,iEAAT,CAID,EAHCV,6BAAWW,CAAC,IAAIA,CAAC,CAACC,YAAF,KAAmBC,4BAAaE,kBAAhD,CAGD,EAFCf,8BAED,EADCA,2BACD;;AAMAD,YAJCC,6BAAWW,CAAC,IAAIA,CAAC,CAACC,YAAF,KAAmBC,4BAAaC,YAAhC,IAAgDH,CAAC,CAACC,YAAF,KAAmBC,4BAAaG,cAAhG,CAID,EAHChB,8BAGD,EAFCA,2BAASU,iEAAT,CAED,EADCV,2BACD;;AAIAD,YAFCC,8BAED,EADCA,sBAAI,CAAJ,CACD;;AAIAD,YAFCC,8BAED,EADCiB,yBAAK,MAAMC,SAAX,CACD,4BAAaA,UAAb;;AAIAnB,YAFCC,8BAED,EADCA,uBAAK,CAACC,oBAASK,IAAV,EAAgBL,oBAASkB,IAAzB,EAA+BlB,oBAASmB,IAAxC,CAAL,CACD;;AAhDFC","names":["TransferFromCustodialAddressBatch","PrivateKeyOrSignatureId_1","__decorate","class_validator_1","Currency_1","ETH","MATIC","BSC","ONE","CELO","KLAY","TRON","XDC","CustodialBatchTransferValidator_1","o","contractType","ContractType_1","NATIVE_ASSET","NON_FUNGIBLE_TOKEN","FUNGIBLE_TOKEN","class_transformer_1","Fee_1","CUSD","CEUR","exports"],"sourceRoot":"","sources":["../../../../src/model/request/TransferFromCustodialAddressBatch.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}