{"ast":null,"code":"'use strict';\n\nconst rmAll = require('./rm-all');\n\nconst last = require('it-last');\n\nconst configure = require('../lib/configure');\n\nmodule.exports = options => {\n  const all = rmAll(options);\n  return configure(() => {\n    return async function rm(path) {\n      let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // eslint-disable-line require-await\n      return last(all({\n        path,\n        ...options\n      }, options));\n    };\n  })(options);\n};","map":{"version":3,"names":["rmAll","require","last","configure","module","exports","options","all","rm","path"],"sources":["C:/Users/acer/node_modules/ipfs-http-client/src/pin/rm.js"],"sourcesContent":["'use strict'\n\nconst rmAll = require('./rm-all')\nconst last = require('it-last')\nconst configure = require('../lib/configure')\n\nmodule.exports = (options) => {\n  const all = rmAll(options)\n\n  return configure(() => {\n    return async function rm (path, options = {}) { // eslint-disable-line require-await\n      return last(all({\n        path,\n        ...options\n      }, options))\n    }\n  })(options)\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AAEAG,MAAM,CAACC,OAAP,GAAkBC,OAAD,IAAa;EAC5B,MAAMC,GAAG,GAAGP,KAAK,CAACM,OAAD,CAAjB;EAEA,OAAOH,SAAS,CAAC,MAAM;IACrB,OAAO,eAAeK,EAAf,CAAmBC,IAAnB,EAAuC;MAAA,IAAdH,OAAc,uEAAJ,EAAI;MAAE;MAC9C,OAAOJ,IAAI,CAACK,GAAG,CAAC;QACdE,IADc;QAEd,GAAGH;MAFW,CAAD,EAGZA,OAHY,CAAJ,CAAX;IAID,CALD;EAMD,CAPe,CAAT,CAOJA,OAPI,CAAP;AAQD,CAXD"},"metadata":{},"sourceType":"script"}