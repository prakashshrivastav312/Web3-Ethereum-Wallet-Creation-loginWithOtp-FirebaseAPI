{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Hash = void 0;\n\nvar serialized_type_1 = require(\"./serialized-type\");\n\nvar buffer_1 = require(\"buffer/\");\n/**\n * Base class defining how to encode and decode hashes\n */\n\n\nvar Hash =\n/** @class */\nfunction (_super) {\n  __extends(Hash, _super);\n\n  function Hash(bytes) {\n    var _this = _super.call(this, bytes) || this;\n\n    if (_this.bytes.byteLength !== _this.constructor.width) {\n      throw new Error(\"Invalid Hash length \".concat(_this.bytes.byteLength));\n    }\n\n    return _this;\n  }\n  /**\n   * Construct a Hash object from an existing Hash object or a hex-string\n   *\n   * @param value A hash object or hex-string of a hash\n   */\n\n\n  Hash.from = function (value) {\n    if (value instanceof this) {\n      return value;\n    }\n\n    if (typeof value === 'string') {\n      return new this(buffer_1.Buffer.from(value, 'hex'));\n    }\n\n    throw new Error('Cannot construct Hash from given value');\n  };\n  /**\n   * Read a Hash object from a BinaryParser\n   *\n   * @param parser BinaryParser to read the hash from\n   * @param hint length of the bytes to read, optional\n   */\n\n\n  Hash.fromParser = function (parser, hint) {\n    return new this(parser.read(hint !== null && hint !== void 0 ? hint : this.width));\n  };\n  /**\n   * Overloaded operator for comparing two hash objects\n   *\n   * @param other The Hash to compare this to\n   */\n\n\n  Hash.prototype.compareTo = function (other) {\n    return this.bytes.compare(this.constructor.from(other).bytes);\n  };\n  /**\n   * @returns the hex-string representation of this Hash\n   */\n\n\n  Hash.prototype.toString = function () {\n    return this.toHex();\n  };\n  /**\n   * Returns four bits at the specified depth within a hash\n   *\n   * @param depth The depth of the four bits\n   * @returns The number represented by the four bits\n   */\n\n\n  Hash.prototype.nibblet = function (depth) {\n    var byteIx = depth > 0 ? depth / 2 | 0 : 0;\n    var b = this.bytes[byteIx];\n\n    if (depth % 2 === 0) {\n      b = (b & 0xf0) >>> 4;\n    } else {\n      b = b & 0x0f;\n    }\n\n    return b;\n  };\n\n  return Hash;\n}(serialized_type_1.Comparable);\n\nexports.Hash = Hash;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AAEA;;;;;AAGA;AAAA;AAAA;EAAmBA;;EAGjB,cAAYC,KAAZ,EAAyB;IAAzB,YACEC,kBAAMD,KAAN,KAAY,IADd;;IAEE,IAAIE,KAAI,CAACF,KAAL,CAAWG,UAAX,KAA2BD,KAAI,CAACE,WAAL,CAAiCC,KAAhE,EAAuE;MACrE,MAAM,IAAIC,KAAJ,CAAU,8BAAuBJ,KAAI,CAACF,KAAL,CAAWG,UAAlC,CAAV,CAAN;IACD;;;EACF;EAED;;;;;;;EAKOI,YAAP,UAAqCC,KAArC,EAA6C;IAC3C,IAAIA,KAAK,YAAY,IAArB,EAA2B;MACzB,OAAOA,KAAP;IACD;;IAED,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7B,OAAO,IAAI,IAAJ,CAASC,gBAAOC,IAAP,CAAYF,KAAZ,EAAmB,KAAnB,CAAT,CAAP;IACD;;IAED,MAAM,IAAIF,KAAJ,CAAU,wCAAV,CAAN;EACD,CAVM;EAYP;;;;;;;;EAMOC,kBAAP,UAAkBI,MAAlB,EAAwCC,IAAxC,EAAqD;IACnD,OAAO,IAAI,IAAJ,CAASD,MAAM,CAACE,IAAP,CAAYD,IAAI,SAAJ,QAAI,WAAJ,UAAQ,KAAKP,KAAzB,CAAT,CAAP;EACD,CAFM;EAIP;;;;;;;EAKAE,qCAAUO,KAAV,EAAqB;IACnB,OAAO,KAAKd,KAAL,CAAWe,OAAX,CACJ,KAAKX,WAAL,CAAiCM,IAAjC,CAAsCI,KAAtC,EAA6Cd,KADzC,CAAP;EAGD,CAJD;EAMA;;;;;EAGAO;IACE,OAAO,KAAKS,KAAL,EAAP;EACD,CAFD;EAIA;;;;;;;;EAMAT,mCAAQU,KAAR,EAAqB;IACnB,IAAMC,MAAM,GAAGD,KAAK,GAAG,CAAR,GAAaA,KAAK,GAAG,CAAT,GAAc,CAA1B,GAA8B,CAA7C;IACA,IAAIE,CAAC,GAAG,KAAKnB,KAAL,CAAWkB,MAAX,CAAR;;IACA,IAAID,KAAK,GAAG,CAAR,KAAc,CAAlB,EAAqB;MACnBE,CAAC,GAAG,CAACA,CAAC,GAAG,IAAL,MAAe,CAAnB;IACD,CAFD,MAEO;MACLA,CAAC,GAAGA,CAAC,GAAG,IAAR;IACD;;IACD,OAAOA,CAAP;EACD,CATD;;EAUF;AAAC,CAvED,CAAmBC,4BAAnB;;AAyESC","names":["__extends","bytes","_super","_this","byteLength","constructor","width","Error","Hash","value","buffer_1","from","parser","hint","read","other","compare","toHex","depth","byteIx","b","serialized_type_1","exports"],"sourceRoot":"","sources":["../../src/types/hash.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}