{"ast":null,"code":"'use strict';\n\nconst {\n  Blob\n} = globalThis;\n/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\n\nfunction isBytes(obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\n/**\n * @param {any} obj\n * @returns {obj is Blob}\n */\n\n\nfunction isBlob(obj) {\n  return typeof Blob !== 'undefined' && obj instanceof Blob;\n}\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/files').ToEntry}\n */\n\n\nfunction isFileObject(obj) {\n  return typeof obj === 'object' && (obj.path || obj.content);\n}\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\n\n\nconst isReadableStream = value => value && typeof value.getReader === 'function';\n/**\n * @param {any} mtime\n * @returns {{secs:number, nsecs:number}|undefined}\n */\n\n\nfunction mtimeToObject(mtime) {\n  if (mtime == null) {\n    return undefined;\n  } // Javascript Date\n\n\n  if (mtime instanceof Date) {\n    const ms = mtime.getTime();\n    const secs = Math.floor(ms / 1000);\n    return {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  } // { secs, nsecs }\n\n\n  if (Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return {\n      secs: mtime.secs,\n      nsecs: mtime.nsecs\n    };\n  } // UnixFS TimeSpec\n\n\n  if (Object.prototype.hasOwnProperty.call(mtime, 'Seconds')) {\n    return {\n      secs: mtime.Seconds,\n      nsecs: mtime.FractionalNanoseconds\n    };\n  } // process.hrtime()\n\n\n  if (Array.isArray(mtime)) {\n    return {\n      secs: mtime[0],\n      nsecs: mtime[1]\n    };\n  }\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n   // process.hrtime.bigint()\n  if (typeof mtime === 'bigint') {\n    const secs = mtime / BigInt(1e9)\n    const nsecs = mtime - (secs * BigInt(1e9))\n     return {\n      secs: parseInt(secs),\n      nsecs: parseInt(nsecs)\n    }\n  }\n  */\n\n}\n/**\n * @param {any} mode\n * @returns {number|undefined}\n */\n\n\nfunction modeToNumber(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n\n  if (typeof mode === 'number') {\n    return mode;\n  }\n\n  mode = mode.toString();\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8);\n  } // decimal string\n\n\n  return parseInt(mode, 10);\n}\n\nmodule.exports = {\n  isBytes,\n  isBlob,\n  isFileObject,\n  isReadableStream,\n  mtimeToObject,\n  modeToNumber\n};","map":{"version":3,"names":["Blob","globalThis","isBytes","obj","ArrayBuffer","isView","isBlob","isFileObject","path","content","isReadableStream","value","getReader","mtimeToObject","mtime","undefined","Date","ms","getTime","secs","Math","floor","nsecs","Object","prototype","hasOwnProperty","call","Seconds","FractionalNanoseconds","Array","isArray","modeToNumber","mode","toString","substring","parseInt","module","exports"],"sources":["C:/Users/acer/node_modules/ipfs-core-utils/src/files/normalise-input/utils.js"],"sourcesContent":["'use strict'\n\nconst { Blob } = globalThis\n\n/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nfunction isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is Blob}\n */\nfunction isBlob (obj) {\n  return typeof Blob !== 'undefined' && obj instanceof Blob\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/files').ToEntry}\n */\nfunction isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nconst isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n\n/**\n * @param {any} mtime\n * @returns {{secs:number, nsecs:number}|undefined}\n */\nfunction mtimeToObject (mtime) {\n  if (mtime == null) {\n    return undefined\n  }\n\n  // Javascript Date\n  if (mtime instanceof Date) {\n    const ms = mtime.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    return {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  // { secs, nsecs }\n  if (Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return {\n      secs: mtime.secs,\n      nsecs: mtime.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (Object.prototype.hasOwnProperty.call(mtime, 'Seconds')) {\n    return {\n      secs: mtime.Seconds,\n      nsecs: mtime.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(mtime)) {\n    return {\n      secs: mtime[0],\n      nsecs: mtime[1]\n    }\n  }\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (typeof mtime === 'bigint') {\n    const secs = mtime / BigInt(1e9)\n    const nsecs = mtime - (secs * BigInt(1e9))\n\n    return {\n      secs: parseInt(secs),\n      nsecs: parseInt(nsecs)\n    }\n  }\n  */\n}\n\n/**\n * @param {any} mode\n * @returns {number|undefined}\n */\nfunction modeToNumber (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8)\n  }\n\n  // decimal string\n  return parseInt(mode, 10)\n}\n\nmodule.exports = {\n  isBytes,\n  isBlob,\n  isFileObject,\n  isReadableStream,\n  mtimeToObject,\n  modeToNumber\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}