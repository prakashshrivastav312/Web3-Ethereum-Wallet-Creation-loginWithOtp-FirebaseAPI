{"ast":null,"code":"/*\n    Copyright 2022 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst FeeDelegatedValueTransferMemoWithRatio = require('../valueTransferMemo/feeDelegatedValueTransferMemoWithRatio');\n/**\n * Represents a fee delegated value transfer memo with ratio transaction wrapper.\n * @class\n * @hideconstructor\n */\n\n\nclass FeeDelegatedValueTransferMemoWithRatioWrapper {\n  /**\n   * Creates a fee delegated value transfer memo with ratio transaction wrapper.\n   * The wrapper plays an intermediate role for calling static functions of each transaction type in `caver.transaction`.\n   * @constructor\n   * @param {object} _klaytnCall - An object includes klay rpc calls.\n   */\n  constructor(klaytnCall) {\n    this.klaytnCall = klaytnCall;\n  }\n  /**\n   * Calls `FeeDelegatedValueTransferMemoWithRatio.create`.\n   *\n   * @param {object} obj - An object defines fields to create a tx.\n   * @return {string} An RLP-encoded transaction string.\n   */\n\n\n  create(obj) {\n    return FeeDelegatedValueTransferMemoWithRatio.create(obj, this.klaytnCall);\n  }\n  /**\n   * Calls `FeeDelegatedValueTransferMemoWithRatio.decode`.\n   *\n   * @param {string} encoded - RLP-encoded string.\n   * @return {string} FeeDelegatedValueTransferMemoWithRatio instance.\n   */\n\n\n  decode(encoded) {\n    return FeeDelegatedValueTransferMemoWithRatio.decode(encoded, this.klaytnCall);\n  }\n\n}\n\nmodule.exports = FeeDelegatedValueTransferMemoWithRatioWrapper;","map":{"version":3,"names":["FeeDelegatedValueTransferMemoWithRatio","require","FeeDelegatedValueTransferMemoWithRatioWrapper","constructor","klaytnCall","create","obj","decode","encoded","module","exports"],"sources":["C:/Users/acer/node_modules/caver-js/packages/caver-transaction/src/transactionTypes/wrappers/feeDelegatedValueTransferMemoWithRatioWrapper.js"],"sourcesContent":["/*\n    Copyright 2022 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst FeeDelegatedValueTransferMemoWithRatio = require('../valueTransferMemo/feeDelegatedValueTransferMemoWithRatio')\n\n/**\n * Represents a fee delegated value transfer memo with ratio transaction wrapper.\n * @class\n * @hideconstructor\n */\nclass FeeDelegatedValueTransferMemoWithRatioWrapper {\n    /**\n     * Creates a fee delegated value transfer memo with ratio transaction wrapper.\n     * The wrapper plays an intermediate role for calling static functions of each transaction type in `caver.transaction`.\n     * @constructor\n     * @param {object} _klaytnCall - An object includes klay rpc calls.\n     */\n    constructor(klaytnCall) {\n        this.klaytnCall = klaytnCall\n    }\n\n    /**\n     * Calls `FeeDelegatedValueTransferMemoWithRatio.create`.\n     *\n     * @param {object} obj - An object defines fields to create a tx.\n     * @return {string} An RLP-encoded transaction string.\n     */\n    create(obj) {\n        return FeeDelegatedValueTransferMemoWithRatio.create(obj, this.klaytnCall)\n    }\n\n    /**\n     * Calls `FeeDelegatedValueTransferMemoWithRatio.decode`.\n     *\n     * @param {string} encoded - RLP-encoded string.\n     * @return {string} FeeDelegatedValueTransferMemoWithRatio instance.\n     */\n    decode(encoded) {\n        return FeeDelegatedValueTransferMemoWithRatio.decode(encoded, this.klaytnCall)\n    }\n}\n\nmodule.exports = FeeDelegatedValueTransferMemoWithRatioWrapper\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,sCAAsC,GAAGC,OAAO,CAAC,6DAAD,CAAtD;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,6CAAN,CAAoD;EAChD;AACJ;AACA;AACA;AACA;AACA;EACIC,WAAW,CAACC,UAAD,EAAa;IACpB,KAAKA,UAAL,GAAkBA,UAAlB;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIC,MAAM,CAACC,GAAD,EAAM;IACR,OAAON,sCAAsC,CAACK,MAAvC,CAA8CC,GAA9C,EAAmD,KAAKF,UAAxD,CAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIG,MAAM,CAACC,OAAD,EAAU;IACZ,OAAOR,sCAAsC,CAACO,MAAvC,CAA8CC,OAA9C,EAAuD,KAAKJ,UAA5D,CAAP;EACH;;AA7B+C;;AAgCpDK,MAAM,CAACC,OAAP,GAAiBR,6CAAjB"},"metadata":{},"sourceType":"script"}