{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.verifyPaymentChannelClaim = exports.signPaymentChannelClaim = exports.deriveXAddress = exports.deriveAddress = exports.deriveKeypair = exports.generateXAddress = exports.generateAddress = exports.computePaymentChannelHash = exports.computeEscrowHash = exports.computeLedgerHash = exports.computeStateTreeHash = exports.computeTransactionTreeHash = exports.computeTrustlineHash = exports.computeOrderID = exports.computeSignerListLedgerObjectID = exports.computeAccountLedgerObjectID = exports.computeBinaryTransactionSigningHash = exports.computeTransactionHash = exports.computeBinaryTransactionHash = exports.isValidSecret = exports.iso8601ToRippleTime = exports.rippleTimeToISO8601 = exports.removeUndefined = exports.convertKeysFromSnakeCaseToCamelCase = exports.toRippledAmount = exports.xrpToDrops = exports.dropsToXrp = exports.computeLedgerHeaderHash = void 0;\n\nconst derive_1 = require(\"./derive\");\n\nObject.defineProperty(exports, \"deriveKeypair\", {\n  enumerable: true,\n  get: function () {\n    return derive_1.deriveKeypair;\n  }\n});\nObject.defineProperty(exports, \"deriveAddress\", {\n  enumerable: true,\n  get: function () {\n    return derive_1.deriveAddress;\n  }\n});\nObject.defineProperty(exports, \"deriveXAddress\", {\n  enumerable: true,\n  get: function () {\n    return derive_1.deriveXAddress;\n  }\n});\n\nconst ledgerhash_1 = __importDefault(require(\"./ledgerhash\"));\n\nexports.computeLedgerHeaderHash = ledgerhash_1.default;\n\nconst sign_payment_channel_claim_1 = __importDefault(require(\"./sign-payment-channel-claim\"));\n\nexports.signPaymentChannelClaim = sign_payment_channel_claim_1.default;\n\nconst verify_payment_channel_claim_1 = __importDefault(require(\"./verify-payment-channel-claim\"));\n\nexports.verifyPaymentChannelClaim = verify_payment_channel_claim_1.default;\n\nconst utils_1 = require(\"../common/utils\");\n\nObject.defineProperty(exports, \"dropsToXrp\", {\n  enumerable: true,\n  get: function () {\n    return utils_1.dropsToXrp;\n  }\n});\nObject.defineProperty(exports, \"xrpToDrops\", {\n  enumerable: true,\n  get: function () {\n    return utils_1.xrpToDrops;\n  }\n});\nObject.defineProperty(exports, \"toRippledAmount\", {\n  enumerable: true,\n  get: function () {\n    return utils_1.toRippledAmount;\n  }\n});\nObject.defineProperty(exports, \"convertKeysFromSnakeCaseToCamelCase\", {\n  enumerable: true,\n  get: function () {\n    return utils_1.convertKeysFromSnakeCaseToCamelCase;\n  }\n});\nObject.defineProperty(exports, \"removeUndefined\", {\n  enumerable: true,\n  get: function () {\n    return utils_1.removeUndefined;\n  }\n});\nObject.defineProperty(exports, \"rippleTimeToISO8601\", {\n  enumerable: true,\n  get: function () {\n    return utils_1.rippleTimeToISO8601;\n  }\n});\nObject.defineProperty(exports, \"iso8601ToRippleTime\", {\n  enumerable: true,\n  get: function () {\n    return utils_1.iso8601ToRippleTime;\n  }\n});\nObject.defineProperty(exports, \"isValidSecret\", {\n  enumerable: true,\n  get: function () {\n    return utils_1.isValidSecret;\n  }\n});\n\nconst hashes_1 = require(\"../common/hashes\");\n\nObject.defineProperty(exports, \"computeBinaryTransactionHash\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeBinaryTransactionHash;\n  }\n});\nObject.defineProperty(exports, \"computeTransactionHash\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeTransactionHash;\n  }\n});\nObject.defineProperty(exports, \"computeBinaryTransactionSigningHash\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeBinaryTransactionSigningHash;\n  }\n});\nObject.defineProperty(exports, \"computeAccountLedgerObjectID\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeAccountLedgerObjectID;\n  }\n});\nObject.defineProperty(exports, \"computeSignerListLedgerObjectID\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeSignerListLedgerObjectID;\n  }\n});\nObject.defineProperty(exports, \"computeOrderID\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeOrderID;\n  }\n});\nObject.defineProperty(exports, \"computeTrustlineHash\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeTrustlineHash;\n  }\n});\nObject.defineProperty(exports, \"computeTransactionTreeHash\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeTransactionTreeHash;\n  }\n});\nObject.defineProperty(exports, \"computeStateTreeHash\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeStateTreeHash;\n  }\n});\nObject.defineProperty(exports, \"computeLedgerHash\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeLedgerHash;\n  }\n});\nObject.defineProperty(exports, \"computeEscrowHash\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computeEscrowHash;\n  }\n});\nObject.defineProperty(exports, \"computePaymentChannelHash\", {\n  enumerable: true,\n  get: function () {\n    return hashes_1.computePaymentChannelHash;\n  }\n});\n\nconst generate_address_1 = require(\"../offline/generate-address\");\n\nObject.defineProperty(exports, \"generateXAddress\", {\n  enumerable: true,\n  get: function () {\n    return generate_address_1.generateAddressAPI;\n  }\n});\n\nconst generateAddress = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return generate_address_1.generateAddressAPI(Object.assign(Object.assign({}, options), {\n    includeClassicAddress: true\n  }));\n};\n\nexports.generateAddress = generateAddress;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AA0DIA;EAAAC;EAAAC;IAAA,OA1DKC,sBA0DL;EA1DkB;AA0DlB;AACAH;EAAAC;EAAAC;IAAA,OA3DoBC,sBA2DpB;EA3DiC;AA2DjC;AACAH;EAAAC;EAAAC;IAAA,OA5DmCC,uBA4DnC;EA5DiD;AA4DjD;;AA3DJ;;AAkCIC,kCAlCGC,oBAkCH;;AAjCJ;;AA2DID,kCA3DGE,oCA2DH;;AA1DJ;;AA2DIF,oCA3DGG,sCA2DH;;AA1DJ;;AAgCIP;EAAAC;EAAAC;IAAA,OAhCKM,kBAgCL;EAhCe;AAgCf;AACAR;EAAAC;EAAAC;IAAA,OAhCAM,kBAgCA;EAhCU;AAgCV;AACAR;EAAAC;EAAAC;IAAA,OAhCAM,uBAgCA;EAhCe;AAgCf;AACAR;EAAAC;EAAAC;IAAA,OAhCAM,2CAgCA;EAhCmC;AAgCnC;AACAR;EAAAC;EAAAC;IAAA,OAhCAM,uBAgCA;EAhCe;AAgCf;AACAR;EAAAC;EAAAC;IAAA,OAhCAM,2BAgCA;EAhCmB;AAgCnB;AACAR;EAAAC;EAAAC;IAAA,OAhCAM,2BAgCA;EAhCmB;AAgCnB;AACAR;EAAAC;EAAAC;IAAA,OAhCAM,qBAgCA;EAhCa;AAgCb;;AA9BJ;;AA+BIR;EAAAC;EAAAC;IAAA,OA9BAO,qCA8BA;EA9B4B;AA8B5B;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,+BA8BA;EA9BsB;AA8BtB;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,4CA8BA;EA9BmC;AA8BnC;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,qCA8BA;EA9B4B;AA8B5B;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,wCA8BA;EA9B+B;AA8B/B;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,uBA8BA;EA9Bc;AA8Bd;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,6BA8BA;EA9BoB;AA8BpB;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,mCA8BA;EA9B0B;AA8B1B;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,6BA8BA;EA9BoB;AA8BpB;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,0BA8BA;EA9BiB;AA8BjB;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,0BA8BA;EA9BiB;AA8BjB;AACAT;EAAAC;EAAAC;IAAA,OA9BAO,kCA8BA;EA9ByB;AA8BzB;;AA5BJ;;AA8B0BT;EAAAC;EAAAC;IAAA,OA9BjBQ,qCA8BiB;EA9BC;AA8BD;;AA3B1B,MAAMC,eAAe,GAAG;EAAA,IAACC,OAAD,uEAAmC,EAAnC;EAAA,OACpBF,sCAAkBV,gCAAKY,OAAL,GAAY;IAAEC,qBAAqB,EAAE;EAAzB,CAAZ,CAAlB,CADoB;AAAA,CAAxB;;AA0BIT","names":["Object","enumerable","get","derive_1","exports","ledgerhash_1","sign_payment_channel_claim_1","verify_payment_channel_claim_1","utils_1","hashes_1","generate_address_1","generateAddress","options","includeClassicAddress"],"sourceRoot":"","sources":["../../../src/offline/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}