{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NFTToken = void 0;\n\nclass NFTToken {\n  constructor(init) {\n    this.token = '';\n    this.name = '';\n    this.type = '';\n    this.owner = '';\n    this.minted = '';\n    this.burnt = '';\n    this.decimals = 0;\n    this.isPaused = false;\n    this.canUpgrade = false;\n    this.canMint = false;\n    this.canBurn = false;\n    this.canChangeOwner = false;\n    this.canPause = false;\n    this.canFreeze = false;\n    this.canWipe = false;\n    this.canAddSpecialRoles = false;\n    this.canTransferNFTCreateRole = false;\n    this.NFTCreateStopped = false;\n    this.wiped = '0';\n    Object.assign(this, init);\n  }\n\n  static fromHttpResponse(response) {\n    let nftToken = new NFTToken(response);\n    return nftToken;\n  }\n\n  getTokenName() {\n    return this.name;\n  }\n\n  getTokenIdentifier() {\n    return this.token;\n  }\n\n  getTokenType() {\n    return this.type;\n  }\n\n}\n\nexports.NFTToken = NFTToken;","map":{"version":3,"mappings":";;;;;;;AACA,MAAaA,QAAb,CAAqB;EAqBjBC,YAAYC,IAAZ,EAAoC;IApBpC,aAAgB,EAAhB;IACA,YAAe,EAAf;IACA,YAAe,EAAf;IACA,aAAgB,EAAhB;IACA,cAAiB,EAAjB;IACA,aAAgB,EAAhB;IACA,gBAAmB,CAAnB;IACA,gBAAoB,KAApB;IACA,kBAAsB,KAAtB;IACA,eAAmB,KAAnB;IACA,eAAmB,KAAnB;IACA,sBAA0B,KAA1B;IACA,gBAAoB,KAApB;IACA,iBAAqB,KAArB;IACA,eAAmB,KAAnB;IACA,0BAA8B,KAA9B;IACA,gCAAoC,KAApC;IACA,wBAA4B,KAA5B;IACA,aAAgB,GAAhB;IAGIC,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;EACH;;EAEsB,OAAhBG,gBAAgB,CAACC,QAAD,EAoBtB;IACG,IAAIC,QAAQ,GAAG,IAAIP,QAAJ,CAAaM,QAAb,CAAf;IACA,OAAOC,QAAP;EACH;;EAEDC,YAAY;IACR,OAAO,KAAKC,IAAZ;EACH;;EAEDC,kBAAkB;IACd,OAAO,KAAKC,KAAZ;EACH;;EAEDC,YAAY;IACR,OAAO,KAAKC,IAAZ;EACH;;AA5DgB;;AAArBC","names":["NFTToken","constructor","init","Object","assign","fromHttpResponse","response","nftToken","getTokenName","name","getTokenIdentifier","token","getTokenType","type","exports"],"sourceRoot":"","sources":["../src/nftToken.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}