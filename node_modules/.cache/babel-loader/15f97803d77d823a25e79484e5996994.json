{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromQuorumWallet = exports.fromKryptoKit = exports.fromEtherCamp = exports.fromEtherWallet = void 0;\n\nvar crypto = __importStar(require(\"crypto\"));\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar scrypt_js_1 = require(\"scrypt-js\");\n\nvar index_1 = __importDefault(require(\"./index\"));\n\nvar utf8 = require('utf8');\n\nvar aesjs = require('aes-js');\n\nfunction runCipherBuffer(cipher, data) {\n  return Buffer.concat([cipher.update(data), cipher.final()]);\n}\n\nvar evpKdfDefaults = {\n  count: 1,\n  keysize: 16,\n  ivsize: 16,\n  digest: 'md5'\n};\n\nfunction mergeEvpKdfOptsWithDefaults(opts) {\n  if (!opts) {\n    return evpKdfDefaults;\n  }\n\n  return {\n    count: opts.count || evpKdfDefaults.count,\n    keysize: opts.keysize || evpKdfDefaults.keysize,\n    ivsize: opts.ivsize || evpKdfDefaults.ivsize,\n    digest: opts.digest || evpKdfDefaults.digest\n  };\n}\n/*\n * opts:\n * - digest - digest algorithm, defaults to md5\n * - count - hash iterations\n * - keysize - desired key size\n * - ivsize - desired IV size\n *\n * Algorithm form https://www.openssl.org/docs/manmaster/crypto/EVP_BytesToKey.html\n *\n * FIXME: not optimised at all\n */\n\n\nfunction evp_kdf(data, salt, opts) {\n  var params = mergeEvpKdfOptsWithDefaults(opts); // A single EVP iteration, returns `D_i`, where block equlas to `D_(i-1)`\n\n  function iter(block) {\n    var hash = crypto.createHash(params.digest);\n    hash.update(block);\n    hash.update(data);\n    hash.update(salt);\n    block = hash.digest();\n\n    for (var i_1 = 1, len = params.count; i_1 < len; i_1++) {\n      hash = crypto.createHash(params.digest);\n      hash.update(block);\n      block = hash.digest();\n    }\n\n    return block;\n  }\n\n  var ret = [];\n  var i = 0;\n\n  while (Buffer.concat(ret).length < params.keysize + params.ivsize) {\n    ret[i] = iter(i === 0 ? Buffer.alloc(0) : ret[i - 1]);\n    i++;\n  }\n\n  var tmp = Buffer.concat(ret);\n  return {\n    key: tmp.slice(0, params.keysize),\n    iv: tmp.slice(params.keysize, params.keysize + params.ivsize)\n  };\n} // http://stackoverflow.com/questions/25288311/cryptojs-aes-pattern-always-ends-with\n\n\nfunction decodeCryptojsSalt(input) {\n  var ciphertext = Buffer.from(input, 'base64');\n\n  if (ciphertext.slice(0, 8).toString() === 'Salted__') {\n    return {\n      salt: ciphertext.slice(8, 16),\n      ciphertext: ciphertext.slice(16)\n    };\n  }\n\n  return {\n    ciphertext: ciphertext\n  };\n}\n/*\n * Third Party API: Import a wallet generated by EtherWallet\n * This wallet format is created by https://github.com/SilentCicero/ethereumjs-accounts\n * and used on https://www.myetherwallet.com/\n */\n\n\nfunction fromEtherWallet(input, password) {\n  var json = typeof input === 'object' ? input : JSON.parse(input);\n  var privateKey;\n\n  if (!json.locked) {\n    if (json.private.length !== 64) {\n      throw new Error('Invalid private key length');\n    }\n\n    privateKey = Buffer.from(json.private, 'hex');\n  } else {\n    if (typeof password !== 'string') {\n      throw new Error('Password required');\n    }\n\n    if (password.length < 7) {\n      throw new Error('Password must be at least 7 characters');\n    } // the \"encrypted\" version has the low 4 bytes\n    // of the hash of the address appended\n\n\n    var hash = json.encrypted ? json.private.slice(0, 128) : json.private; // decode openssl ciphertext + salt encoding\n\n    var cipher = decodeCryptojsSalt(hash);\n\n    if (!cipher.salt) {\n      throw new Error('Unsupported EtherWallet key format');\n    } // derive key/iv using OpenSSL EVP as implemented in CryptoJS\n\n\n    var evp = evp_kdf(Buffer.from(password), cipher.salt, {\n      keysize: 32,\n      ivsize: 16\n    });\n    var decipher = crypto.createDecipheriv('aes-256-cbc', evp.key, evp.iv);\n    privateKey = runCipherBuffer(decipher, Buffer.from(cipher.ciphertext)); // NOTE: yes, they've run it through UTF8\n\n    privateKey = Buffer.from(utf8.decode(privateKey.toString()), 'hex');\n  }\n\n  var wallet = new index_1.default(privateKey);\n\n  if (wallet.getAddressString() !== json.address) {\n    throw new Error('Invalid private key or address');\n  }\n\n  return wallet;\n}\n\nexports.fromEtherWallet = fromEtherWallet;\n/**\n * Third Party API: Import a brain wallet used by Ether.Camp\n */\n\nfunction fromEtherCamp(passphrase) {\n  return new index_1.default((0, ethereumjs_util_1.keccak256)(Buffer.from(passphrase)));\n}\n\nexports.fromEtherCamp = fromEtherCamp;\n/**\n * Third Party API: Import a wallet from a KryptoKit seed\n */\n\nfunction fromKryptoKit(entropy, password) {\n  return __awaiter(this, void 0, void 0, function () {\n    function kryptoKitBrokenScryptSeed(buf) {\n      // js-scrypt calls `Buffer.from(String(salt), 'utf8')` on the seed even though it is a buffer\n      //\n      // The `buffer`` implementation used does the below transformation (doesn't matches the current version):\n      // https://github.com/feross/buffer/blob/67c61181b938b17d10dbfc0a545f713b8bd59de8/index.js\n      function decodeUtf8Char(str) {\n        try {\n          return decodeURIComponent(str);\n        } catch (err) {\n          return String.fromCharCode(0xfffd); // UTF 8 invalid char\n        }\n      }\n\n      var res = '',\n          tmp = '';\n\n      for (var i = 0; i < buf.length; i++) {\n        if (buf[i] <= 0x7f) {\n          res += decodeUtf8Char(tmp) + String.fromCharCode(buf[i]);\n          tmp = '';\n        } else {\n          tmp += '%' + buf[i].toString(16);\n        }\n      }\n\n      return Buffer.from(res + decodeUtf8Char(tmp));\n    }\n\n    var type, privateKey, encryptedSeed, checksum, salt, aesKey, decipher;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (entropy[0] === '#') {\n            entropy = entropy.slice(1);\n          }\n\n          type = entropy[0];\n          entropy = entropy.slice(1);\n          if (!(type === 'd')) return [3\n          /*break*/\n          , 1];\n          privateKey = (0, ethereumjs_util_1.sha256)((0, ethereumjs_util_1.toBuffer)(entropy));\n          return [3\n          /*break*/\n          , 4];\n\n        case 1:\n          if (!(type === 'q')) return [3\n          /*break*/\n          , 3];\n\n          if (typeof password !== 'string') {\n            throw new Error('Password required');\n          }\n\n          encryptedSeed = (0, ethereumjs_util_1.sha256)(Buffer.from(entropy.slice(0, 30)));\n          checksum = entropy.slice(30, 46);\n          salt = kryptoKitBrokenScryptSeed(encryptedSeed);\n          return [4\n          /*yield*/\n          , (0, scrypt_js_1.scrypt)(Buffer.from(password, 'utf8'), salt, 16384, 8, 1, 32)\n          /* FIXME: try to use `crypto` instead of `aesjs`\n                               // NOTE: ECB doesn't use the IV, so it can be anything\n          var decipher = crypto.createDecipheriv(\"aes-256-ecb\", aesKey, Buffer.from(0))\n                               // FIXME: this is a clear abuse, but seems to match how ECB in aesjs works\n          privKey = Buffer.concat([\n            decipher.update(encryptedSeed).slice(0, 16),\n            decipher.update(encryptedSeed).slice(0, 16),\n          ])\n          */\n          ];\n\n        case 2:\n          aesKey = _a.sent();\n          decipher = new aesjs.ModeOfOperation.ecb(aesKey);\n          /* decrypt returns an Uint8Array, perhaps there is a better way to concatenate */\n\n          privateKey = Buffer.concat([Buffer.from(decipher.decrypt(encryptedSeed.slice(0, 16))), Buffer.from(decipher.decrypt(encryptedSeed.slice(16, 32)))]);\n\n          if (checksum.length > 0) {\n            if (checksum !== (0, ethereumjs_util_1.sha256)((0, ethereumjs_util_1.sha256)(privateKey)).slice(0, 8).toString('hex')) {\n              throw new Error('Failed to decrypt input - possibly invalid passphrase');\n            }\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          throw new Error('Unsupported or invalid entropy type');\n\n        case 4:\n          return [2\n          /*return*/\n          , new index_1.default(privateKey)];\n      }\n    });\n  });\n}\n\nexports.fromKryptoKit = fromKryptoKit;\n/**\n * Third Party API: Import a brain wallet used by Quorum Wallet\n */\n\nfunction fromQuorumWallet(passphrase, userid) {\n  if (passphrase.length < 10) {\n    throw new Error('Passphrase must be at least 10 characters');\n  }\n\n  if (userid.length < 10) {\n    throw new Error('User id must be at least 10 characters');\n  }\n\n  var merged = passphrase + userid;\n  var seed = crypto.pbkdf2Sync(merged, merged, 2000, 32, 'sha256');\n  return new index_1.default(seed);\n}\n\nexports.fromQuorumWallet = fromQuorumWallet;\nvar Thirdparty = {\n  fromEtherWallet: fromEtherWallet,\n  fromEtherCamp: fromEtherCamp,\n  fromKryptoKit: fromKryptoKit,\n  fromQuorumWallet: fromQuorumWallet\n};\nexports.default = Thirdparty;","map":{"version":3,"mappings":"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","names":["utf8","require","aesjs","runCipherBuffer","cipher","data","Buffer","concat","update","final","evpKdfDefaults","count","keysize","ivsize","digest","mergeEvpKdfOptsWithDefaults","opts","evp_kdf","salt","params","iter","block","hash","crypto","createHash","i_1","len","ret","i","length","alloc","tmp","key","slice","iv","decodeCryptojsSalt","input","ciphertext","from","toString","fromEtherWallet","password","json","JSON","parse","privateKey","locked","private","Error","encrypted","evp","decipher","createDecipheriv","decode","wallet","index_1","getAddressString","address","exports","fromEtherCamp","passphrase","fromKryptoKit","entropy","kryptoKitBrokenScryptSeed","buf","decodeUtf8Char","str","decodeURIComponent","err","String","fromCharCode","res","type","encryptedSeed","checksum","aesKey","_a","ModeOfOperation","ecb","decrypt","fromQuorumWallet","userid","merged","seed","pbkdf2Sync","Thirdparty"],"sourceRoot":"","sources":["../src/thirdparty.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}