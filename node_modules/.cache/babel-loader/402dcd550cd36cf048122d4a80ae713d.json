{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils = __importStar(require(\"./utils\"));\n\nconst validate = utils.common.validate;\nconst ValidationError = utils.common.errors.ValidationError;\n\nfunction createTicketTransaction(account, ticketCount) {\n  if (!ticketCount || ticketCount === 0) throw new ValidationError('Ticket count must be greater than 0.');\n  const txJSON = {\n    TransactionType: 'TicketCreate',\n    Account: account,\n    TicketCount: ticketCount\n  };\n  return txJSON;\n}\n\nfunction prepareTicketCreate(address, ticketCount) {\n  let instructions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  try {\n    validate.prepareTicketCreate({\n      address,\n      ticketCount,\n      instructions\n    });\n    const txJSON = createTicketTransaction(address, ticketCount);\n    return utils.prepareTransaction(txJSON, this, instructions);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexports.default = prepareTicketCreate;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAIA,MAAMA,QAAQ,GAAGC,KAAK,CAACC,MAAN,CAAaF,QAA9B;AACA,MAAMG,eAAe,GAAGF,KAAK,CAACC,MAAN,CAAaE,MAAb,CAAoBD,eAA5C;;AAOA,SAASE,uBAAT,CACEC,OADF,EAEEC,WAFF,EAEqB;EAEnB,IAAI,CAACA,WAAD,IAAgBA,WAAW,KAAK,CAApC,EACE,MAAM,IAAIJ,eAAJ,CAAoB,sCAApB,CAAN;EAEF,MAAMK,MAAM,GAAQ;IAClBC,eAAe,EAAE,cADC;IAElBC,OAAO,EAAEJ,OAFS;IAGlBK,WAAW,EAAEJ;EAHK,CAApB;EAMA,OAAOC,MAAP;AACD;;AAED,SAASI,mBAAT,CAEEC,OAFF,EAGEN,WAHF,EAIiC;EAAA,IAA/BO,YAA+B,uEAAF,EAAE;;EAE/B,IAAI;IACFd,QAAQ,CAACY,mBAAT,CAA6B;MAACC,OAAD;MAAUN,WAAV;MAAuBO;IAAvB,CAA7B;IACA,MAAMN,MAAM,GAAGH,uBAAuB,CAACQ,OAAD,EAAUN,WAAV,CAAtC;IACA,OAAON,KAAK,CAACc,kBAAN,CAAyBP,MAAzB,EAAiC,IAAjC,EAAuCM,YAAvC,CAAP;EACD,CAJD,CAIE,OAAOE,CAAP,EAAU;IACV,OAAOC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAP;EACD;AACF;;AAEDG,kBAAeP,mBAAf","names":["validate","utils","common","ValidationError","errors","createTicketTransaction","account","ticketCount","txJSON","TransactionType","Account","TicketCount","prepareTicketCreate","address","instructions","prepareTransaction","e","Promise","reject","exports"],"sourceRoot":"","sources":["../../../src/transaction/ticket.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}