{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EthBurnMultiTokenBatch = void 0;\n\nconst class_transformer_1 = require(\"class-transformer\");\n\nconst class_validator_1 = require(\"class-validator\");\n\nconst BurnMultiTokenBatch_1 = require(\"./BurnMultiTokenBatch\");\n\nconst Fee_1 = require(\"./Fee\");\n\nclass EthBurnMultiTokenBatch extends BurnMultiTokenBatch_1.BurnMultiTokenBatch {}\n\n__decorate([class_validator_1.IsOptional(), class_transformer_1.Type(() => Fee_1.Fee), class_validator_1.ValidateNested(), __metadata(\"design:type\", Fee_1.Fee)], EthBurnMultiTokenBatch.prototype, \"fee\", void 0);\n\nexports.EthBurnMultiTokenBatch = EthBurnMultiTokenBatch;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAaA,sBAAb,SAA4CC,yCAA5C,CAA+D;;AAI3DC,YAHCC,8BAGD,EAFCC,yBAAK,MAAMC,SAAX,CAED,EADCF,kCACD,4BAAaE,UAAb;;AAJJC","names":["EthBurnMultiTokenBatch","BurnMultiTokenBatch_1","__decorate","class_validator_1","class_transformer_1","Fee_1","exports"],"sourceRoot":"","sources":["../../../../src/model/request/EthBurnMultiTokenBatch.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}