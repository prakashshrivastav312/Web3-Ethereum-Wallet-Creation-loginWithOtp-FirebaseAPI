{"ast":null,"code":"'use strict';\n\nvar dogecore = module.exports; // module information\n\ndogecore.version = 'v' + require('./package.json').version;\n\ndogecore.versionGuard = function (version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of dogecore found. ' + 'Please make sure to require dogecore and check that submodules do' + ' not also include their own dogecore dependency.';\n    throw new Error(message);\n  }\n};\n\ndogecore.versionGuard(global._dogecore);\nglobal._dogecore = dogecore.version; // crypto\n\ndogecore.crypto = {};\ndogecore.crypto.BN = require('./lib/crypto/bn');\ndogecore.crypto.ECDSA = require('./lib/crypto/ecdsa');\ndogecore.crypto.Hash = require('./lib/crypto/hash');\ndogecore.crypto.Random = require('./lib/crypto/random');\ndogecore.crypto.Point = require('./lib/crypto/point');\ndogecore.crypto.Signature = require('./lib/crypto/signature'); // encoding\n\ndogecore.encoding = {};\ndogecore.encoding.Base58 = require('./lib/encoding/base58');\ndogecore.encoding.Base58Check = require('./lib/encoding/base58check');\ndogecore.encoding.BufferReader = require('./lib/encoding/bufferreader');\ndogecore.encoding.BufferWriter = require('./lib/encoding/bufferwriter');\ndogecore.encoding.Varint = require('./lib/encoding/varint'); // utilities\n\ndogecore.util = {};\ndogecore.util.buffer = require('./lib/util/buffer');\ndogecore.util.js = require('./lib/util/js');\ndogecore.util.preconditions = require('./lib/util/preconditions'); // errors thrown by the library\n\ndogecore.errors = require('./lib/errors'); // main bitcoin library\n\ndogecore.Address = require('./lib/address');\ndogecore.Block = require('./lib/block');\ndogecore.MerkleBlock = require('./lib/block/merkleblock');\ndogecore.BlockHeader = require('./lib/block/blockheader');\ndogecore.HDPrivateKey = require('./lib/hdprivatekey.js');\ndogecore.HDPublicKey = require('./lib/hdpublickey.js');\ndogecore.Networks = require('./lib/networks');\ndogecore.Opcode = require('./lib/opcode');\ndogecore.PrivateKey = require('./lib/privatekey');\ndogecore.PublicKey = require('./lib/publickey');\ndogecore.Script = require('./lib/script');\ndogecore.Transaction = require('./lib/transaction');\ndogecore.URI = require('./lib/uri');\ndogecore.Unit = require('./lib/unit'); // dependencies, subject to change\n\ndogecore.deps = {};\ndogecore.deps.bnjs = require('bn.js');\ndogecore.deps.bs58 = require('bs58');\ndogecore.deps.Buffer = Buffer;\ndogecore.deps.elliptic = require('elliptic');\ndogecore.deps.scryptsy = require('scryptsy');\ndogecore.deps._ = require('lodash'); // Internal usage, exposed for testing/advanced tweaking\n\ndogecore._HDKeyCache = require('./lib/hdkeycache');\ndogecore.Transaction.sighash = require('./lib/transaction/sighash');","map":{"version":3,"names":["dogecore","module","exports","version","require","versionGuard","undefined","message","Error","global","_dogecore","crypto","BN","ECDSA","Hash","Random","Point","Signature","encoding","Base58","Base58Check","BufferReader","BufferWriter","Varint","util","buffer","js","preconditions","errors","Address","Block","MerkleBlock","BlockHeader","HDPrivateKey","HDPublicKey","Networks","Opcode","PrivateKey","PublicKey","Script","Transaction","URI","Unit","deps","bnjs","bs58","Buffer","elliptic","scryptsy","_","_HDKeyCache","sighash"],"sources":["C:/Users/acer/node_modules/bitcore-lib-doge/index.js"],"sourcesContent":["'use strict';\n\nvar dogecore = module.exports;\n\n// module information\ndogecore.version = 'v' + require('./package.json').version;\ndogecore.versionGuard = function(version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of dogecore found. ' +\n      'Please make sure to require dogecore and check that submodules do' +\n      ' not also include their own dogecore dependency.';\n    throw new Error(message);\n  }\n};\ndogecore.versionGuard(global._dogecore);\nglobal._dogecore = dogecore.version;\n\n// crypto\ndogecore.crypto = {};\ndogecore.crypto.BN = require('./lib/crypto/bn');\ndogecore.crypto.ECDSA = require('./lib/crypto/ecdsa');\ndogecore.crypto.Hash = require('./lib/crypto/hash');\ndogecore.crypto.Random = require('./lib/crypto/random');\ndogecore.crypto.Point = require('./lib/crypto/point');\ndogecore.crypto.Signature = require('./lib/crypto/signature');\n\n// encoding\ndogecore.encoding = {};\ndogecore.encoding.Base58 = require('./lib/encoding/base58');\ndogecore.encoding.Base58Check = require('./lib/encoding/base58check');\ndogecore.encoding.BufferReader = require('./lib/encoding/bufferreader');\ndogecore.encoding.BufferWriter = require('./lib/encoding/bufferwriter');\ndogecore.encoding.Varint = require('./lib/encoding/varint');\n\n// utilities\ndogecore.util = {};\ndogecore.util.buffer = require('./lib/util/buffer');\ndogecore.util.js = require('./lib/util/js');\ndogecore.util.preconditions = require('./lib/util/preconditions');\n\n// errors thrown by the library\ndogecore.errors = require('./lib/errors');\n\n// main bitcoin library\ndogecore.Address = require('./lib/address');\ndogecore.Block = require('./lib/block');\ndogecore.MerkleBlock = require('./lib/block/merkleblock');\ndogecore.BlockHeader = require('./lib/block/blockheader');\ndogecore.HDPrivateKey = require('./lib/hdprivatekey.js');\ndogecore.HDPublicKey = require('./lib/hdpublickey.js');\ndogecore.Networks = require('./lib/networks');\ndogecore.Opcode = require('./lib/opcode');\ndogecore.PrivateKey = require('./lib/privatekey');\ndogecore.PublicKey = require('./lib/publickey');\ndogecore.Script = require('./lib/script');\ndogecore.Transaction = require('./lib/transaction');\ndogecore.URI = require('./lib/uri');\ndogecore.Unit = require('./lib/unit');\n\n// dependencies, subject to change\ndogecore.deps = {};\ndogecore.deps.bnjs = require('bn.js');\ndogecore.deps.bs58 = require('bs58');\ndogecore.deps.Buffer = Buffer;\ndogecore.deps.elliptic = require('elliptic');\ndogecore.deps.scryptsy = require('scryptsy');\ndogecore.deps._ = require('lodash');\n\n// Internal usage, exposed for testing/advanced tweaking\ndogecore._HDKeyCache = require('./lib/hdkeycache');\ndogecore.Transaction.sighash = require('./lib/transaction/sighash');\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}