{"ast":null,"code":"const bech32 = require('bech32');\n\nconst {\n  validateString,\n  validateBuffer\n} = require('./validation');\n\nfunction encode(prefix, data) {\n  validateString(prefix);\n  validateBuffer(data);\n  const words = bech32.toWords(data); // we need longer than default length for privkeys and 1000 should suffice\n\n  return bech32.encode(prefix, words, 1000);\n}\n\nfunction decode(str) {\n  validateString(str);\n  const tmp = bech32.decode(str, 1000);\n  return {\n    prefix: tmp.prefix,\n    data: Buffer.from(bech32.fromWords(tmp.words))\n  };\n}\n\nmodule.exports = {\n  encode,\n  decode\n};","map":{"version":3,"names":["bech32","require","validateString","validateBuffer","encode","prefix","data","words","toWords","decode","str","tmp","Buffer","from","fromWords","module","exports"],"sources":["C:/Users/acer/node_modules/cardano-crypto.js/utils/bech32.js"],"sourcesContent":["const bech32 = require('bech32')\nconst {validateString, validateBuffer} = require('./validation')\n\nfunction encode(prefix, data) {\n  validateString(prefix)\n  validateBuffer(data)\n\n  const words = bech32.toWords(data)\n  // we need longer than default length for privkeys and 1000 should suffice\n  return bech32.encode(prefix, words, 1000)\n}\n\nfunction decode(str) {\n  validateString(str)\n\n  const tmp = bech32.decode(str, 1000)\n  return {\n    prefix: tmp.prefix,\n    data: Buffer.from(bech32.fromWords(tmp.words)),\n  }\n}\n\nmodule.exports = {\n  encode,\n  decode\n}\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;EAACC,cAAD;EAAiBC;AAAjB,IAAmCF,OAAO,CAAC,cAAD,CAAhD;;AAEA,SAASG,MAAT,CAAgBC,MAAhB,EAAwBC,IAAxB,EAA8B;EAC5BJ,cAAc,CAACG,MAAD,CAAd;EACAF,cAAc,CAACG,IAAD,CAAd;EAEA,MAAMC,KAAK,GAAGP,MAAM,CAACQ,OAAP,CAAeF,IAAf,CAAd,CAJ4B,CAK5B;;EACA,OAAON,MAAM,CAACI,MAAP,CAAcC,MAAd,EAAsBE,KAAtB,EAA6B,IAA7B,CAAP;AACD;;AAED,SAASE,MAAT,CAAgBC,GAAhB,EAAqB;EACnBR,cAAc,CAACQ,GAAD,CAAd;EAEA,MAAMC,GAAG,GAAGX,MAAM,CAACS,MAAP,CAAcC,GAAd,EAAmB,IAAnB,CAAZ;EACA,OAAO;IACLL,MAAM,EAAEM,GAAG,CAACN,MADP;IAELC,IAAI,EAAEM,MAAM,CAACC,IAAP,CAAYb,MAAM,CAACc,SAAP,CAAiBH,GAAG,CAACJ,KAArB,CAAZ;EAFD,CAAP;AAID;;AAEDQ,MAAM,CAACC,OAAP,GAAiB;EACfZ,MADe;EAEfK;AAFe,CAAjB"},"metadata":{},"sourceType":"script"}