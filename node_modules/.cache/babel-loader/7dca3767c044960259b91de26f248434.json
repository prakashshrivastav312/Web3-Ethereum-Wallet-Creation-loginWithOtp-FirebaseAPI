{"ast":null,"code":"export { default as ParseError } from '../es6/ParseError.js'; // `parsePhoneNumber()` named export has been renamed to `parsePhoneNumberWithError()`.\n\nexport { default as parsePhoneNumberWithError, default as parsePhoneNumber } from '../es6/parsePhoneNumber.js'; // `parsePhoneNumberFromString()` named export is now considered legacy:\n// it has been promoted to a default export due to being too verbose.\n\nexport { default, default as parsePhoneNumberFromString } from '../es6/parsePhoneNumberFromString.js';\nexport { default as isValidPhoneNumber } from '../es6/isValidPhoneNumber.js';\nexport { default as isPossiblePhoneNumber } from '../es6/isPossiblePhoneNumber.js';\nexport { default as validatePhoneNumberLength } from '../es6/validatePhoneNumberLength.js'; // Deprecated.\n\nexport { default as findNumbers } from '../es6/findNumbers.js'; // Deprecated.\n\nexport { default as searchNumbers } from '../es6/searchNumbers.js';\nexport { default as findPhoneNumbersInText } from '../es6/findPhoneNumbersInText.js';\nexport { default as searchPhoneNumbersInText } from '../es6/searchPhoneNumbersInText.js';\nexport { default as PhoneNumberMatcher } from '../es6/PhoneNumberMatcher.js';\nexport { default as AsYouType } from '../es6/AsYouType.js';\nexport { DIGIT_PLACEHOLDER } from '../es6/AsYouTypeFormatter.js';\nexport { default as getCountries } from '../es6/getCountries.js';\nexport { default as Metadata, isSupportedCountry, getCountryCallingCode, getExtPrefix } from '../es6/metadata.js';\nexport { default as getExampleNumber } from '../es6/getExampleNumber.js';\nexport { default as formatIncompletePhoneNumber } from '../es6/formatIncompletePhoneNumber.js';\nexport { default as parseIncompletePhoneNumber, parsePhoneNumberCharacter } from '../es6/parseIncompletePhoneNumber.js';\nexport { default as parseDigits } from '../es6/helpers/parseDigits.js';\nexport { parseRFC3966, formatRFC3966 } from '../es6/helpers/RFC3966.js';","map":{"version":3,"names":["default","ParseError","parsePhoneNumberWithError","parsePhoneNumber","parsePhoneNumberFromString","isValidPhoneNumber","isPossiblePhoneNumber","validatePhoneNumberLength","findNumbers","searchNumbers","findPhoneNumbersInText","searchPhoneNumbersInText","PhoneNumberMatcher","AsYouType","DIGIT_PLACEHOLDER","getCountries","Metadata","isSupportedCountry","getCountryCallingCode","getExtPrefix","getExampleNumber","formatIncompletePhoneNumber","parseIncompletePhoneNumber","parsePhoneNumberCharacter","parseDigits","parseRFC3966","formatRFC3966"],"sources":["C:/Users/acer/node_modules/libphonenumber-js/core/index.js"],"sourcesContent":["export { default as ParseError } from '../es6/ParseError.js'\r\n// `parsePhoneNumber()` named export has been renamed to `parsePhoneNumberWithError()`.\r\nexport { default as parsePhoneNumberWithError, default as parsePhoneNumber } from '../es6/parsePhoneNumber.js'\r\n\r\n// `parsePhoneNumberFromString()` named export is now considered legacy:\r\n// it has been promoted to a default export due to being too verbose.\r\nexport { default as default, default as parsePhoneNumberFromString } from '../es6/parsePhoneNumberFromString.js'\r\n\r\nexport { default as isValidPhoneNumber } from '../es6/isValidPhoneNumber.js'\r\nexport { default as isPossiblePhoneNumber } from '../es6/isPossiblePhoneNumber.js'\r\nexport { default as validatePhoneNumberLength } from '../es6/validatePhoneNumberLength.js'\r\n\r\n// Deprecated.\r\nexport { default as findNumbers } from '../es6/findNumbers.js'\r\n// Deprecated.\r\nexport { default as searchNumbers } from '../es6/searchNumbers.js'\r\n\r\nexport { default as findPhoneNumbersInText } from '../es6/findPhoneNumbersInText.js'\r\nexport { default as searchPhoneNumbersInText } from '../es6/searchPhoneNumbersInText.js'\r\nexport { default as PhoneNumberMatcher } from '../es6/PhoneNumberMatcher.js'\r\n\r\nexport { default as AsYouType } from '../es6/AsYouType.js'\r\nexport { DIGIT_PLACEHOLDER } from '../es6/AsYouTypeFormatter.js'\r\n\r\nexport { default as getCountries } from '../es6/getCountries.js'\r\nexport { default as Metadata, isSupportedCountry, getCountryCallingCode, getExtPrefix } from '../es6/metadata.js'\r\n\r\nexport { default as getExampleNumber } from '../es6/getExampleNumber.js'\r\n\r\nexport { default as formatIncompletePhoneNumber } from '../es6/formatIncompletePhoneNumber.js'\r\nexport { default as parseIncompletePhoneNumber, parsePhoneNumberCharacter } from '../es6/parseIncompletePhoneNumber.js'\r\nexport { default as parseDigits } from '../es6/helpers/parseDigits.js'\r\n\r\nexport { parseRFC3966, formatRFC3966 } from '../es6/helpers/RFC3966.js'\r\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,UAApB,QAAsC,sBAAtC,C,CACA;;AACA,SAASD,OAAO,IAAIE,yBAApB,EAA+CF,OAAO,IAAIG,gBAA1D,QAAkF,4BAAlF,C,CAEA;AACA;;AACA,SAASH,OAAT,EAA6BA,OAAO,IAAII,0BAAxC,QAA0E,sCAA1E;AAEA,SAASJ,OAAO,IAAIK,kBAApB,QAA8C,8BAA9C;AACA,SAASL,OAAO,IAAIM,qBAApB,QAAiD,iCAAjD;AACA,SAASN,OAAO,IAAIO,yBAApB,QAAqD,qCAArD,C,CAEA;;AACA,SAASP,OAAO,IAAIQ,WAApB,QAAuC,uBAAvC,C,CACA;;AACA,SAASR,OAAO,IAAIS,aAApB,QAAyC,yBAAzC;AAEA,SAAST,OAAO,IAAIU,sBAApB,QAAkD,kCAAlD;AACA,SAASV,OAAO,IAAIW,wBAApB,QAAoD,oCAApD;AACA,SAASX,OAAO,IAAIY,kBAApB,QAA8C,8BAA9C;AAEA,SAASZ,OAAO,IAAIa,SAApB,QAAqC,qBAArC;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,SAASd,OAAO,IAAIe,YAApB,QAAwC,wBAAxC;AACA,SAASf,OAAO,IAAIgB,QAApB,EAA8BC,kBAA9B,EAAkDC,qBAAlD,EAAyEC,YAAzE,QAA6F,oBAA7F;AAEA,SAASnB,OAAO,IAAIoB,gBAApB,QAA4C,4BAA5C;AAEA,SAASpB,OAAO,IAAIqB,2BAApB,QAAuD,uCAAvD;AACA,SAASrB,OAAO,IAAIsB,0BAApB,EAAgDC,yBAAhD,QAAiF,sCAAjF;AACA,SAASvB,OAAO,IAAIwB,WAApB,QAAuC,+BAAvC;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,2BAA5C"},"metadata":{},"sourceType":"module"}