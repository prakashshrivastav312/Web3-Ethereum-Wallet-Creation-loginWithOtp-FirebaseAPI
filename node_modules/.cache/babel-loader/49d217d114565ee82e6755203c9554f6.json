{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatLogQuery = exports.formatOptions = exports.formatRange = exports.fromETHBlockNumberOrHash = exports.fromETHBlockNumber = void 0;\n\nconst utils = require(\"./\");\n\nconst OBJhas = (obj, p) => {\n  return obj.hasOwnProperty(p);\n};\n\nexports.fromETHBlockNumber = function (blockNumber) {\n  if (typeof blockNumber === 'number') {\n    return blockNumber;\n  } else if (typeof blockNumber === 'string') {\n    if (blockNumber === 'earliest') {\n      return 0;\n    } else if (blockNumber === 'latest' || blockNumber === 'pending') {\n      return 'best';\n    } else {\n      const num = utils.toInteger(blockNumber);\n      return num || num === 0 ? num : 'best';\n    }\n  } else {\n    return 'best';\n  }\n};\n\nexports.fromETHBlockNumberOrHash = function (blockRevision) {\n  if (/^(-0x|0x)?[0-9a-fA-F]{64}$/i.test(blockRevision)) {\n    return blockRevision;\n  } else {\n    return exports.fromETHBlockNumber(blockRevision);\n  }\n};\n\nexports.formatRange = function (range) {\n  const defaultUnit = 'block';\n  const ret = {\n    unit: range.unit || defaultUnit,\n    from: 0,\n    to: Number.MAX_SAFE_INTEGER\n  };\n\n  if (ret.unit !== 'block' && ret.unit !== 'time') {\n    ret.unit = defaultUnit;\n  }\n\n  if (range.unit === 'block') {\n    if (OBJhas(range, 'from')) {\n      const t = exports.fromETHBlockNumber(range.from);\n\n      if (t === 'best') {\n        ret.from = Number.MAX_SAFE_INTEGER;\n      } else {\n        ret.from = t;\n      }\n    }\n\n    if (OBJhas(range, 'to')) {\n      const t = exports.fromETHBlockNumber(range.to);\n\n      if (t === 'best') {\n        ret.to = Number.MAX_SAFE_INTEGER;\n      } else {\n        ret.to = t;\n      }\n    }\n\n    return ret;\n  }\n\n  if (OBJhas(range, 'from')) {\n    const t = utils.toInteger(range.from);\n\n    if (t !== null) {\n      ret.from = t;\n    }\n  }\n\n  if (OBJhas(range, 'to')) {\n    const t = utils.toInteger(range.to);\n\n    if (t !== null) {\n      ret.to = t;\n    }\n  }\n\n  return ret;\n};\n\nexports.formatOptions = function (options) {\n  const ret = {\n    offset: 0,\n    limit: utils.params.defaultLogLimit\n  };\n\n  if (OBJhas(options, 'offset')) {\n    const temp = utils.toInteger(options.offset);\n\n    if (temp) {\n      ret.offset = temp;\n    }\n  }\n\n  if (OBJhas(options, 'limit')) {\n    const temp = utils.toInteger(options.limit);\n\n    if (temp) {\n      ret.limit = temp;\n    }\n  }\n\n  if (ret.limit > utils.params.maxLogLimit) {\n    ret.limit = utils.params.maxLogLimit;\n  }\n\n  return ret;\n};\n\nexports.formatLogQuery = function (params) {\n  let address = '';\n  let order = 'ASC';\n\n  if (params.address) {\n    address = params.address;\n  }\n\n  if (params.order && (params.order.toUpperCase() === 'ASC' || params.order.toUpperCase() === 'DESC')) {\n    order = params.order.toUpperCase();\n  }\n\n  const body = {\n    criteriaSet: [],\n    order\n  };\n\n  if (params.options) {\n    body.options = exports.formatOptions(params.options);\n  } // discard fromBlock and toBlock if range presents\n\n\n  if (params.range) {\n    body.range = exports.formatRange(params.range);\n  } else {\n    const range = {\n      unit: 'block',\n      from: params.fromBlock || 0,\n      to: params.toBlock || Number.MAX_SAFE_INTEGER\n    };\n    body.range = exports.formatRange(range);\n  }\n\n  const topics = [];\n\n  if (params.topics && params.topics.length) {\n    for (let i = 0; i < params.topics.length; i++) {\n      if (typeof params.topics[i] === 'string') {\n        topics.push({\n          name: 'topic' + i,\n          array: [params.topics[i]]\n        });\n      } else if (utils.isArray(params.topics[i]) && params.topics[i].length) {\n        topics.push({\n          name: 'topic' + i,\n          array: params.topics[i]\n        });\n      }\n    }\n  }\n\n  const outputTopic = function (inputTopics, index, receiver, current) {\n    if (index === inputTopics.length) {\n      const o = {};\n\n      if (address) {\n        current.address = address;\n      }\n\n      Object.assign(o, current);\n      receiver.push(o);\n      return;\n    }\n\n    for (const item of inputTopics[index].array) {\n      current[inputTopics[index].name] = item;\n      outputTopic(inputTopics, index + 1, receiver, current);\n    }\n  };\n\n  if (topics.length) {\n    outputTopic(topics, 0, body.criteriaSet, {});\n  }\n\n  if (!body.criteriaSet.length && address) {\n    body.criteriaSet.push({\n      address\n    });\n  }\n\n  return body;\n};","map":{"version":3,"mappings":"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","names":["OBJhas","obj","p","hasOwnProperty","exports","blockNumber","num","utils","toInteger","blockRevision","test","range","defaultUnit","ret","unit","from","to","Number","MAX_SAFE_INTEGER","t","options","offset","limit","params","defaultLogLimit","temp","maxLogLimit","address","order","toUpperCase","body","criteriaSet","fromBlock","toBlock","topics","length","i","push","name","array","isArray","outputTopic","inputTopics","index","receiver","current","o","Object","assign","item"],"sourceRoot":"","sources":["../../src/utils/option-formatters.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}