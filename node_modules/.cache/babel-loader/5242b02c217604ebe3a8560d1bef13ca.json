{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst common = __importStar(require(\"../common\"));\n\nconst ripple_keypairs_1 = __importDefault(require(\"ripple-keypairs\"));\n\nconst ripple_binary_codec_1 = __importDefault(require(\"ripple-binary-codec\"));\n\nconst {\n  validate,\n  xrpToDrops\n} = common;\n\nfunction signPaymentChannelClaim(channel, amount, privateKey) {\n  validate.signPaymentChannelClaim({\n    channel,\n    amount,\n    privateKey\n  });\n  const signingData = ripple_binary_codec_1.default.encodeForSigningClaim({\n    channel: channel,\n    amount: xrpToDrops(amount)\n  });\n  return ripple_keypairs_1.default.sign(signingData, privateKey);\n}\n\nexports.default = signPaymentChannelClaim;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA,MAAM;EAACA,QAAD;EAAWC;AAAX,IAAyBC,MAA/B;;AAEA,SAASC,uBAAT,CACEC,OADF,EAEEC,MAFF,EAGEC,UAHF,EAGoB;EAElBN,QAAQ,CAACG,uBAAT,CAAiC;IAACC,OAAD;IAAUC,MAAV;IAAkBC;EAAlB,CAAjC;EAEA,MAAMC,WAAW,GAAGC,8BAAOC,qBAAP,CAA6B;IAC/CL,OAAO,EAAEA,OADsC;IAE/CC,MAAM,EAAEJ,UAAU,CAACI,MAAD;EAF6B,CAA7B,CAApB;EAIA,OAAOK,0BAASC,IAAT,CAAcJ,WAAd,EAA2BD,UAA3B,CAAP;AACD;;AAEDM,kBAAeT,uBAAf","names":["validate","xrpToDrops","common","signPaymentChannelClaim","channel","amount","privateKey","signingData","ripple_binary_codec_1","encodeForSigningClaim","ripple_keypairs_1","sign","exports"],"sourceRoot":"","sources":["../../../src/offline/sign-payment-channel-claim.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}