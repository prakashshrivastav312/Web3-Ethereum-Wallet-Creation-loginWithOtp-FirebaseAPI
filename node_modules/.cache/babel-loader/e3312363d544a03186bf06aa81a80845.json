{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransferBtcValidator = void 0;\n\nconst class_validator_1 = require(\"class-validator\");\n\nlet TransferBtcValidator = class TransferBtcValidator {\n  defaultMessage(validationArguments) {\n    return 'Either fromAddress, or fromUTXO must be present.';\n  }\n\n  validate(value, validationArguments) {\n    const data = validationArguments === null || validationArguments === void 0 ? void 0 : validationArguments.object;\n    return !(data.fromAddress && data.fromUTXO);\n  }\n\n};\nTransferBtcValidator = __decorate([class_validator_1.ValidatorConstraint({\n  name: 'fromAddressFromUTXO',\n  async: false\n})], TransferBtcValidator);\nexports.TransferBtcValidator = TransferBtcValidator;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA;;AAIA,IAAaA,oBAAoB,GAAjC,MAAaA,oBAAb,CAAiC;EACtBC,cAAc,CAACC,mBAAD,EAA0C;IAC3D,OAAO,kDAAP;EACH;;EAEMC,QAAQ,CAACC,KAAD,EAAaF,mBAAb,EAAsD;IACjE,MAAMG,IAAI,GAAGH,mBAAmB,SAAnB,uBAAmB,WAAnB,GAAmB,MAAnB,sBAAmB,CAAEI,MAAlC;IACA,OAAO,EAAED,IAAI,CAACE,WAAL,IAAoBF,IAAI,CAACG,QAA3B,CAAP;EACH;;AAR4B,CAAjC;AAAaR,oBAAoB,eADhCS,sCAAoB;EAACC,IAAI,EAAE,qBAAP;EAA8BC,KAAK,EAAE;AAArC,CAApB,CACgC,GAApBX,oBAAoB,CAApB;AAAAY","names":["TransferBtcValidator","defaultMessage","validationArguments","validate","value","data","object","fromAddress","fromUTXO","class_validator_1","name","async","exports"],"sourceRoot":"","sources":["../../../../src/model/validation/TransferBtcValidator.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}