{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EncryptedData = void 0;\n\nconst derivationParams_1 = require(\"./derivationParams\");\n\nclass EncryptedData {\n  constructor(data) {\n    this.id = data.id;\n    this.version = data.version;\n    this.ciphertext = data.ciphertext;\n    this.iv = data.iv;\n    this.cipher = data.cipher;\n    this.kdf = data.kdf;\n    this.kdfparams = data.kdfparams;\n    this.mac = data.mac;\n    this.salt = data.salt;\n  }\n\n  toJSON() {\n    return {\n      version: this.version,\n      id: this.id,\n      crypto: {\n        ciphertext: this.ciphertext,\n        cipherparams: {\n          iv: this.iv\n        },\n        cipher: this.cipher,\n        kdf: this.kdf,\n        kdfparams: {\n          dklen: this.kdfparams.dklen,\n          salt: this.salt,\n          n: this.kdfparams.n,\n          r: this.kdfparams.r,\n          p: this.kdfparams.p\n        },\n        mac: this.mac\n      }\n    };\n  }\n\n  static fromJSON(data) {\n    return new EncryptedData({\n      version: data.version,\n      id: data.id,\n      ciphertext: data.crypto.ciphertext,\n      iv: data.crypto.cipherparams.iv,\n      cipher: data.crypto.cipher,\n      kdf: data.crypto.kdf,\n      kdfparams: new derivationParams_1.ScryptKeyDerivationParams(data.crypto.kdfparams.n, data.crypto.kdfparams.r, data.crypto.kdfparams.p, data.crypto.kdfparams.dklen),\n      salt: data.crypto.kdfparams.salt,\n      mac: data.crypto.mac\n    });\n  }\n\n}\n\nexports.EncryptedData = EncryptedData;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,MAAaA,aAAb,CAA0B;EAWxBC,YAAYC,IAAZ,EAA+C;IAC7C,KAAKC,EAAL,GAAUD,IAAI,CAACC,EAAf;IACA,KAAKC,OAAL,GAAeF,IAAI,CAACE,OAApB;IACA,KAAKC,UAAL,GAAkBH,IAAI,CAACG,UAAvB;IACA,KAAKC,EAAL,GAAUJ,IAAI,CAACI,EAAf;IACA,KAAKC,MAAL,GAAcL,IAAI,CAACK,MAAnB;IACA,KAAKC,GAAL,GAAWN,IAAI,CAACM,GAAhB;IACA,KAAKC,SAAL,GAAiBP,IAAI,CAACO,SAAtB;IACA,KAAKC,GAAL,GAAWR,IAAI,CAACQ,GAAhB;IACA,KAAKC,IAAL,GAAYT,IAAI,CAACS,IAAjB;EACD;;EAEDC,MAAM;IACJ,OAAO;MACLR,OAAO,EAAE,KAAKA,OADT;MAELD,EAAE,EAAE,KAAKA,EAFJ;MAGLU,MAAM,EAAE;QACNR,UAAU,EAAE,KAAKA,UADX;QAENS,YAAY,EAAE;UAAER,EAAE,EAAE,KAAKA;QAAX,CAFR;QAGNC,MAAM,EAAE,KAAKA,MAHP;QAINC,GAAG,EAAE,KAAKA,GAJJ;QAKNC,SAAS,EAAE;UACTM,KAAK,EAAE,KAAKN,SAAL,CAAeM,KADb;UAETJ,IAAI,EAAE,KAAKA,IAFF;UAGTK,CAAC,EAAE,KAAKP,SAAL,CAAeO,CAHT;UAITC,CAAC,EAAE,KAAKR,SAAL,CAAeQ,CAJT;UAKTC,CAAC,EAAE,KAAKT,SAAL,CAAeS;QALT,CALL;QAYNR,GAAG,EAAE,KAAKA;MAZJ;IAHH,CAAP;EAkBD;;EAEc,OAARS,QAAQ,CAACjB,IAAD,EAAU;IACvB,OAAO,IAAIF,aAAJ,CAAkB;MACvBI,OAAO,EAAEF,IAAI,CAACE,OADS;MAEvBD,EAAE,EAAED,IAAI,CAACC,EAFc;MAGvBE,UAAU,EAAEH,IAAI,CAACW,MAAL,CAAYR,UAHD;MAIvBC,EAAE,EAAEJ,IAAI,CAACW,MAAL,CAAYC,YAAZ,CAAyBR,EAJN;MAKvBC,MAAM,EAAEL,IAAI,CAACW,MAAL,CAAYN,MALG;MAMvBC,GAAG,EAAEN,IAAI,CAACW,MAAL,CAAYL,GANM;MAOvBC,SAAS,EAAE,IAAIW,4CAAJ,CACTlB,IAAI,CAACW,MAAL,CAAYJ,SAAZ,CAAsBO,CADb,EAETd,IAAI,CAACW,MAAL,CAAYJ,SAAZ,CAAsBQ,CAFb,EAGTf,IAAI,CAACW,MAAL,CAAYJ,SAAZ,CAAsBS,CAHb,EAIThB,IAAI,CAACW,MAAL,CAAYJ,SAAZ,CAAsBM,KAJb,CAPY;MAavBJ,IAAI,EAAET,IAAI,CAACW,MAAL,CAAYJ,SAAZ,CAAsBE,IAbL;MAcvBD,GAAG,EAAER,IAAI,CAACW,MAAL,CAAYH;IAdM,CAAlB,CAAP;EAgBD;;AA7DuB;;AAA1BW","names":["EncryptedData","constructor","data","id","version","ciphertext","iv","cipher","kdf","kdfparams","mac","salt","toJSON","crypto","cipherparams","dklen","n","r","p","fromJSON","derivationParams_1","exports"],"sourceRoot":"","sources":["../../src/crypto/encryptedData.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}