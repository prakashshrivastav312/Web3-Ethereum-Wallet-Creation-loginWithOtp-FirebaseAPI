{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst assert = __importStar(require(\"assert\"));\n\nconst common_1 = require(\"../../common\");\n\nconst utils_1 = require(\"./utils\");\n\nfunction parseCheckCancel(tx) {\n  assert.ok(tx.TransactionType === 'CheckCancel');\n  return common_1.removeUndefined({\n    memos: utils_1.parseMemos(tx),\n    checkID: tx.CheckID\n  });\n}\n\nexports.default = parseCheckCancel;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAOA,SAASA,gBAAT,CAA0BC,EAA1B,EAAiC;EAC/BC,MAAM,CAACC,EAAP,CAAUF,EAAE,CAACG,eAAH,KAAuB,aAAjC;EAEA,OAAOC,yBAAgB;IACrBC,KAAK,EAAEC,mBAAWN,EAAX,CADc;IAErBO,OAAO,EAAEP,EAAE,CAACQ;EAFS,CAAhB,CAAP;AAID;;AAEDC,kBAAeV,gBAAf","names":["parseCheckCancel","tx","assert","ok","TransactionType","common_1","memos","utils_1","checkID","CheckID","exports"],"sourceRoot":"","sources":["../../../../src/ledger/parse/check-cancel.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}