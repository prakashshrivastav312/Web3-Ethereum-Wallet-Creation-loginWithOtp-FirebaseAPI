{"ast":null,"code":"'use strict';\n\nvar errors = require('../errors');\n\nvar _ = require('lodash');\n\nmodule.exports = {\n  checkState: function (condition, message) {\n    if (!condition) {\n      throw new errors.InvalidState(message);\n    }\n  },\n  checkArgument: function (condition, argumentName, message, docsPath) {\n    if (!condition) {\n      throw new errors.InvalidArgument(argumentName, message, docsPath);\n    }\n  },\n  checkArgumentType: function (argument, type, argumentName) {\n    argumentName = argumentName || '(unknown name)';\n\n    if (_.isString(type)) {\n      if (type === 'Buffer') {\n        var BufferUtil = require('./buffer');\n\n        if (!BufferUtil.isBuffer(argument)) {\n          throw new errors.InvalidArgumentType(argument, type, argumentName);\n        }\n      } else if (typeof argument !== type) {\n        throw new errors.InvalidArgumentType(argument, type, argumentName);\n      }\n    } else {\n      if (!(argument instanceof type)) {\n        throw new errors.InvalidArgumentType(argument, type.name, argumentName);\n      }\n    }\n  }\n};","map":{"version":3,"names":["errors","require","_","module","exports","checkState","condition","message","InvalidState","checkArgument","argumentName","docsPath","InvalidArgument","checkArgumentType","argument","type","isString","BufferUtil","isBuffer","InvalidArgumentType","name"],"sources":["C:/Users/acer/node_modules/bitcore-lib-doge/lib/util/preconditions.js"],"sourcesContent":["'use strict';\n\nvar errors = require('../errors');\nvar _ = require('lodash');\n\nmodule.exports = {\n  checkState: function(condition, message) {\n    if (!condition) {\n      throw new errors.InvalidState(message);\n    }\n  },\n  checkArgument: function(condition, argumentName, message, docsPath) {\n    if (!condition) {\n      throw new errors.InvalidArgument(argumentName, message, docsPath);\n    }\n  },\n  checkArgumentType: function(argument, type, argumentName) {\n    argumentName = argumentName || '(unknown name)';\n    if (_.isString(type)) {\n      if (type === 'Buffer') {\n        var BufferUtil = require('./buffer');\n        if (!BufferUtil.isBuffer(argument)) {\n          throw new errors.InvalidArgumentType(argument, type, argumentName);\n        }\n      } else if (typeof argument !== type) {\n        throw new errors.InvalidArgumentType(argument, type, argumentName);\n      }\n    } else {\n      if (!(argument instanceof type)) {\n        throw new errors.InvalidArgumentType(argument, type.name, argumentName);\n      }\n    }\n  }\n};\n"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;;AAEAE,MAAM,CAACC,OAAP,GAAiB;EACfC,UAAU,EAAE,UAASC,SAAT,EAAoBC,OAApB,EAA6B;IACvC,IAAI,CAACD,SAAL,EAAgB;MACd,MAAM,IAAIN,MAAM,CAACQ,YAAX,CAAwBD,OAAxB,CAAN;IACD;EACF,CALc;EAMfE,aAAa,EAAE,UAASH,SAAT,EAAoBI,YAApB,EAAkCH,OAAlC,EAA2CI,QAA3C,EAAqD;IAClE,IAAI,CAACL,SAAL,EAAgB;MACd,MAAM,IAAIN,MAAM,CAACY,eAAX,CAA2BF,YAA3B,EAAyCH,OAAzC,EAAkDI,QAAlD,CAAN;IACD;EACF,CAVc;EAWfE,iBAAiB,EAAE,UAASC,QAAT,EAAmBC,IAAnB,EAAyBL,YAAzB,EAAuC;IACxDA,YAAY,GAAGA,YAAY,IAAI,gBAA/B;;IACA,IAAIR,CAAC,CAACc,QAAF,CAAWD,IAAX,CAAJ,EAAsB;MACpB,IAAIA,IAAI,KAAK,QAAb,EAAuB;QACrB,IAAIE,UAAU,GAAGhB,OAAO,CAAC,UAAD,CAAxB;;QACA,IAAI,CAACgB,UAAU,CAACC,QAAX,CAAoBJ,QAApB,CAAL,EAAoC;UAClC,MAAM,IAAId,MAAM,CAACmB,mBAAX,CAA+BL,QAA/B,EAAyCC,IAAzC,EAA+CL,YAA/C,CAAN;QACD;MACF,CALD,MAKO,IAAI,OAAOI,QAAP,KAAoBC,IAAxB,EAA8B;QACnC,MAAM,IAAIf,MAAM,CAACmB,mBAAX,CAA+BL,QAA/B,EAAyCC,IAAzC,EAA+CL,YAA/C,CAAN;MACD;IACF,CATD,MASO;MACL,IAAI,EAAEI,QAAQ,YAAYC,IAAtB,CAAJ,EAAiC;QAC/B,MAAM,IAAIf,MAAM,CAACmB,mBAAX,CAA+BL,QAA/B,EAAyCC,IAAI,CAACK,IAA9C,EAAoDV,YAApD,CAAN;MACD;IACF;EACF;AA3Bc,CAAjB"},"metadata":{},"sourceType":"script"}