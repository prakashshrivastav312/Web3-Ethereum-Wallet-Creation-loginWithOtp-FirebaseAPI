{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApproveNftTransfer = void 0;\n\nconst class_transformer_1 = require(\"class-transformer\");\n\nconst class_validator_1 = require(\"class-validator\");\n\nconst Currency_1 = require(\"./Currency\");\n\nconst Fee_1 = require(\"./Fee\");\n\nconst PrivateKeyOrSignatureId_1 = require(\"./PrivateKeyOrSignatureId\");\n\nclass ApproveNftTransfer extends PrivateKeyOrSignatureId_1.PrivateKeyOrSignatureId {}\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.Length(34, 43), __metadata(\"design:type\", String)], ApproveNftTransfer.prototype, \"contractAddress\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.IsIn([Currency_1.Currency.ETH, Currency_1.Currency.MATIC, Currency_1.Currency.BSC, Currency_1.Currency.ONE, Currency_1.Currency.CELO, Currency_1.Currency.KLAY]), __metadata(\"design:type\", String)], ApproveNftTransfer.prototype, \"chain\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.Length(34, 43), __metadata(\"design:type\", String)], ApproveNftTransfer.prototype, \"spender\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.IsBoolean(), __metadata(\"design:type\", Boolean)], ApproveNftTransfer.prototype, \"isErc721\", void 0);\n\n__decorate([class_validator_1.ValidateIf(o => o.isErc721), class_validator_1.IsNotEmpty(), class_validator_1.IsNumberString(), __metadata(\"design:type\", String)], ApproveNftTransfer.prototype, \"tokenId\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_validator_1.IsIn([Currency_1.Currency.CELO, Currency_1.Currency.CUSD, Currency_1.Currency.CEUR]), __metadata(\"design:type\", String)], ApproveNftTransfer.prototype, \"feeCurrency\", void 0);\n\n__decorate([class_validator_1.IsOptional(), class_transformer_1.Type(() => Fee_1.Fee), class_validator_1.ValidateNested(), __metadata(\"design:type\", Fee_1.Fee)], ApproveNftTransfer.prototype, \"fee\", void 0);\n\n__decorate([class_validator_1.Min(0), class_validator_1.IsOptional(), __metadata(\"design:type\", Number)], ApproveNftTransfer.prototype, \"nonce\", void 0);\n\nexports.ApproveNftTransfer = ApproveNftTransfer;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAWA;;AACA;;AACA;;AAEA,MAAaA,kBAAb,SAAwCC,iDAAxC,CAA+D;;AAI7DC,YAFCC,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AAIAD,YAFCC,8BAED,EADCA,uBAAK,CAACC,oBAASC,GAAV,EAAeD,oBAASE,KAAxB,EAA+BF,oBAASG,GAAxC,EAA6CH,oBAASI,GAAtD,EAA2DJ,oBAASK,IAApE,EAA0EL,oBAASM,IAAnF,CAAL,CACD;;AAIAR,YAFCC,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AAIAD,YAFCC,8BAED,EADCA,6BACD;;AAKAD,YAHCC,6BAAWQ,CAAC,IAAIA,CAAC,CAACC,QAAlB,CAGD,EAFCT,8BAED,EADCA,kCACD;;AAIAD,YAFCC,8BAED,EADCA,uBAAK,CAACC,oBAASK,IAAV,EAAgBL,oBAASS,IAAzB,EAA+BT,oBAASU,IAAxC,CAAL,CACD;;AAKAZ,YAHCC,8BAGD,EAFCY,yBAAK,MAAMC,SAAX,CAED,EADCb,kCACD,4BAAaa,UAAb;;AAIAd,YAFCC,sBAAI,CAAJ,CAED,EADCA,8BACD;;AAlCFc","names":["ApproveNftTransfer","PrivateKeyOrSignatureId_1","__decorate","class_validator_1","Currency_1","ETH","MATIC","BSC","ONE","CELO","KLAY","o","isErc721","CUSD","CEUR","class_transformer_1","Fee_1","exports"],"sourceRoot":"","sources":["../../../../src/model/request/ApproveNftTransfer.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}