{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar createHash = require('create-hash');\n\nvar BN = require('bn.js');\n\nvar EC = require('elliptic').ec;\n\nvar messages = require('../messages.json');\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nfunction loadCompressedPublicKey(first, xBuffer) {\n  var x = new BN(xBuffer); // overflow\n\n  if (x.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red); // compute corresponding Y\n\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt();\n  if (first === 0x03 !== y.isOdd()) y = y.redNeg();\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadUncompressedPublicKey(first, xBuffer, yBuffer) {\n  var x = new BN(xBuffer);\n  var y = new BN(yBuffer); // overflow\n\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red);\n  y = y.toRed(ecparams.red); // is odd flag\n\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null; // x*x*x + b = y*y\n\n  var x3 = x.redSqr().redIMul(x);\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null;\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadPublicKey(publicKey) {\n  var first = publicKey[0];\n\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (publicKey.length !== 33) return null;\n      return loadCompressedPublicKey(first, publicKey.slice(1, 33));\n\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (publicKey.length !== 65) return null;\n      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65));\n\n    default:\n      return null;\n  }\n}\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = new BN(privateKey);\n  return bn.cmp(ecparams.n) < 0 && !bn.isZero();\n};\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey);\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL);\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true));\n};\n\nexports.privateKeyNegate = function (privateKey) {\n  var bn = new BN(privateKey);\n  return bn.isZero() ? Buffer.alloc(32) : ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_RANGE_INVALID);\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = new BN(tweak);\n  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);\n  bn.iadd(new BN(privateKey));\n  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n);\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL);\n  return bn.toArrayLike(Buffer, 'be', 32);\n};\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = new BN(tweak);\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL);\n  bn.imul(new BN(privateKey));\n  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n);\n  return bn.toArrayLike(Buffer, 'be', 32);\n};\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = new BN(privateKey);\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL);\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true));\n};\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  return Buffer.from(pair.getPublic(compressed, true));\n};\n\nexports.publicKeyVerify = function (publicKey) {\n  return loadPublicKey(publicKey) !== null;\n};\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  tweak = new BN(tweak);\n  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);\n  var point = ecparams.g.mul(tweak).add(pair.pub);\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL);\n  return Buffer.from(point.encode(true, compressed));\n};\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  tweak = new BN(tweak);\n  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL);\n  return Buffer.from(pair.pub.mul(tweak).encode(true, compressed));\n};\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var pairs = new Array(publicKeys.length);\n\n  for (var i = 0; i < publicKeys.length; ++i) {\n    pairs[i] = loadPublicKey(publicKeys[i]);\n    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  }\n\n  var point = pairs[0].pub;\n\n  for (var j = 1; j < pairs.length; ++j) point = point.add(pairs[j].pub);\n\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL);\n  return Buffer.from(point.encode(true, compressed));\n};\n\nexports.signatureNormalize = function (signature) {\n  var r = new BN(signature.slice(0, 32));\n  var s = new BN(signature.slice(32, 64));\n  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n  var result = Buffer.from(signature);\n  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32);\n  return result;\n};\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32);\n  var s = signature.slice(32, 64);\n  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n  return {\n    r: r,\n    s: s\n  };\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n  if (r.cmp(ecparams.n) >= 0) r = new BN(0);\n  var s = new BN(sigObj.s);\n  if (s.cmp(ecparams.n) >= 0) s = new BN(0);\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  if (typeof noncefn === 'function') {\n    var getNonce = noncefn;\n\n    noncefn = function (counter) {\n      var nonce = getNonce(message, privateKey, null, data, counter);\n      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL);\n      return new BN(nonce);\n    };\n  }\n\n  var d = new BN(privateKey);\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL);\n  var result = ec.sign(message, privateKey, {\n    canonical: true,\n    k: noncefn,\n    pers: data\n  });\n  return {\n    signature: Buffer.concat([result.r.toArrayLike(Buffer, 'be', 32), result.s.toArrayLike(Buffer, 'be', 32)]),\n    recovery: result.recoveryParam\n  };\n};\n\nexports.verify = function (message, signature, publicKey) {\n  var sigObj = {\n    r: signature.slice(0, 32),\n    s: signature.slice(32, 64)\n  };\n  var sigr = new BN(sigObj.r);\n  var sigs = new BN(sigObj.s);\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false;\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  return ec.verify(message, sigObj, {\n    x: pair.pub.x,\n    y: pair.pub.y\n  });\n};\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigObj = {\n    r: signature.slice(0, 32),\n    s: signature.slice(32, 64)\n  };\n  var sigr = new BN(sigObj.r);\n  var sigs = new BN(sigObj.s);\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL);\n\n  try {\n    if (sigr.isZero() || sigs.isZero()) throw new Error();\n    var point = ec.recoverPubKey(message, sigObj, recovery);\n    return Buffer.from(point.encode(true, compressed));\n  } catch (err) {\n    throw new Error(messages.ECDSA_RECOVER_FAIL);\n  }\n};\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true);\n  return createHash('sha256').update(shared).digest();\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var pair = loadPublicKey(publicKey);\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL);\n  var scalar = new BN(privateKey);\n  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL);\n  return Buffer.from(pair.pub.mul(scalar).encode(true, compressed));\n};","map":{"version":3,"names":["Buffer","require","createHash","BN","EC","ec","messages","ecparams","curve","loadCompressedPublicKey","first","xBuffer","x","cmp","p","toRed","red","y","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadUncompressedPublicKey","yBuffer","x3","redISub","isZero","loadPublicKey","publicKey","length","slice","exports","privateKeyVerify","privateKey","bn","n","privateKeyExport","compressed","d","Error","EC_PRIVATE_KEY_EXPORT_DER_FAIL","from","keyFromPrivate","getPublic","privateKeyNegate","alloc","sub","umod","toArrayLike","privateKeyModInverse","EC_PRIVATE_KEY_RANGE_INVALID","invm","privateKeyTweakAdd","tweak","EC_PRIVATE_KEY_TWEAK_ADD_FAIL","iadd","isub","privateKeyTweakMul","EC_PRIVATE_KEY_TWEAK_MUL_FAIL","imul","publicKeyCreate","EC_PUBLIC_KEY_CREATE_FAIL","publicKeyConvert","pair","EC_PUBLIC_KEY_PARSE_FAIL","publicKeyVerify","publicKeyTweakAdd","EC_PUBLIC_KEY_TWEAK_ADD_FAIL","point","g","mul","add","isInfinity","encode","publicKeyTweakMul","EC_PUBLIC_KEY_TWEAK_MUL_FAIL","publicKeyCombine","publicKeys","pairs","Array","i","j","EC_PUBLIC_KEY_COMBINE_FAIL","signatureNormalize","signature","r","s","ECDSA_SIGNATURE_PARSE_FAIL","result","nh","copy","signatureExport","signatureImport","sigObj","concat","sign","message","noncefn","data","getNonce","counter","nonce","isBuffer","ECDSA_SIGN_FAIL","canonical","k","pers","recovery","recoveryParam","verify","sigr","sigs","recover","recoverPubKey","err","ECDSA_RECOVER_FAIL","ecdh","shared","ecdhUnsafe","update","digest","scalar","ECDH_FAIL"],"sources":["C:/Users/acer/node_modules/@harmony-js/crypto/node_modules/secp256k1/lib/elliptic/index.js"],"sourcesContent":["'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\n\nvar messages = require('../messages.json')\n\nvar ec = new EC('secp256k1')\nvar ecparams = ec.curve\n\nfunction loadCompressedPublicKey (first, xBuffer) {\n  var x = new BN(xBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xBuffer, yBuffer) {\n  var x = new BN(xBuffer)\n  var y = new BN(yBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  var x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (publicKey) {\n  var first = publicKey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (publicKey.length !== 33) return null\n      return loadCompressedPublicKey(first, publicKey.slice(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (publicKey.length !== 65) return null\n      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65))\n    default:\n      return null\n  }\n}\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.cmp(ecparams.n) < 0 && !bn.isZero()\n}\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.privateKeyNegate = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.isZero() ? Buffer.alloc(32) : ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_RANGE_INVALID)\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  bn.iadd(new BN(privateKey))\n  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL)\n\n  bn.imul(new BN(privateKey))\n  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return Buffer.from(pair.getPublic(compressed, true))\n}\n\nexports.publicKeyVerify = function (publicKey) {\n  return loadPublicKey(publicKey) !== null\n}\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  var point = ecparams.g.mul(tweak).add(pair.pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  return Buffer.from(point.encode(true, compressed))\n}\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL)\n\n  return Buffer.from(pair.pub.mul(tweak).encode(true, compressed))\n}\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var pairs = new Array(publicKeys.length)\n  for (var i = 0; i < publicKeys.length; ++i) {\n    pairs[i] = loadPublicKey(publicKeys[i])\n    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n  }\n\n  var point = pairs[0].pub\n  for (var j = 1; j < pairs.length; ++j) point = point.add(pairs[j].pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL)\n\n  return Buffer.from(point.encode(true, compressed))\n}\n\nexports.signatureNormalize = function (signature) {\n  var r = new BN(signature.slice(0, 32))\n  var s = new BN(signature.slice(32, 64))\n  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  var result = Buffer.from(signature)\n  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32)\n\n  return result\n}\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32)\n  var s = signature.slice(32, 64)\n  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r)\n  if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n  var s = new BN(sigObj.s)\n  if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n  return Buffer.concat([\n    r.toArrayLike(Buffer, 'be', 32),\n    s.toArrayLike(Buffer, 'be', 32)\n  ])\n}\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  if (typeof noncefn === 'function') {\n    var getNonce = noncefn\n    noncefn = function (counter) {\n      var nonce = getNonce(message, privateKey, null, data, counter)\n      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n      return new BN(nonce)\n    }\n  }\n\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n  var result = ec.sign(message, privateKey, { canonical: true, k: noncefn, pers: data })\n  return {\n    signature: Buffer.concat([\n      result.r.toArrayLike(Buffer, 'be', 32),\n      result.s.toArrayLike(Buffer, 'be', 32)\n    ]),\n    recovery: result.recoveryParam\n  }\n}\n\nexports.verify = function (message, signature, publicKey) {\n  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) }\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false\n\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return ec.verify(message, sigObj, { x: pair.pub.x, y: pair.pub.y })\n}\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) }\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  try {\n    if (sigr.isZero() || sigs.isZero()) throw new Error()\n\n    var point = ec.recoverPubKey(message, sigObj, recovery)\n    return Buffer.from(point.encode(true, compressed))\n  } catch (err) {\n    throw new Error(messages.ECDSA_RECOVER_FAIL)\n  }\n}\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true)\n  return createHash('sha256').update(shared).digest()\n}\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  var scalar = new BN(privateKey)\n  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL)\n\n  return Buffer.from(pair.pub.mul(scalar).encode(true, compressed))\n}\n"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAApC;;AACA,IAAIE,UAAU,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,OAAD,CAAhB;;AACA,IAAIG,EAAE,GAAGH,OAAO,CAAC,UAAD,CAAP,CAAoBI,EAA7B;;AAEA,IAAIC,QAAQ,GAAGL,OAAO,CAAC,kBAAD,CAAtB;;AAEA,IAAII,EAAE,GAAG,IAAID,EAAJ,CAAO,WAAP,CAAT;AACA,IAAIG,QAAQ,GAAGF,EAAE,CAACG,KAAlB;;AAEA,SAASC,uBAAT,CAAkCC,KAAlC,EAAyCC,OAAzC,EAAkD;EAChD,IAAIC,CAAC,GAAG,IAAIT,EAAJ,CAAOQ,OAAP,CAAR,CADgD,CAGhD;;EACA,IAAIC,CAAC,CAACC,GAAF,CAAMN,QAAQ,CAACO,CAAf,KAAqB,CAAzB,EAA4B,OAAO,IAAP;EAC5BF,CAAC,GAAGA,CAAC,CAACG,KAAF,CAAQR,QAAQ,CAACS,GAAjB,CAAJ,CALgD,CAOhD;;EACA,IAAIC,CAAC,GAAGL,CAAC,CAACM,MAAF,GAAWC,OAAX,CAAmBP,CAAnB,EAAsBQ,OAAtB,CAA8Bb,QAAQ,CAACc,CAAvC,EAA0CC,OAA1C,EAAR;EACA,IAAKZ,KAAK,KAAK,IAAX,KAAqBO,CAAC,CAACM,KAAF,EAAzB,EAAoCN,CAAC,GAAGA,CAAC,CAACO,MAAF,EAAJ;EAEpC,OAAOnB,EAAE,CAACoB,OAAH,CAAW;IAAEC,GAAG,EAAE;MAAEd,CAAC,EAAEA,CAAL;MAAQK,CAAC,EAAEA;IAAX;EAAP,CAAX,CAAP;AACD;;AAED,SAASU,yBAAT,CAAoCjB,KAApC,EAA2CC,OAA3C,EAAoDiB,OAApD,EAA6D;EAC3D,IAAIhB,CAAC,GAAG,IAAIT,EAAJ,CAAOQ,OAAP,CAAR;EACA,IAAIM,CAAC,GAAG,IAAId,EAAJ,CAAOyB,OAAP,CAAR,CAF2D,CAI3D;;EACA,IAAIhB,CAAC,CAACC,GAAF,CAAMN,QAAQ,CAACO,CAAf,KAAqB,CAArB,IAA0BG,CAAC,CAACJ,GAAF,CAAMN,QAAQ,CAACO,CAAf,KAAqB,CAAnD,EAAsD,OAAO,IAAP;EAEtDF,CAAC,GAAGA,CAAC,CAACG,KAAF,CAAQR,QAAQ,CAACS,GAAjB,CAAJ;EACAC,CAAC,GAAGA,CAAC,CAACF,KAAF,CAAQR,QAAQ,CAACS,GAAjB,CAAJ,CAR2D,CAU3D;;EACA,IAAI,CAACN,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,IAA7B,KAAsCO,CAAC,CAACM,KAAF,QAAeb,KAAK,KAAK,IAAzB,CAA1C,EAA0E,OAAO,IAAP,CAXf,CAa3D;;EACA,IAAImB,EAAE,GAAGjB,CAAC,CAACM,MAAF,GAAWC,OAAX,CAAmBP,CAAnB,CAAT;EACA,IAAI,CAACK,CAAC,CAACC,MAAF,GAAWY,OAAX,CAAmBD,EAAE,CAACT,OAAH,CAAWb,QAAQ,CAACc,CAApB,CAAnB,EAA2CU,MAA3C,EAAL,EAA0D,OAAO,IAAP;EAE1D,OAAO1B,EAAE,CAACoB,OAAH,CAAW;IAAEC,GAAG,EAAE;MAAEd,CAAC,EAAEA,CAAL;MAAQK,CAAC,EAAEA;IAAX;EAAP,CAAX,CAAP;AACD;;AAED,SAASe,aAAT,CAAwBC,SAAxB,EAAmC;EACjC,IAAIvB,KAAK,GAAGuB,SAAS,CAAC,CAAD,CAArB;;EACA,QAAQvB,KAAR;IACE,KAAK,IAAL;IACA,KAAK,IAAL;MACE,IAAIuB,SAAS,CAACC,MAAV,KAAqB,EAAzB,EAA6B,OAAO,IAAP;MAC7B,OAAOzB,uBAAuB,CAACC,KAAD,EAAQuB,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAR,CAA9B;;IACF,KAAK,IAAL;IACA,KAAK,IAAL;IACA,KAAK,IAAL;MACE,IAAIF,SAAS,CAACC,MAAV,KAAqB,EAAzB,EAA6B,OAAO,IAAP;MAC7B,OAAOP,yBAAyB,CAACjB,KAAD,EAAQuB,SAAS,CAACE,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAR,EAAgCF,SAAS,CAACE,KAAV,CAAgB,EAAhB,EAAoB,EAApB,CAAhC,CAAhC;;IACF;MACE,OAAO,IAAP;EAXJ;AAaD;;AAEDC,OAAO,CAACC,gBAAR,GAA2B,UAAUC,UAAV,EAAsB;EAC/C,IAAIC,EAAE,GAAG,IAAIpC,EAAJ,CAAOmC,UAAP,CAAT;EACA,OAAOC,EAAE,CAAC1B,GAAH,CAAON,QAAQ,CAACiC,CAAhB,IAAqB,CAArB,IAA0B,CAACD,EAAE,CAACR,MAAH,EAAlC;AACD,CAHD;;AAKAK,OAAO,CAACK,gBAAR,GAA2B,UAAUH,UAAV,EAAsBI,UAAtB,EAAkC;EAC3D,IAAIC,CAAC,GAAG,IAAIxC,EAAJ,CAAOmC,UAAP,CAAR;EACA,IAAIK,CAAC,CAAC9B,GAAF,CAAMN,QAAQ,CAACiC,CAAf,KAAqB,CAArB,IAA0BG,CAAC,CAACZ,MAAF,EAA9B,EAA0C,MAAM,IAAIa,KAAJ,CAAUtC,QAAQ,CAACuC,8BAAnB,CAAN;EAE1C,OAAO7C,MAAM,CAAC8C,IAAP,CAAYzC,EAAE,CAAC0C,cAAH,CAAkBT,UAAlB,EAA8BU,SAA9B,CAAwCN,UAAxC,EAAoD,IAApD,CAAZ,CAAP;AACD,CALD;;AAOAN,OAAO,CAACa,gBAAR,GAA2B,UAAUX,UAAV,EAAsB;EAC/C,IAAIC,EAAE,GAAG,IAAIpC,EAAJ,CAAOmC,UAAP,CAAT;EACA,OAAOC,EAAE,CAACR,MAAH,KAAc/B,MAAM,CAACkD,KAAP,CAAa,EAAb,CAAd,GAAiC3C,QAAQ,CAACiC,CAAT,CAAWW,GAAX,CAAeZ,EAAf,EAAmBa,IAAnB,CAAwB7C,QAAQ,CAACiC,CAAjC,EAAoCa,WAApC,CAAgDrD,MAAhD,EAAwD,IAAxD,EAA8D,EAA9D,CAAxC;AACD,CAHD;;AAKAoC,OAAO,CAACkB,oBAAR,GAA+B,UAAUhB,UAAV,EAAsB;EACnD,IAAIC,EAAE,GAAG,IAAIpC,EAAJ,CAAOmC,UAAP,CAAT;EACA,IAAIC,EAAE,CAAC1B,GAAH,CAAON,QAAQ,CAACiC,CAAhB,KAAsB,CAAtB,IAA2BD,EAAE,CAACR,MAAH,EAA/B,EAA4C,MAAM,IAAIa,KAAJ,CAAUtC,QAAQ,CAACiD,4BAAnB,CAAN;EAE5C,OAAOhB,EAAE,CAACiB,IAAH,CAAQjD,QAAQ,CAACiC,CAAjB,EAAoBa,WAApB,CAAgCrD,MAAhC,EAAwC,IAAxC,EAA8C,EAA9C,CAAP;AACD,CALD;;AAOAoC,OAAO,CAACqB,kBAAR,GAA6B,UAAUnB,UAAV,EAAsBoB,KAAtB,EAA6B;EACxD,IAAInB,EAAE,GAAG,IAAIpC,EAAJ,CAAOuD,KAAP,CAAT;EACA,IAAInB,EAAE,CAAC1B,GAAH,CAAON,QAAQ,CAACiC,CAAhB,KAAsB,CAA1B,EAA6B,MAAM,IAAII,KAAJ,CAAUtC,QAAQ,CAACqD,6BAAnB,CAAN;EAE7BpB,EAAE,CAACqB,IAAH,CAAQ,IAAIzD,EAAJ,CAAOmC,UAAP,CAAR;EACA,IAAIC,EAAE,CAAC1B,GAAH,CAAON,QAAQ,CAACiC,CAAhB,KAAsB,CAA1B,EAA6BD,EAAE,CAACsB,IAAH,CAAQtD,QAAQ,CAACiC,CAAjB;EAC7B,IAAID,EAAE,CAACR,MAAH,EAAJ,EAAiB,MAAM,IAAIa,KAAJ,CAAUtC,QAAQ,CAACqD,6BAAnB,CAAN;EAEjB,OAAOpB,EAAE,CAACc,WAAH,CAAerD,MAAf,EAAuB,IAAvB,EAA6B,EAA7B,CAAP;AACD,CATD;;AAWAoC,OAAO,CAAC0B,kBAAR,GAA6B,UAAUxB,UAAV,EAAsBoB,KAAtB,EAA6B;EACxD,IAAInB,EAAE,GAAG,IAAIpC,EAAJ,CAAOuD,KAAP,CAAT;EACA,IAAInB,EAAE,CAAC1B,GAAH,CAAON,QAAQ,CAACiC,CAAhB,KAAsB,CAAtB,IAA2BD,EAAE,CAACR,MAAH,EAA/B,EAA4C,MAAM,IAAIa,KAAJ,CAAUtC,QAAQ,CAACyD,6BAAnB,CAAN;EAE5CxB,EAAE,CAACyB,IAAH,CAAQ,IAAI7D,EAAJ,CAAOmC,UAAP,CAAR;EACA,IAAIC,EAAE,CAAC1B,GAAH,CAAON,QAAQ,CAACiC,CAAhB,CAAJ,EAAwBD,EAAE,GAAGA,EAAE,CAACa,IAAH,CAAQ7C,QAAQ,CAACiC,CAAjB,CAAL;EAExB,OAAOD,EAAE,CAACc,WAAH,CAAerD,MAAf,EAAuB,IAAvB,EAA6B,EAA7B,CAAP;AACD,CARD;;AAUAoC,OAAO,CAAC6B,eAAR,GAA0B,UAAU3B,UAAV,EAAsBI,UAAtB,EAAkC;EAC1D,IAAIC,CAAC,GAAG,IAAIxC,EAAJ,CAAOmC,UAAP,CAAR;EACA,IAAIK,CAAC,CAAC9B,GAAF,CAAMN,QAAQ,CAACiC,CAAf,KAAqB,CAArB,IAA0BG,CAAC,CAACZ,MAAF,EAA9B,EAA0C,MAAM,IAAIa,KAAJ,CAAUtC,QAAQ,CAAC4D,yBAAnB,CAAN;EAE1C,OAAOlE,MAAM,CAAC8C,IAAP,CAAYzC,EAAE,CAAC0C,cAAH,CAAkBT,UAAlB,EAA8BU,SAA9B,CAAwCN,UAAxC,EAAoD,IAApD,CAAZ,CAAP;AACD,CALD;;AAOAN,OAAO,CAAC+B,gBAAR,GAA2B,UAAUlC,SAAV,EAAqBS,UAArB,EAAiC;EAC1D,IAAI0B,IAAI,GAAGpC,aAAa,CAACC,SAAD,CAAxB;EACA,IAAImC,IAAI,KAAK,IAAb,EAAmB,MAAM,IAAIxB,KAAJ,CAAUtC,QAAQ,CAAC+D,wBAAnB,CAAN;EAEnB,OAAOrE,MAAM,CAAC8C,IAAP,CAAYsB,IAAI,CAACpB,SAAL,CAAeN,UAAf,EAA2B,IAA3B,CAAZ,CAAP;AACD,CALD;;AAOAN,OAAO,CAACkC,eAAR,GAA0B,UAAUrC,SAAV,EAAqB;EAC7C,OAAOD,aAAa,CAACC,SAAD,CAAb,KAA6B,IAApC;AACD,CAFD;;AAIAG,OAAO,CAACmC,iBAAR,GAA4B,UAAUtC,SAAV,EAAqByB,KAArB,EAA4BhB,UAA5B,EAAwC;EAClE,IAAI0B,IAAI,GAAGpC,aAAa,CAACC,SAAD,CAAxB;EACA,IAAImC,IAAI,KAAK,IAAb,EAAmB,MAAM,IAAIxB,KAAJ,CAAUtC,QAAQ,CAAC+D,wBAAnB,CAAN;EAEnBX,KAAK,GAAG,IAAIvD,EAAJ,CAAOuD,KAAP,CAAR;EACA,IAAIA,KAAK,CAAC7C,GAAN,CAAUN,QAAQ,CAACiC,CAAnB,KAAyB,CAA7B,EAAgC,MAAM,IAAII,KAAJ,CAAUtC,QAAQ,CAACkE,4BAAnB,CAAN;EAEhC,IAAIC,KAAK,GAAGlE,QAAQ,CAACmE,CAAT,CAAWC,GAAX,CAAejB,KAAf,EAAsBkB,GAAtB,CAA0BR,IAAI,CAAC1C,GAA/B,CAAZ;EACA,IAAI+C,KAAK,CAACI,UAAN,EAAJ,EAAwB,MAAM,IAAIjC,KAAJ,CAAUtC,QAAQ,CAACkE,4BAAnB,CAAN;EAExB,OAAOxE,MAAM,CAAC8C,IAAP,CAAY2B,KAAK,CAACK,MAAN,CAAa,IAAb,EAAmBpC,UAAnB,CAAZ,CAAP;AACD,CAXD;;AAaAN,OAAO,CAAC2C,iBAAR,GAA4B,UAAU9C,SAAV,EAAqByB,KAArB,EAA4BhB,UAA5B,EAAwC;EAClE,IAAI0B,IAAI,GAAGpC,aAAa,CAACC,SAAD,CAAxB;EACA,IAAImC,IAAI,KAAK,IAAb,EAAmB,MAAM,IAAIxB,KAAJ,CAAUtC,QAAQ,CAAC+D,wBAAnB,CAAN;EAEnBX,KAAK,GAAG,IAAIvD,EAAJ,CAAOuD,KAAP,CAAR;EACA,IAAIA,KAAK,CAAC7C,GAAN,CAAUN,QAAQ,CAACiC,CAAnB,KAAyB,CAAzB,IAA8BkB,KAAK,CAAC3B,MAAN,EAAlC,EAAkD,MAAM,IAAIa,KAAJ,CAAUtC,QAAQ,CAAC0E,4BAAnB,CAAN;EAElD,OAAOhF,MAAM,CAAC8C,IAAP,CAAYsB,IAAI,CAAC1C,GAAL,CAASiD,GAAT,CAAajB,KAAb,EAAoBoB,MAApB,CAA2B,IAA3B,EAAiCpC,UAAjC,CAAZ,CAAP;AACD,CARD;;AAUAN,OAAO,CAAC6C,gBAAR,GAA2B,UAAUC,UAAV,EAAsBxC,UAAtB,EAAkC;EAC3D,IAAIyC,KAAK,GAAG,IAAIC,KAAJ,CAAUF,UAAU,CAAChD,MAArB,CAAZ;;EACA,KAAK,IAAImD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAAChD,MAA/B,EAAuC,EAAEmD,CAAzC,EAA4C;IAC1CF,KAAK,CAACE,CAAD,CAAL,GAAWrD,aAAa,CAACkD,UAAU,CAACG,CAAD,CAAX,CAAxB;IACA,IAAIF,KAAK,CAACE,CAAD,CAAL,KAAa,IAAjB,EAAuB,MAAM,IAAIzC,KAAJ,CAAUtC,QAAQ,CAAC+D,wBAAnB,CAAN;EACxB;;EAED,IAAII,KAAK,GAAGU,KAAK,CAAC,CAAD,CAAL,CAASzD,GAArB;;EACA,KAAK,IAAI4D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACjD,MAA1B,EAAkC,EAAEoD,CAApC,EAAuCb,KAAK,GAAGA,KAAK,CAACG,GAAN,CAAUO,KAAK,CAACG,CAAD,CAAL,CAAS5D,GAAnB,CAAR;;EACvC,IAAI+C,KAAK,CAACI,UAAN,EAAJ,EAAwB,MAAM,IAAIjC,KAAJ,CAAUtC,QAAQ,CAACiF,0BAAnB,CAAN;EAExB,OAAOvF,MAAM,CAAC8C,IAAP,CAAY2B,KAAK,CAACK,MAAN,CAAa,IAAb,EAAmBpC,UAAnB,CAAZ,CAAP;AACD,CAZD;;AAcAN,OAAO,CAACoD,kBAAR,GAA6B,UAAUC,SAAV,EAAqB;EAChD,IAAIC,CAAC,GAAG,IAAIvF,EAAJ,CAAOsF,SAAS,CAACtD,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAP,CAAR;EACA,IAAIwD,CAAC,GAAG,IAAIxF,EAAJ,CAAOsF,SAAS,CAACtD,KAAV,CAAgB,EAAhB,EAAoB,EAApB,CAAP,CAAR;EACA,IAAIuD,CAAC,CAAC7E,GAAF,CAAMN,QAAQ,CAACiC,CAAf,KAAqB,CAArB,IAA0BmD,CAAC,CAAC9E,GAAF,CAAMN,QAAQ,CAACiC,CAAf,KAAqB,CAAnD,EAAsD,MAAM,IAAII,KAAJ,CAAUtC,QAAQ,CAACsF,0BAAnB,CAAN;EAEtD,IAAIC,MAAM,GAAG7F,MAAM,CAAC8C,IAAP,CAAY2C,SAAZ,CAAb;EACA,IAAIE,CAAC,CAAC9E,GAAF,CAAMR,EAAE,CAACyF,EAAT,MAAiB,CAArB,EAAwBvF,QAAQ,CAACiC,CAAT,CAAWW,GAAX,CAAewC,CAAf,EAAkBtC,WAAlB,CAA8BrD,MAA9B,EAAsC,IAAtC,EAA4C,EAA5C,EAAgD+F,IAAhD,CAAqDF,MAArD,EAA6D,EAA7D;EAExB,OAAOA,MAAP;AACD,CATD;;AAWAzD,OAAO,CAAC4D,eAAR,GAA0B,UAAUP,SAAV,EAAqB;EAC7C,IAAIC,CAAC,GAAGD,SAAS,CAACtD,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAR;EACA,IAAIwD,CAAC,GAAGF,SAAS,CAACtD,KAAV,CAAgB,EAAhB,EAAoB,EAApB,CAAR;EACA,IAAI,IAAIhC,EAAJ,CAAOuF,CAAP,EAAU7E,GAAV,CAAcN,QAAQ,CAACiC,CAAvB,KAA6B,CAA7B,IAAkC,IAAIrC,EAAJ,CAAOwF,CAAP,EAAU9E,GAAV,CAAcN,QAAQ,CAACiC,CAAvB,KAA6B,CAAnE,EAAsE,MAAM,IAAII,KAAJ,CAAUtC,QAAQ,CAACsF,0BAAnB,CAAN;EAEtE,OAAO;IAAEF,CAAC,EAAEA,CAAL;IAAQC,CAAC,EAAEA;EAAX,CAAP;AACD,CAND;;AAQAvD,OAAO,CAAC6D,eAAR,GAA0B,UAAUC,MAAV,EAAkB;EAC1C,IAAIR,CAAC,GAAG,IAAIvF,EAAJ,CAAO+F,MAAM,CAACR,CAAd,CAAR;EACA,IAAIA,CAAC,CAAC7E,GAAF,CAAMN,QAAQ,CAACiC,CAAf,KAAqB,CAAzB,EAA4BkD,CAAC,GAAG,IAAIvF,EAAJ,CAAO,CAAP,CAAJ;EAE5B,IAAIwF,CAAC,GAAG,IAAIxF,EAAJ,CAAO+F,MAAM,CAACP,CAAd,CAAR;EACA,IAAIA,CAAC,CAAC9E,GAAF,CAAMN,QAAQ,CAACiC,CAAf,KAAqB,CAAzB,EAA4BmD,CAAC,GAAG,IAAIxF,EAAJ,CAAO,CAAP,CAAJ;EAE5B,OAAOH,MAAM,CAACmG,MAAP,CAAc,CACnBT,CAAC,CAACrC,WAAF,CAAcrD,MAAd,EAAsB,IAAtB,EAA4B,EAA5B,CADmB,EAEnB2F,CAAC,CAACtC,WAAF,CAAcrD,MAAd,EAAsB,IAAtB,EAA4B,EAA5B,CAFmB,CAAd,CAAP;AAID,CAXD;;AAaAoC,OAAO,CAACgE,IAAR,GAAe,UAAUC,OAAV,EAAmB/D,UAAnB,EAA+BgE,OAA/B,EAAwCC,IAAxC,EAA8C;EAC3D,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;IACjC,IAAIE,QAAQ,GAAGF,OAAf;;IACAA,OAAO,GAAG,UAAUG,OAAV,EAAmB;MAC3B,IAAIC,KAAK,GAAGF,QAAQ,CAACH,OAAD,EAAU/D,UAAV,EAAsB,IAAtB,EAA4BiE,IAA5B,EAAkCE,OAAlC,CAApB;MACA,IAAI,CAACzG,MAAM,CAAC2G,QAAP,CAAgBD,KAAhB,CAAD,IAA2BA,KAAK,CAACxE,MAAN,KAAiB,EAAhD,EAAoD,MAAM,IAAIU,KAAJ,CAAUtC,QAAQ,CAACsG,eAAnB,CAAN;MAEpD,OAAO,IAAIzG,EAAJ,CAAOuG,KAAP,CAAP;IACD,CALD;EAMD;;EAED,IAAI/D,CAAC,GAAG,IAAIxC,EAAJ,CAAOmC,UAAP,CAAR;EACA,IAAIK,CAAC,CAAC9B,GAAF,CAAMN,QAAQ,CAACiC,CAAf,KAAqB,CAArB,IAA0BG,CAAC,CAACZ,MAAF,EAA9B,EAA0C,MAAM,IAAIa,KAAJ,CAAUtC,QAAQ,CAACsG,eAAnB,CAAN;EAE1C,IAAIf,MAAM,GAAGxF,EAAE,CAAC+F,IAAH,CAAQC,OAAR,EAAiB/D,UAAjB,EAA6B;IAAEuE,SAAS,EAAE,IAAb;IAAmBC,CAAC,EAAER,OAAtB;IAA+BS,IAAI,EAAER;EAArC,CAA7B,CAAb;EACA,OAAO;IACLd,SAAS,EAAEzF,MAAM,CAACmG,MAAP,CAAc,CACvBN,MAAM,CAACH,CAAP,CAASrC,WAAT,CAAqBrD,MAArB,EAA6B,IAA7B,EAAmC,EAAnC,CADuB,EAEvB6F,MAAM,CAACF,CAAP,CAAStC,WAAT,CAAqBrD,MAArB,EAA6B,IAA7B,EAAmC,EAAnC,CAFuB,CAAd,CADN;IAKLgH,QAAQ,EAAEnB,MAAM,CAACoB;EALZ,CAAP;AAOD,CAtBD;;AAwBA7E,OAAO,CAAC8E,MAAR,GAAiB,UAAUb,OAAV,EAAmBZ,SAAnB,EAA8BxD,SAA9B,EAAyC;EACxD,IAAIiE,MAAM,GAAG;IAAER,CAAC,EAAED,SAAS,CAACtD,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAL;IAA6BwD,CAAC,EAAEF,SAAS,CAACtD,KAAV,CAAgB,EAAhB,EAAoB,EAApB;EAAhC,CAAb;EAEA,IAAIgF,IAAI,GAAG,IAAIhH,EAAJ,CAAO+F,MAAM,CAACR,CAAd,CAAX;EACA,IAAI0B,IAAI,GAAG,IAAIjH,EAAJ,CAAO+F,MAAM,CAACP,CAAd,CAAX;EACA,IAAIwB,IAAI,CAACtG,GAAL,CAASN,QAAQ,CAACiC,CAAlB,KAAwB,CAAxB,IAA6B4E,IAAI,CAACvG,GAAL,CAASN,QAAQ,CAACiC,CAAlB,KAAwB,CAAzD,EAA4D,MAAM,IAAII,KAAJ,CAAUtC,QAAQ,CAACsF,0BAAnB,CAAN;EAC5D,IAAIwB,IAAI,CAACvG,GAAL,CAASR,EAAE,CAACyF,EAAZ,MAAoB,CAApB,IAAyBqB,IAAI,CAACpF,MAAL,EAAzB,IAA0CqF,IAAI,CAACrF,MAAL,EAA9C,EAA6D,OAAO,KAAP;EAE7D,IAAIqC,IAAI,GAAGpC,aAAa,CAACC,SAAD,CAAxB;EACA,IAAImC,IAAI,KAAK,IAAb,EAAmB,MAAM,IAAIxB,KAAJ,CAAUtC,QAAQ,CAAC+D,wBAAnB,CAAN;EAEnB,OAAOhE,EAAE,CAAC6G,MAAH,CAAUb,OAAV,EAAmBH,MAAnB,EAA2B;IAAEtF,CAAC,EAAEwD,IAAI,CAAC1C,GAAL,CAASd,CAAd;IAAiBK,CAAC,EAAEmD,IAAI,CAAC1C,GAAL,CAAST;EAA7B,CAA3B,CAAP;AACD,CAZD;;AAcAmB,OAAO,CAACiF,OAAR,GAAkB,UAAUhB,OAAV,EAAmBZ,SAAnB,EAA8BuB,QAA9B,EAAwCtE,UAAxC,EAAoD;EACpE,IAAIwD,MAAM,GAAG;IAAER,CAAC,EAAED,SAAS,CAACtD,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAL;IAA6BwD,CAAC,EAAEF,SAAS,CAACtD,KAAV,CAAgB,EAAhB,EAAoB,EAApB;EAAhC,CAAb;EAEA,IAAIgF,IAAI,GAAG,IAAIhH,EAAJ,CAAO+F,MAAM,CAACR,CAAd,CAAX;EACA,IAAI0B,IAAI,GAAG,IAAIjH,EAAJ,CAAO+F,MAAM,CAACP,CAAd,CAAX;EACA,IAAIwB,IAAI,CAACtG,GAAL,CAASN,QAAQ,CAACiC,CAAlB,KAAwB,CAAxB,IAA6B4E,IAAI,CAACvG,GAAL,CAASN,QAAQ,CAACiC,CAAlB,KAAwB,CAAzD,EAA4D,MAAM,IAAII,KAAJ,CAAUtC,QAAQ,CAACsF,0BAAnB,CAAN;;EAE5D,IAAI;IACF,IAAIuB,IAAI,CAACpF,MAAL,MAAiBqF,IAAI,CAACrF,MAAL,EAArB,EAAoC,MAAM,IAAIa,KAAJ,EAAN;IAEpC,IAAI6B,KAAK,GAAGpE,EAAE,CAACiH,aAAH,CAAiBjB,OAAjB,EAA0BH,MAA1B,EAAkCc,QAAlC,CAAZ;IACA,OAAOhH,MAAM,CAAC8C,IAAP,CAAY2B,KAAK,CAACK,MAAN,CAAa,IAAb,EAAmBpC,UAAnB,CAAZ,CAAP;EACD,CALD,CAKE,OAAO6E,GAAP,EAAY;IACZ,MAAM,IAAI3E,KAAJ,CAAUtC,QAAQ,CAACkH,kBAAnB,CAAN;EACD;AACF,CAfD;;AAiBApF,OAAO,CAACqF,IAAR,GAAe,UAAUxF,SAAV,EAAqBK,UAArB,EAAiC;EAC9C,IAAIoF,MAAM,GAAGtF,OAAO,CAACuF,UAAR,CAAmB1F,SAAnB,EAA8BK,UAA9B,EAA0C,IAA1C,CAAb;EACA,OAAOpC,UAAU,CAAC,QAAD,CAAV,CAAqB0H,MAArB,CAA4BF,MAA5B,EAAoCG,MAApC,EAAP;AACD,CAHD;;AAKAzF,OAAO,CAACuF,UAAR,GAAqB,UAAU1F,SAAV,EAAqBK,UAArB,EAAiCI,UAAjC,EAA6C;EAChE,IAAI0B,IAAI,GAAGpC,aAAa,CAACC,SAAD,CAAxB;EACA,IAAImC,IAAI,KAAK,IAAb,EAAmB,MAAM,IAAIxB,KAAJ,CAAUtC,QAAQ,CAAC+D,wBAAnB,CAAN;EAEnB,IAAIyD,MAAM,GAAG,IAAI3H,EAAJ,CAAOmC,UAAP,CAAb;EACA,IAAIwF,MAAM,CAACjH,GAAP,CAAWN,QAAQ,CAACiC,CAApB,KAA0B,CAA1B,IAA+BsF,MAAM,CAAC/F,MAAP,EAAnC,EAAoD,MAAM,IAAIa,KAAJ,CAAUtC,QAAQ,CAACyH,SAAnB,CAAN;EAEpD,OAAO/H,MAAM,CAAC8C,IAAP,CAAYsB,IAAI,CAAC1C,GAAL,CAASiD,GAAT,CAAamD,MAAb,EAAqBhD,MAArB,CAA4B,IAA5B,EAAkCpC,UAAlC,CAAZ,CAAP;AACD,CARD"},"metadata":{},"sourceType":"script"}