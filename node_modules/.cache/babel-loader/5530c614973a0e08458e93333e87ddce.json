{"ast":null,"code":"'use strict';\n\nconst Tar = require('it-tar');\n\nconst CID = require('cids');\n\nconst configure = require('./lib/configure');\n\nconst toUrlSearchParams = require('./lib/to-url-search-params');\n\nconst map = require('it-map');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/get')>}\n   */\n  async function* get(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const res = await api.post('get', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path instanceof Uint8Array ? new CID(path) : path}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const extractor = Tar.extract();\n\n    for await (const {\n      header,\n      body\n    } of extractor(res.iterator())) {\n      if (header.type === 'directory') {\n        // @ts-ignore - Missing the following properties from type 'Directory':\n        // cid, name, size, depthts\n        yield {\n          type: 'dir',\n          path: header.name\n        };\n      } else {\n        // @ts-ignore - Missing the following properties from type 'File':\n        // cid, name, size, depthts\n        yield {\n          type: 'file',\n          path: header.name,\n          content: map(body, chunk => chunk.slice()) // convert bl to Buffer/Uint8Array\n\n        };\n      }\n    }\n  }\n\n  return get;\n});","map":{"version":3,"names":["Tar","require","CID","configure","toUrlSearchParams","map","module","exports","api","get","path","options","res","post","timeout","signal","searchParams","arg","Uint8Array","headers","extractor","extract","header","body","iterator","type","name","content","chunk","slice"],"sources":["C:/Users/acer/node_modules/ipfs-http-client/src/get.js"],"sourcesContent":["'use strict'\n\nconst Tar = require('it-tar')\nconst CID = require('cids')\nconst configure = require('./lib/configure')\nconst toUrlSearchParams = require('./lib/to-url-search-params')\nconst map = require('it-map')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('.').Implements<typeof import('ipfs-core/src/components/get')>}\n   */\n  async function * get (path, options = {}) {\n    const res = await api.post('get', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path instanceof Uint8Array ? new CID(path) : path}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const extractor = Tar.extract()\n\n    for await (const { header, body } of extractor(res.iterator())) {\n      if (header.type === 'directory') {\n        // @ts-ignore - Missing the following properties from type 'Directory':\n        // cid, name, size, depthts\n        yield {\n          type: 'dir',\n          path: header.name\n        }\n      } else {\n        // @ts-ignore - Missing the following properties from type 'File':\n        // cid, name, size, depthts\n        yield {\n          type: 'file',\n          path: header.name,\n          content: map(body, (chunk) => chunk.slice()) // convert bl to Buffer/Uint8Array\n        }\n      }\n    }\n  }\n\n  return get\n})\n"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAD,CAAnB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,4BAAD,CAAjC;;AACA,MAAMI,GAAG,GAAGJ,OAAO,CAAC,QAAD,CAAnB;;AAEAK,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;EAChC;AACF;AACA;EACE,gBAAiBC,GAAjB,CAAsBC,IAAtB,EAA0C;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACxC,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,KAAT,EAAgB;MAChCC,OAAO,EAAEH,OAAO,CAACG,OADe;MAEhCC,MAAM,EAAEJ,OAAO,CAACI,MAFgB;MAGhCC,YAAY,EAAEZ,iBAAiB,CAAC;QAC9Ba,GAAG,EAAG,GAAEP,IAAI,YAAYQ,UAAhB,GAA6B,IAAIhB,GAAJ,CAAQQ,IAAR,CAA7B,GAA6CA,IAAK,EAD5B;QAE9B,GAAGC;MAF2B,CAAD,CAHC;MAOhCQ,OAAO,EAAER,OAAO,CAACQ;IAPe,CAAhB,CAAlB;IAUA,MAAMC,SAAS,GAAGpB,GAAG,CAACqB,OAAJ,EAAlB;;IAEA,WAAW,MAAM;MAAEC,MAAF;MAAUC;IAAV,CAAjB,IAAqCH,SAAS,CAACR,GAAG,CAACY,QAAJ,EAAD,CAA9C,EAAgE;MAC9D,IAAIF,MAAM,CAACG,IAAP,KAAgB,WAApB,EAAiC;QAC/B;QACA;QACA,MAAM;UACJA,IAAI,EAAE,KADF;UAEJf,IAAI,EAAEY,MAAM,CAACI;QAFT,CAAN;MAID,CAPD,MAOO;QACL;QACA;QACA,MAAM;UACJD,IAAI,EAAE,MADF;UAEJf,IAAI,EAAEY,MAAM,CAACI,IAFT;UAGJC,OAAO,EAAEtB,GAAG,CAACkB,IAAD,EAAQK,KAAD,IAAWA,KAAK,CAACC,KAAN,EAAlB,CAHR,CAGyC;;QAHzC,CAAN;MAKD;IACF;EACF;;EAED,OAAOpB,GAAP;AACD,CAtCyB,CAA1B"},"metadata":{},"sourceType":"script"}