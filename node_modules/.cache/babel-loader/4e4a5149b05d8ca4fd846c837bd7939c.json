{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst typeFields_1 = require('../../typeFields');\n\nconst varuint = require('../varint');\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.OutputTypes.TAP_TREE || keyVal.key.length !== 1) {\n    throw new Error('Decode Error: could not decode tapTree with key 0x' + keyVal.key.toString('hex'));\n  }\n\n  let _offset = 0;\n  const data = [];\n\n  while (_offset < keyVal.value.length) {\n    const depth = keyVal.value[_offset++];\n    const leafVersion = keyVal.value[_offset++];\n    const scriptLen = varuint.decode(keyVal.value, _offset);\n    _offset += varuint.encodingLength(scriptLen);\n    data.push({\n      depth,\n      leafVersion,\n      script: keyVal.value.slice(_offset, _offset + scriptLen)\n    });\n    _offset += scriptLen;\n  }\n\n  return {\n    leaves: data\n  };\n}\n\nexports.decode = decode;\n\nfunction encode(tree) {\n  const key = Buffer.from([typeFields_1.OutputTypes.TAP_TREE]);\n  const bufs = [].concat(...tree.leaves.map(tapLeaf => [Buffer.of(tapLeaf.depth, tapLeaf.leafVersion), varuint.encode(tapLeaf.script.length), tapLeaf.script]));\n  return {\n    key,\n    value: Buffer.concat(bufs)\n  };\n}\n\nexports.encode = encode;\nexports.expected = '{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }';\n\nfunction check(data) {\n  return Array.isArray(data.leaves) && data.leaves.every(tapLeaf => tapLeaf.depth >= 0 && tapLeaf.depth <= 128 && (tapLeaf.leafVersion & 0xfe) === tapLeaf.leafVersion && Buffer.isBuffer(tapLeaf.script));\n}\n\nexports.check = check;\n\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapTree === undefined;\n}\n\nexports.canAdd = canAdd;","map":{"version":3,"names":["Object","defineProperty","exports","value","typeFields_1","require","varuint","decode","keyVal","key","OutputTypes","TAP_TREE","length","Error","toString","_offset","data","depth","leafVersion","scriptLen","encodingLength","push","script","slice","leaves","encode","tree","Buffer","from","bufs","concat","map","tapLeaf","of","expected","check","Array","isArray","every","isBuffer","canAdd","currentData","newData","tapTree","undefined"],"sources":["C:/Users/acer/node_modules/bip174/src/lib/converter/output/tapTree.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nconst varuint = require('../varint');\nfunction decode(keyVal) {\n  if (\n    keyVal.key[0] !== typeFields_1.OutputTypes.TAP_TREE ||\n    keyVal.key.length !== 1\n  ) {\n    throw new Error(\n      'Decode Error: could not decode tapTree with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  let _offset = 0;\n  const data = [];\n  while (_offset < keyVal.value.length) {\n    const depth = keyVal.value[_offset++];\n    const leafVersion = keyVal.value[_offset++];\n    const scriptLen = varuint.decode(keyVal.value, _offset);\n    _offset += varuint.encodingLength(scriptLen);\n    data.push({\n      depth,\n      leafVersion,\n      script: keyVal.value.slice(_offset, _offset + scriptLen),\n    });\n    _offset += scriptLen;\n  }\n  return { leaves: data };\n}\nexports.decode = decode;\nfunction encode(tree) {\n  const key = Buffer.from([typeFields_1.OutputTypes.TAP_TREE]);\n  const bufs = [].concat(\n    ...tree.leaves.map(tapLeaf => [\n      Buffer.of(tapLeaf.depth, tapLeaf.leafVersion),\n      varuint.encode(tapLeaf.script.length),\n      tapLeaf.script,\n    ]),\n  );\n  return {\n    key,\n    value: Buffer.concat(bufs),\n  };\n}\nexports.encode = encode;\nexports.expected =\n  '{ leaves: [{ depth: number; leafVersion: number, script: Buffer; }] }';\nfunction check(data) {\n  return (\n    Array.isArray(data.leaves) &&\n    data.leaves.every(\n      tapLeaf =>\n        tapLeaf.depth >= 0 &&\n        tapLeaf.depth <= 128 &&\n        (tapLeaf.leafVersion & 0xfe) === tapLeaf.leafVersion &&\n        Buffer.isBuffer(tapLeaf.script),\n    )\n  );\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapTree === undefined;\n}\nexports.canAdd = canAdd;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AACA,SAASE,MAAT,CAAgBC,MAAhB,EAAwB;EACtB,IACEA,MAAM,CAACC,GAAP,CAAW,CAAX,MAAkBL,YAAY,CAACM,WAAb,CAAyBC,QAA3C,IACAH,MAAM,CAACC,GAAP,CAAWG,MAAX,KAAsB,CAFxB,EAGE;IACA,MAAM,IAAIC,KAAJ,CACJ,uDACEL,MAAM,CAACC,GAAP,CAAWK,QAAX,CAAoB,KAApB,CAFE,CAAN;EAID;;EACD,IAAIC,OAAO,GAAG,CAAd;EACA,MAAMC,IAAI,GAAG,EAAb;;EACA,OAAOD,OAAO,GAAGP,MAAM,CAACL,KAAP,CAAaS,MAA9B,EAAsC;IACpC,MAAMK,KAAK,GAAGT,MAAM,CAACL,KAAP,CAAaY,OAAO,EAApB,CAAd;IACA,MAAMG,WAAW,GAAGV,MAAM,CAACL,KAAP,CAAaY,OAAO,EAApB,CAApB;IACA,MAAMI,SAAS,GAAGb,OAAO,CAACC,MAAR,CAAeC,MAAM,CAACL,KAAtB,EAA6BY,OAA7B,CAAlB;IACAA,OAAO,IAAIT,OAAO,CAACc,cAAR,CAAuBD,SAAvB,CAAX;IACAH,IAAI,CAACK,IAAL,CAAU;MACRJ,KADQ;MAERC,WAFQ;MAGRI,MAAM,EAAEd,MAAM,CAACL,KAAP,CAAaoB,KAAb,CAAmBR,OAAnB,EAA4BA,OAAO,GAAGI,SAAtC;IAHA,CAAV;IAKAJ,OAAO,IAAII,SAAX;EACD;;EACD,OAAO;IAAEK,MAAM,EAAER;EAAV,CAAP;AACD;;AACDd,OAAO,CAACK,MAAR,GAAiBA,MAAjB;;AACA,SAASkB,MAAT,CAAgBC,IAAhB,EAAsB;EACpB,MAAMjB,GAAG,GAAGkB,MAAM,CAACC,IAAP,CAAY,CAACxB,YAAY,CAACM,WAAb,CAAyBC,QAA1B,CAAZ,CAAZ;EACA,MAAMkB,IAAI,GAAG,GAAGC,MAAH,CACX,GAAGJ,IAAI,CAACF,MAAL,CAAYO,GAAZ,CAAgBC,OAAO,IAAI,CAC5BL,MAAM,CAACM,EAAP,CAAUD,OAAO,CAACf,KAAlB,EAAyBe,OAAO,CAACd,WAAjC,CAD4B,EAE5BZ,OAAO,CAACmB,MAAR,CAAeO,OAAO,CAACV,MAAR,CAAeV,MAA9B,CAF4B,EAG5BoB,OAAO,CAACV,MAHoB,CAA3B,CADQ,CAAb;EAOA,OAAO;IACLb,GADK;IAELN,KAAK,EAAEwB,MAAM,CAACG,MAAP,CAAcD,IAAd;EAFF,CAAP;AAID;;AACD3B,OAAO,CAACuB,MAAR,GAAiBA,MAAjB;AACAvB,OAAO,CAACgC,QAAR,GACE,uEADF;;AAEA,SAASC,KAAT,CAAenB,IAAf,EAAqB;EACnB,OACEoB,KAAK,CAACC,OAAN,CAAcrB,IAAI,CAACQ,MAAnB,KACAR,IAAI,CAACQ,MAAL,CAAYc,KAAZ,CACEN,OAAO,IACLA,OAAO,CAACf,KAAR,IAAiB,CAAjB,IACAe,OAAO,CAACf,KAAR,IAAiB,GADjB,IAEA,CAACe,OAAO,CAACd,WAAR,GAAsB,IAAvB,MAAiCc,OAAO,CAACd,WAFzC,IAGAS,MAAM,CAACY,QAAP,CAAgBP,OAAO,CAACV,MAAxB,CALJ,CAFF;AAUD;;AACDpB,OAAO,CAACiC,KAAR,GAAgBA,KAAhB;;AACA,SAASK,MAAT,CAAgBC,WAAhB,EAA6BC,OAA7B,EAAsC;EACpC,OAAO,CAAC,CAACD,WAAF,IAAiB,CAAC,CAACC,OAAnB,IAA8BD,WAAW,CAACE,OAAZ,KAAwBC,SAA7D;AACD;;AACD1C,OAAO,CAACsC,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}