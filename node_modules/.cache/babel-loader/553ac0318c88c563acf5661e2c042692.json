{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JSONRPC = void 0;\n\nconst utils = require(\"../utils\");\n\nconst thorifyResult = function (result) {\n  // tricks for compatible with original web3 instance\n  // non-objects or non-arrays doesn't need isThorified property since thorify just overwritten 3 formatters\n  // which all accept object as input\n  if (utils.isArray(result)) {\n    result = result.map(item => {\n      Object.defineProperty(item, 'isThorified', {\n        get: () => true\n      });\n      return item;\n    });\n  } else if (utils.isObject(result)) {\n    Object.defineProperty(result, 'isThorified', {\n      get: () => true\n    });\n  }\n\n  return result;\n};\n\nclass JSONRPC {\n  constructor(payload) {\n    this.id = payload.id;\n    this.method = payload.method;\n    this.params = payload.params;\n  }\n\n  makeResult(result) {\n    return {\n      id: this.id,\n      jsonrpc: '2.0',\n      result: thorifyResult(result)\n    };\n  }\n\n  makeError(message) {\n    return {\n      id: this.id,\n      jsonrpc: '2.0',\n      error: {\n        message\n      }\n    };\n  }\n\n  makeSubResult(result) {\n    return {\n      id: this.id,\n      jsonrpc: '2.0',\n      method: this.method,\n      params: {\n        result: {\n          data: thorifyResult(result)\n        },\n        subscription: this.id\n      }\n    };\n  }\n\n  makeSubError(error) {\n    return {\n      id: this.id,\n      jsonrpc: '2.0',\n      method: this.method,\n      params: {\n        result: {\n          error\n        },\n        subscription: this.id\n      }\n    };\n  }\n\n}\n\nexports.JSONRPC = JSONRPC;","map":{"version":3,"mappings":"AAAA;;;;;;;AACA;;AAgCA,MAAMA,aAAa,GAAG,UAASC,MAAT,EAAoB;EACtC;EACA;EACA;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;IACvBA,MAAM,GAAGA,MAAM,CAACG,GAAP,CAAYC,IAAD,IAAc;MAC9BC,MAAM,CAACC,cAAP,CAAsBF,IAAtB,EAA4B,aAA5B,EAA2C;QAAEG,GAAG,EAAE,MAAM;MAAb,CAA3C;MACA,OAAOH,IAAP;IACH,CAHQ,CAAT;EAIH,CALD,MAKO,IAAIH,KAAK,CAACO,QAAN,CAAeR,MAAf,CAAJ,EAA4B;IAC/BK,MAAM,CAACC,cAAP,CAAsBN,MAAtB,EAA8B,aAA9B,EAA6C;MAAEO,GAAG,EAAE,MAAM;IAAb,CAA7C;EACH;;EACD,OAAOP,MAAP;AACH,CAbD;;AAeA,MAAaS,OAAb,CAAoB;EAKhBC,YAAYC,OAAZ,EAA+B;IAC3B,KAAKC,EAAL,GAAUD,OAAO,CAACC,EAAlB;IACA,KAAKC,MAAL,GAAcF,OAAO,CAACE,MAAtB;IACA,KAAKC,MAAL,GAAcH,OAAO,CAACG,MAAtB;EACH;;EAEMC,UAAU,CAACf,MAAD,EAAY;IACzB,OAAO;MACHY,EAAE,EAAE,KAAKA,EADN;MAEHI,OAAO,EAAE,KAFN;MAGHhB,MAAM,EAAED,aAAa,CAACC,MAAD;IAHlB,CAAP;EAKH;;EAEMiB,SAAS,CAACC,OAAD,EAAgB;IAC5B,OAAO;MACHN,EAAE,EAAE,KAAKA,EADN;MAEHI,OAAO,EAAE,KAFN;MAGHG,KAAK,EAAE;QACHD;MADG;IAHJ,CAAP;EAOH;;EAEME,aAAa,CAACpB,MAAD,EAAY;IAC5B,OAAO;MACHY,EAAE,EAAE,KAAKA,EADN;MAEHI,OAAO,EAAE,KAFN;MAGHH,MAAM,EAAE,KAAKA,MAHV;MAIHC,MAAM,EAAE;QACJd,MAAM,EAAE;UACJqB,IAAI,EAAEtB,aAAa,CAACC,MAAD;QADf,CADJ;QAIJsB,YAAY,EAAE,KAAKV;MAJf;IAJL,CAAP;EAWH;;EAEMW,YAAY,CAACJ,KAAD,EAAW;IAC1B,OAAO;MACHP,EAAE,EAAE,KAAKA,EADN;MAEHI,OAAO,EAAE,KAFN;MAGHH,MAAM,EAAE,KAAKA,MAHV;MAIHC,MAAM,EAAE;QACJd,MAAM,EAAE;UACJmB;QADI,CADJ;QAIJG,YAAY,EAAE,KAAKV;MAJf;IAJL,CAAP;EAWH;;AAvDe;;AAApBY","names":["thorifyResult","result","utils","isArray","map","item","Object","defineProperty","get","isObject","JSONRPC","constructor","payload","id","method","params","makeResult","jsonrpc","makeError","message","error","makeSubResult","data","subscription","makeSubError","exports"],"sourceRoot":"","sources":["../../src/provider/json-rpc.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}