{"ast":null,"code":"/*\n    Copyright 2019 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst AccountKeyPublic = require('../accountKey/accountKeyPublic');\n\nconst AccountKeyMultiSig = require('../accountKey/accountKeyMultiSig');\n\nconst AccountKeyRoleBased = require('../accountKey/accountKeyRoleBased');\n\nconst isAddress = require('../../../../caver-utils/src/utils').isAddress;\n\nconst addHexPrefix = require('../../../../caver-utils').addHexPrefix;\n\nclass Account {\n  static fromObject(obj) {\n    return new Account(obj.address, new AccountKeyPublic(obj.privateKey));\n  }\n\n  static isAccountKey(accountKey) {\n    let isAccountKey = false;\n    if (accountKey instanceof AccountKeyPublic) isAccountKey = true;\n    if (accountKey instanceof AccountKeyMultiSig) isAccountKey = true;\n    if (accountKey instanceof AccountKeyRoleBased) isAccountKey = true;\n    return isAccountKey;\n  }\n\n  constructor(address, accountKey) {\n    if (!address || !accountKey) throw new Error('Failed to create Account. address and accountKey are needed to create Account.');\n    if (!isAddress(address)) throw new Error(`Invalid address : ${address}`);\n    if (!Account.isAccountKey(accountKey)) throw new Error('Invalid accountKey.');\n    address = addHexPrefix(address);\n    Object.defineProperty(this, 'address', {\n      get: function () {\n        return address;\n      },\n      set: function (addressInput) {\n        if (!isAddress(addressInput)) throw new Error(`Invalid address : ${addressInput}`);\n        address = addHexPrefix(addressInput);\n      },\n      enumerable: true\n    });\n    Object.defineProperty(this, 'accountKey', {\n      get: function () {\n        return accountKey;\n      },\n      set: function (accountKeyInput) {\n        if (!Account.isAccountKey(accountKeyInput) && accountKeyInput !== null) throw new Error('Invalid accountKey.');\n\n        if (accountKey === null || accountKeyInput === null) {\n          accountKey = accountKeyInput;\n        } else if (accountKey.type !== accountKeyInput.type) {\n          accountKey = accountKeyInput;\n        } else {\n          accountKey.update(accountKeyInput);\n        }\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(this, 'privateKey', {\n      get: function () {\n        return this.accountKey.defaultKey;\n      },\n      set: function () {\n        throw new Error('The privateKey cannot be modified. The privateKey is set to default key of accountKey, so update accountKey to modify the privateKey.');\n      },\n      enumerable: true\n    });\n  }\n\n  get keys() {\n    return this.accountKey.keys;\n  }\n\n  get accountKeyType() {\n    return this.accountKey.type;\n  }\n\n  get transactionKey() {\n    return this.accountKey.transactionKey;\n  }\n\n  get updateKey() {\n    return this.accountKey.updateKey;\n  }\n\n  get feePayerKey() {\n    return this.accountKey.feePayerKey;\n  }\n\n  toPublicKey(toPublicKeyFunc) {\n    return this.accountKey.toPublicKey(toPublicKeyFunc);\n  }\n\n}\n\nmodule.exports = Account;","map":{"version":3,"names":["AccountKeyPublic","require","AccountKeyMultiSig","AccountKeyRoleBased","isAddress","addHexPrefix","Account","fromObject","obj","address","privateKey","isAccountKey","accountKey","constructor","Error","Object","defineProperty","get","set","addressInput","enumerable","accountKeyInput","type","update","configurable","defaultKey","keys","accountKeyType","transactionKey","updateKey","feePayerKey","toPublicKey","toPublicKeyFunc","module","exports"],"sources":["C:/Users/acer/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/account/account.js"],"sourcesContent":["/*\n    Copyright 2019 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst AccountKeyPublic = require('../accountKey/accountKeyPublic')\nconst AccountKeyMultiSig = require('../accountKey/accountKeyMultiSig')\nconst AccountKeyRoleBased = require('../accountKey/accountKeyRoleBased')\nconst isAddress = require('../../../../caver-utils/src/utils').isAddress\nconst addHexPrefix = require('../../../../caver-utils').addHexPrefix\n\nclass Account {\n    static fromObject(obj) {\n        return new Account(obj.address, new AccountKeyPublic(obj.privateKey))\n    }\n\n    static isAccountKey(accountKey) {\n        let isAccountKey = false\n        if (accountKey instanceof AccountKeyPublic) isAccountKey = true\n        if (accountKey instanceof AccountKeyMultiSig) isAccountKey = true\n        if (accountKey instanceof AccountKeyRoleBased) isAccountKey = true\n\n        return isAccountKey\n    }\n\n    constructor(address, accountKey) {\n        if (!address || !accountKey) throw new Error('Failed to create Account. address and accountKey are needed to create Account.')\n\n        if (!isAddress(address)) throw new Error(`Invalid address : ${address}`)\n        if (!Account.isAccountKey(accountKey)) throw new Error('Invalid accountKey.')\n\n        address = addHexPrefix(address)\n\n        Object.defineProperty(this, 'address', {\n            get: function() {\n                return address\n            },\n            set: function(addressInput) {\n                if (!isAddress(addressInput)) throw new Error(`Invalid address : ${addressInput}`)\n                address = addHexPrefix(addressInput)\n            },\n            enumerable: true,\n        })\n\n        Object.defineProperty(this, 'accountKey', {\n            get: function() {\n                return accountKey\n            },\n            set: function(accountKeyInput) {\n                if (!Account.isAccountKey(accountKeyInput) && accountKeyInput !== null) throw new Error('Invalid accountKey.')\n\n                if (accountKey === null || accountKeyInput === null) {\n                    accountKey = accountKeyInput\n                } else if (accountKey.type !== accountKeyInput.type) {\n                    accountKey = accountKeyInput\n                } else {\n                    accountKey.update(accountKeyInput)\n                }\n            },\n            enumerable: true,\n            configurable: true,\n        })\n\n        Object.defineProperty(this, 'privateKey', {\n            get: function() {\n                return this.accountKey.defaultKey\n            },\n            set: function() {\n                throw new Error(\n                    'The privateKey cannot be modified. The privateKey is set to default key of accountKey, so update accountKey to modify the privateKey.'\n                )\n            },\n            enumerable: true,\n        })\n    }\n\n    get keys() {\n        return this.accountKey.keys\n    }\n\n    get accountKeyType() {\n        return this.accountKey.type\n    }\n\n    get transactionKey() {\n        return this.accountKey.transactionKey\n    }\n\n    get updateKey() {\n        return this.accountKey.updateKey\n    }\n\n    get feePayerKey() {\n        return this.accountKey.feePayerKey\n    }\n\n    toPublicKey(toPublicKeyFunc) {\n        return this.accountKey.toPublicKey(toPublicKeyFunc)\n    }\n}\n\nmodule.exports = Account\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}