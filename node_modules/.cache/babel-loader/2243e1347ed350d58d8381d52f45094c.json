{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CreateSubscription = exports.SubscriptionAttrCompleteBlockchainTx = exports.SubscriptionAttrUrlAddress = exports.SubscriptionAttrUrl = exports.SubscriptionAttrIncomingBlockchainTx = exports.SubscriptionAttrTxHistoryReport = exports.SubscriptionAttrOffchainWithdrawal = exports.SubscriptionAttrAccountBalanceLimit = void 0;\n\nconst class_transformer_1 = require(\"class-transformer\");\n\nconst class_validator_1 = require(\"class-validator\");\n\nconst SubscriptionType_1 = require(\"../response/ledger/SubscriptionType\");\n\nconst Currency_1 = require(\"./Currency\");\n\nclass Subscription {}\n\nclass SubscriptionAttrAccountBalanceLimit extends Subscription {}\n\n__decorate([class_validator_1.MaxLength(38), class_validator_1.IsNotEmpty(), class_validator_1.Matches(/^[+]?((\\d+(\\.\\d*)?)|(\\.\\d+))$/), __metadata(\"design:type\", String)], SubscriptionAttrAccountBalanceLimit.prototype, \"limit\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.IsIn(['account', 'available']), __metadata(\"design:type\", String)], SubscriptionAttrAccountBalanceLimit.prototype, \"typeOfBalance\", void 0);\n\nexports.SubscriptionAttrAccountBalanceLimit = SubscriptionAttrAccountBalanceLimit;\n\nclass SubscriptionAttrOffchainWithdrawal extends Subscription {}\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.Length(1, 30), class_validator_1.Matches(/^BTC|BNB|LTC|BCH|ETH|USDT|LEO|LINK|UNI|FREE|MKR|USDC|BAT|TUSD|PAX|PAXG|PLTC|XCON|MMY|[a-zA-Z0-9_]+$/), __metadata(\"design:type\", String)], SubscriptionAttrOffchainWithdrawal.prototype, \"currency\", void 0);\n\nexports.SubscriptionAttrOffchainWithdrawal = SubscriptionAttrOffchainWithdrawal;\n\nclass SubscriptionAttrTxHistoryReport extends Subscription {}\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.IsNumber(), class_validator_1.Min(1), class_validator_1.Max(720), __metadata(\"design:type\", Number)], SubscriptionAttrTxHistoryReport.prototype, \"interval\", void 0);\n\nexports.SubscriptionAttrTxHistoryReport = SubscriptionAttrTxHistoryReport;\n\nclass SubscriptionAttrIncomingBlockchainTx extends Subscription {}\n\n__decorate([class_validator_1.Length(24, 24), class_validator_1.IsNotEmpty(), __metadata(\"design:type\", String)], SubscriptionAttrIncomingBlockchainTx.prototype, \"id\", void 0);\n\n__decorate([class_validator_1.IsUrl(), class_validator_1.IsNotEmpty(), class_validator_1.MaxLength(500), __metadata(\"design:type\", String)], SubscriptionAttrIncomingBlockchainTx.prototype, \"url\", void 0);\n\nexports.SubscriptionAttrIncomingBlockchainTx = SubscriptionAttrIncomingBlockchainTx;\n\nclass SubscriptionAttrUrl extends Subscription {}\n\n__decorate([class_validator_1.IsUrl(), class_validator_1.IsNotEmpty(), class_validator_1.MaxLength(500), __metadata(\"design:type\", String)], SubscriptionAttrUrl.prototype, \"url\", void 0);\n\nexports.SubscriptionAttrUrl = SubscriptionAttrUrl;\n\nclass SubscriptionAttrUrlAddress extends Subscription {}\n\n__decorate([class_validator_1.IsUrl(), class_validator_1.IsNotEmpty(), class_validator_1.MaxLength(500), __metadata(\"design:type\", String)], SubscriptionAttrUrlAddress.prototype, \"url\", void 0);\n\n__decorate([class_validator_1.IsIn([Currency_1.Currency.SOL, Currency_1.Currency.ETH, Currency_1.Currency.MATIC, Currency_1.Currency.CELO, Currency_1.Currency.BTC, Currency_1.Currency.LTC, Currency_1.Currency.BCH, Currency_1.Currency.DOGE]), class_validator_1.IsNotEmpty(), __metadata(\"design:type\", String)], SubscriptionAttrUrlAddress.prototype, \"chain\", void 0);\n\n__decorate([class_validator_1.Length(13, 128), class_validator_1.IsNotEmpty(), __metadata(\"design:type\", String)], SubscriptionAttrUrlAddress.prototype, \"address\", void 0);\n\nexports.SubscriptionAttrUrlAddress = SubscriptionAttrUrlAddress;\n\nclass SubscriptionAttrCompleteBlockchainTx extends Subscription {}\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.Length(1, 30), class_validator_1.Matches(/^BTC|ADA|LTC|FLOW|FUSD|ONE|XDC|DOGE|RMD|BSC|CELO|CEUR|CUSD|BETH|GMC|GMC_BSC|BUSD|BUSD_BSC|CAKE|BBTC|BADA|WBNB|BDOT|BXRP|BLTC|BBCH|BCH|ETH|USDT|WBTC|LEO|LINK|UNI|FREE|MKR|USDC|BAT|TUSD|PAX|PAXG|PLTC|XCON|MMY|[a-zA-Z0-9_]+$/), __metadata(\"design:type\", String)], SubscriptionAttrCompleteBlockchainTx.prototype, \"currency\", void 0);\n\nexports.SubscriptionAttrCompleteBlockchainTx = SubscriptionAttrCompleteBlockchainTx;\n\nclass CreateSubscription {}\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.IsIn(Object.values(SubscriptionType_1.SubscriptionType)), __metadata(\"design:type\", String)], CreateSubscription.prototype, \"type\", void 0);\n\n__decorate([class_validator_1.IsNotEmptyObject(), class_validator_1.ValidateNested(), class_transformer_1.Type(() => Subscription, {\n  discriminator: {\n    property: '__type',\n    subTypes: [{\n      value: SubscriptionAttrAccountBalanceLimit,\n      name: 'ACCOUNT_BALANCE_LIMIT'\n    }, {\n      value: SubscriptionAttrUrl,\n      name: 'KMS_COMPLETED_TX'\n    }, {\n      value: SubscriptionAttrUrl,\n      name: 'KMS_FAILED_TX'\n    }, {\n      value: SubscriptionAttrUrl,\n      name: 'CUSTOMER_TRADE_MATCH'\n    }, {\n      value: SubscriptionAttrUrl,\n      name: 'TRANSACTION_IN_THE_BLOCK'\n    }, {\n      value: SubscriptionAttrUrlAddress,\n      name: 'ADDRESS_TRANSACTION'\n    }, {\n      value: SubscriptionAttrOffchainWithdrawal,\n      name: 'OFFCHAIN_WITHDRAWAL'\n    }, {\n      value: SubscriptionAttrTxHistoryReport,\n      name: 'TRANSACTION_HISTORY_REPORT'\n    }, {\n      value: SubscriptionAttrIncomingBlockchainTx,\n      name: 'ACCOUNT_INCOMING_BLOCKCHAIN_TRANSACTION'\n    }, {\n      value: SubscriptionAttrCompleteBlockchainTx,\n      name: 'COMPLETE_BLOCKCHAIN_TRANSACTION'\n    }, {\n      value: SubscriptionAttrIncomingBlockchainTx,\n      name: 'ACCOUNT_PENDING_BLOCKCHAIN_TRANSACTION'\n    }]\n  }\n}), __metadata(\"design:type\", Object)], CreateSubscription.prototype, \"attr\", void 0);\n\nexports.CreateSubscription = CreateSubscription;","map":{"version":3,"mappings":"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","names":["Subscription","SubscriptionAttrAccountBalanceLimit","__decorate","class_validator_1","exports","SubscriptionAttrOffchainWithdrawal","SubscriptionAttrTxHistoryReport","SubscriptionAttrIncomingBlockchainTx","SubscriptionAttrUrl","SubscriptionAttrUrlAddress","Currency_1","SOL","ETH","MATIC","CELO","BTC","LTC","BCH","DOGE","SubscriptionAttrCompleteBlockchainTx","CreateSubscription","Object","values","SubscriptionType_1","class_transformer_1","discriminator","property","subTypes","value","name"],"sourceRoot":"","sources":["../../../../src/model/request/CreateSubscription.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}