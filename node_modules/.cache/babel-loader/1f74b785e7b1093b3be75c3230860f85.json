{"ast":null,"code":"'use strict';\n\nconst encodings = require('./encodings');\n\nconst compileDecode = require('./decode');\n\nconst compileEncode = require('./encode');\n\nconst compileEncodingLength = require('./encoding-length');\n\nconst varint = require('varint');\n\nconst flatten = function (values) {\n  if (!values) return null;\n  const result = {};\n  Object.keys(values).forEach(function (k) {\n    result[k] = values[k].value;\n  });\n  return result;\n};\n\nmodule.exports = function (schema, extraEncodings) {\n  const messages = {};\n  const enums = {};\n  const cache = {};\n\n  const visit = function (schema, prefix) {\n    if (schema.enums) {\n      schema.enums.forEach(function (e) {\n        e.id = prefix + (prefix ? '.' : '') + e.name;\n        enums[e.id] = e;\n        visit(e, e.id);\n      });\n    }\n\n    if (schema.messages) {\n      schema.messages.forEach(function (m) {\n        m.id = prefix + (prefix ? '.' : '') + m.name;\n        messages[m.id] = m;\n        m.fields.forEach(function (f) {\n          if (!f.map) return;\n          const name = 'Map_' + f.map.from + '_' + f.map.to;\n          const map = {\n            name: name,\n            enums: [],\n            messages: [],\n            fields: [{\n              name: 'key',\n              type: f.map.from,\n              tag: 1,\n              repeated: false,\n              required: true\n            }, {\n              name: 'value',\n              type: f.map.to,\n              tag: 2,\n              repeated: false,\n              required: false\n            }],\n            extensions: null,\n            id: prefix + (prefix ? '.' : '') + name\n          };\n\n          if (!messages[map.id]) {\n            messages[map.id] = map;\n            schema.messages.push(map);\n          }\n\n          f.type = name;\n          f.repeated = true;\n        });\n        visit(m, m.id);\n      });\n    }\n  };\n\n  visit(schema, '');\n\n  const compileEnum = function (e) {\n    const values = Object.keys(e.values || []).map(function (k) {\n      return parseInt(e.values[k].value, 10);\n    });\n\n    const encode = function enumEncode(val, buf, view, offset) {\n      if (!values.length || values.indexOf(val) === -1) {\n        throw new Error('Invalid enum value: ' + val);\n      }\n\n      varint.encode(val, buf, offset);\n      enumEncode.bytes = varint.encode.bytes;\n      return buf;\n    };\n\n    const decode = function enumDecode(buf, view, offset) {\n      var val = varint.decode(buf, offset);\n\n      if (!values.length || values.indexOf(val) === -1) {\n        throw new Error('Invalid enum value: ' + val);\n      }\n\n      enumDecode.bytes = varint.decode.bytes;\n      return val;\n    };\n\n    return encodings.make(0, encode, decode, varint.encodingLength);\n  };\n\n  const compileMessage = function (m, exports) {\n    m.messages.forEach(function (nested) {\n      exports[nested.name] = resolve(nested.name, m.id);\n    });\n    m.enums.forEach(function (val) {\n      exports[val.name] = flatten(val.values);\n    });\n    exports.type = 2;\n    exports.message = true;\n    exports.name = m.name;\n    const oneofs = {};\n    m.fields.forEach(function (f) {\n      if (!f.oneof) return;\n      if (!oneofs[f.oneof]) oneofs[f.oneof] = [];\n      oneofs[f.oneof].push(f.name);\n    });\n    const enc = m.fields.map(function (f) {\n      return resolve(f.type, m.id);\n    });\n    const encodingLength = compileEncodingLength(m, enc, oneofs);\n    const encode = compileEncode(m, resolve, enc, oneofs, encodingLength);\n    const decode = compileDecode(m, resolve, enc); // end of compilation - return all the things\n\n    encode.bytes = decode.bytes = 0;\n    exports.buffer = true;\n    exports.encode = encode;\n    exports.decode = decode;\n    exports.encodingLength = encodingLength;\n    return exports;\n  };\n\n  const resolve = function (name, from, compile) {\n    if (extraEncodings && extraEncodings[name]) return extraEncodings[name];\n    if (encodings[name]) return encodings[name];\n    const m = (from ? from + '.' + name : name).split('.').map(function (part, i, list) {\n      return list.slice(0, i).concat(name).join('.');\n    }).reverse().reduce(function (result, id) {\n      return result || messages[id] || enums[id];\n    }, null);\n    if (compile === false) return m;\n    if (!m) throw new Error('Could not resolve ' + name);\n    if (m.values) return compileEnum(m);\n    const res = cache[m.id] || compileMessage(m, cache[m.id] = {});\n    return res;\n  };\n\n  return (schema.enums || []).concat((schema.messages || []).map(function (message) {\n    return resolve(message.id);\n  }));\n};","map":{"version":3,"names":["encodings","require","compileDecode","compileEncode","compileEncodingLength","varint","flatten","values","result","Object","keys","forEach","k","value","module","exports","schema","extraEncodings","messages","enums","cache","visit","prefix","e","id","name","m","fields","f","map","from","to","type","tag","repeated","required","extensions","push","compileEnum","parseInt","encode","enumEncode","val","buf","view","offset","length","indexOf","Error","bytes","decode","enumDecode","make","encodingLength","compileMessage","nested","resolve","message","oneofs","oneof","enc","buffer","compile","split","part","i","list","slice","concat","join","reverse","reduce","res"],"sources":["C:/Users/acer/node_modules/protons/src/compile/index.js"],"sourcesContent":["'use strict'\n\nconst encodings = require('./encodings')\nconst compileDecode = require('./decode')\nconst compileEncode = require('./encode')\nconst compileEncodingLength = require('./encoding-length')\nconst varint = require('varint')\n\nconst flatten = function (values) {\n  if (!values) return null\n  const result = {}\n  Object.keys(values).forEach(function (k) {\n    result[k] = values[k].value\n  })\n  return result\n}\n\nmodule.exports = function (schema, extraEncodings) {\n  const messages = {}\n  const enums = {}\n  const cache = {}\n\n  const visit = function (schema, prefix) {\n    if (schema.enums) {\n      schema.enums.forEach(function (e) {\n        e.id = prefix + (prefix ? '.' : '') + e.name\n        enums[e.id] = e\n        visit(e, e.id)\n      })\n    }\n    if (schema.messages) {\n      schema.messages.forEach(function (m) {\n        m.id = prefix + (prefix ? '.' : '') + m.name\n        messages[m.id] = m\n        m.fields.forEach(function (f) {\n          if (!f.map) return\n\n          const name = 'Map_' + f.map.from + '_' + f.map.to\n          const map = {\n            name: name,\n            enums: [],\n            messages: [],\n            fields: [{\n              name: 'key',\n              type: f.map.from,\n              tag: 1,\n              repeated: false,\n              required: true\n            }, {\n              name: 'value',\n              type: f.map.to,\n              tag: 2,\n              repeated: false,\n              required: false\n            }],\n            extensions: null,\n            id: prefix + (prefix ? '.' : '') + name\n          }\n\n          if (!messages[map.id]) {\n            messages[map.id] = map\n            schema.messages.push(map)\n          }\n          f.type = name\n          f.repeated = true\n        })\n        visit(m, m.id)\n      })\n    }\n  }\n\n  visit(schema, '')\n\n  const compileEnum = function (e) {\n    const values = Object.keys(e.values || []).map(function (k) {\n      return parseInt(e.values[k].value, 10)\n    })\n\n    const encode = function enumEncode (val, buf, view, offset) {\n      if (!values.length || values.indexOf(val) === -1) {\n        throw new Error('Invalid enum value: ' + val)\n      }\n      varint.encode(val, buf, offset)\n      enumEncode.bytes = varint.encode.bytes\n      return buf\n    }\n\n    const decode = function enumDecode (buf, view, offset) {\n      var val = varint.decode(buf, offset)\n      if (!values.length || values.indexOf(val) === -1) {\n        throw new Error('Invalid enum value: ' + val)\n      }\n      enumDecode.bytes = varint.decode.bytes\n      return val\n    }\n\n    return encodings.make(0, encode, decode, varint.encodingLength)\n  }\n\n  const compileMessage = function (m, exports) {\n    m.messages.forEach(function (nested) {\n      exports[nested.name] = resolve(nested.name, m.id)\n    })\n\n    m.enums.forEach(function (val) {\n      exports[val.name] = flatten(val.values)\n    })\n\n    exports.type = 2\n    exports.message = true\n    exports.name = m.name\n\n    const oneofs = {}\n\n    m.fields.forEach(function (f) {\n      if (!f.oneof) return\n      if (!oneofs[f.oneof]) oneofs[f.oneof] = []\n      oneofs[f.oneof].push(f.name)\n    })\n\n    const enc = m.fields.map(function (f) {\n      return resolve(f.type, m.id)\n    })\n\n    const encodingLength = compileEncodingLength(m, enc, oneofs)\n    const encode = compileEncode(m, resolve, enc, oneofs, encodingLength)\n    const decode = compileDecode(m, resolve, enc)\n\n    // end of compilation - return all the things\n\n    encode.bytes = decode.bytes = 0\n\n    exports.buffer = true\n    exports.encode = encode\n    exports.decode = decode\n    exports.encodingLength = encodingLength\n\n    return exports\n  }\n\n  const resolve = function (name, from, compile) {\n    if (extraEncodings && extraEncodings[name]) return extraEncodings[name]\n    if (encodings[name]) return encodings[name]\n\n    const m = (from ? from + '.' + name : name).split('.')\n      .map(function (part, i, list) {\n        return list.slice(0, i).concat(name).join('.')\n      })\n      .reverse()\n      .reduce(function (result, id) {\n        return result || messages[id] || enums[id]\n      }, null)\n\n    if (compile === false) return m\n    if (!m) throw new Error('Could not resolve ' + name)\n\n    if (m.values) return compileEnum(m)\n    const res = cache[m.id] || compileMessage(m, cache[m.id] = {})\n    return res\n  }\n\n  return (schema.enums || []).concat((schema.messages || []).map(function (message) {\n    return resolve(message.id)\n  }))\n}\n"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,UAAD,CAA7B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,UAAD,CAA7B;;AACA,MAAMG,qBAAqB,GAAGH,OAAO,CAAC,mBAAD,CAArC;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMK,OAAO,GAAG,UAAUC,MAAV,EAAkB;EAChC,IAAI,CAACA,MAAL,EAAa,OAAO,IAAP;EACb,MAAMC,MAAM,GAAG,EAAf;EACAC,MAAM,CAACC,IAAP,CAAYH,MAAZ,EAAoBI,OAApB,CAA4B,UAAUC,CAAV,EAAa;IACvCJ,MAAM,CAACI,CAAD,CAAN,GAAYL,MAAM,CAACK,CAAD,CAAN,CAAUC,KAAtB;EACD,CAFD;EAGA,OAAOL,MAAP;AACD,CAPD;;AASAM,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkBC,cAAlB,EAAkC;EACjD,MAAMC,QAAQ,GAAG,EAAjB;EACA,MAAMC,KAAK,GAAG,EAAd;EACA,MAAMC,KAAK,GAAG,EAAd;;EAEA,MAAMC,KAAK,GAAG,UAAUL,MAAV,EAAkBM,MAAlB,EAA0B;IACtC,IAAIN,MAAM,CAACG,KAAX,EAAkB;MAChBH,MAAM,CAACG,KAAP,CAAaR,OAAb,CAAqB,UAAUY,CAAV,EAAa;QAChCA,CAAC,CAACC,EAAF,GAAOF,MAAM,IAAIA,MAAM,GAAG,GAAH,GAAS,EAAnB,CAAN,GAA+BC,CAAC,CAACE,IAAxC;QACAN,KAAK,CAACI,CAAC,CAACC,EAAH,CAAL,GAAcD,CAAd;QACAF,KAAK,CAACE,CAAD,EAAIA,CAAC,CAACC,EAAN,CAAL;MACD,CAJD;IAKD;;IACD,IAAIR,MAAM,CAACE,QAAX,EAAqB;MACnBF,MAAM,CAACE,QAAP,CAAgBP,OAAhB,CAAwB,UAAUe,CAAV,EAAa;QACnCA,CAAC,CAACF,EAAF,GAAOF,MAAM,IAAIA,MAAM,GAAG,GAAH,GAAS,EAAnB,CAAN,GAA+BI,CAAC,CAACD,IAAxC;QACAP,QAAQ,CAACQ,CAAC,CAACF,EAAH,CAAR,GAAiBE,CAAjB;QACAA,CAAC,CAACC,MAAF,CAAShB,OAAT,CAAiB,UAAUiB,CAAV,EAAa;UAC5B,IAAI,CAACA,CAAC,CAACC,GAAP,EAAY;UAEZ,MAAMJ,IAAI,GAAG,SAASG,CAAC,CAACC,GAAF,CAAMC,IAAf,GAAsB,GAAtB,GAA4BF,CAAC,CAACC,GAAF,CAAME,EAA/C;UACA,MAAMF,GAAG,GAAG;YACVJ,IAAI,EAAEA,IADI;YAEVN,KAAK,EAAE,EAFG;YAGVD,QAAQ,EAAE,EAHA;YAIVS,MAAM,EAAE,CAAC;cACPF,IAAI,EAAE,KADC;cAEPO,IAAI,EAAEJ,CAAC,CAACC,GAAF,CAAMC,IAFL;cAGPG,GAAG,EAAE,CAHE;cAIPC,QAAQ,EAAE,KAJH;cAKPC,QAAQ,EAAE;YALH,CAAD,EAML;cACDV,IAAI,EAAE,OADL;cAEDO,IAAI,EAAEJ,CAAC,CAACC,GAAF,CAAME,EAFX;cAGDE,GAAG,EAAE,CAHJ;cAIDC,QAAQ,EAAE,KAJT;cAKDC,QAAQ,EAAE;YALT,CANK,CAJE;YAiBVC,UAAU,EAAE,IAjBF;YAkBVZ,EAAE,EAAEF,MAAM,IAAIA,MAAM,GAAG,GAAH,GAAS,EAAnB,CAAN,GAA+BG;UAlBzB,CAAZ;;UAqBA,IAAI,CAACP,QAAQ,CAACW,GAAG,CAACL,EAAL,CAAb,EAAuB;YACrBN,QAAQ,CAACW,GAAG,CAACL,EAAL,CAAR,GAAmBK,GAAnB;YACAb,MAAM,CAACE,QAAP,CAAgBmB,IAAhB,CAAqBR,GAArB;UACD;;UACDD,CAAC,CAACI,IAAF,GAASP,IAAT;UACAG,CAAC,CAACM,QAAF,GAAa,IAAb;QACD,CA/BD;QAgCAb,KAAK,CAACK,CAAD,EAAIA,CAAC,CAACF,EAAN,CAAL;MACD,CApCD;IAqCD;EACF,CA/CD;;EAiDAH,KAAK,CAACL,MAAD,EAAS,EAAT,CAAL;;EAEA,MAAMsB,WAAW,GAAG,UAAUf,CAAV,EAAa;IAC/B,MAAMhB,MAAM,GAAGE,MAAM,CAACC,IAAP,CAAYa,CAAC,CAAChB,MAAF,IAAY,EAAxB,EAA4BsB,GAA5B,CAAgC,UAAUjB,CAAV,EAAa;MAC1D,OAAO2B,QAAQ,CAAChB,CAAC,CAAChB,MAAF,CAASK,CAAT,EAAYC,KAAb,EAAoB,EAApB,CAAf;IACD,CAFc,CAAf;;IAIA,MAAM2B,MAAM,GAAG,SAASC,UAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,MAArC,EAA6C;MAC1D,IAAI,CAACtC,MAAM,CAACuC,MAAR,IAAkBvC,MAAM,CAACwC,OAAP,CAAeL,GAAf,MAAwB,CAAC,CAA/C,EAAkD;QAChD,MAAM,IAAIM,KAAJ,CAAU,yBAAyBN,GAAnC,CAAN;MACD;;MACDrC,MAAM,CAACmC,MAAP,CAAcE,GAAd,EAAmBC,GAAnB,EAAwBE,MAAxB;MACAJ,UAAU,CAACQ,KAAX,GAAmB5C,MAAM,CAACmC,MAAP,CAAcS,KAAjC;MACA,OAAON,GAAP;IACD,CAPD;;IASA,MAAMO,MAAM,GAAG,SAASC,UAAT,CAAqBR,GAArB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwC;MACrD,IAAIH,GAAG,GAAGrC,MAAM,CAAC6C,MAAP,CAAcP,GAAd,EAAmBE,MAAnB,CAAV;;MACA,IAAI,CAACtC,MAAM,CAACuC,MAAR,IAAkBvC,MAAM,CAACwC,OAAP,CAAeL,GAAf,MAAwB,CAAC,CAA/C,EAAkD;QAChD,MAAM,IAAIM,KAAJ,CAAU,yBAAyBN,GAAnC,CAAN;MACD;;MACDS,UAAU,CAACF,KAAX,GAAmB5C,MAAM,CAAC6C,MAAP,CAAcD,KAAjC;MACA,OAAOP,GAAP;IACD,CAPD;;IASA,OAAO1C,SAAS,CAACoD,IAAV,CAAe,CAAf,EAAkBZ,MAAlB,EAA0BU,MAA1B,EAAkC7C,MAAM,CAACgD,cAAzC,CAAP;EACD,CAxBD;;EA0BA,MAAMC,cAAc,GAAG,UAAU5B,CAAV,EAAaX,OAAb,EAAsB;IAC3CW,CAAC,CAACR,QAAF,CAAWP,OAAX,CAAmB,UAAU4C,MAAV,EAAkB;MACnCxC,OAAO,CAACwC,MAAM,CAAC9B,IAAR,CAAP,GAAuB+B,OAAO,CAACD,MAAM,CAAC9B,IAAR,EAAcC,CAAC,CAACF,EAAhB,CAA9B;IACD,CAFD;IAIAE,CAAC,CAACP,KAAF,CAAQR,OAAR,CAAgB,UAAU+B,GAAV,EAAe;MAC7B3B,OAAO,CAAC2B,GAAG,CAACjB,IAAL,CAAP,GAAoBnB,OAAO,CAACoC,GAAG,CAACnC,MAAL,CAA3B;IACD,CAFD;IAIAQ,OAAO,CAACiB,IAAR,GAAe,CAAf;IACAjB,OAAO,CAAC0C,OAAR,GAAkB,IAAlB;IACA1C,OAAO,CAACU,IAAR,GAAeC,CAAC,CAACD,IAAjB;IAEA,MAAMiC,MAAM,GAAG,EAAf;IAEAhC,CAAC,CAACC,MAAF,CAAShB,OAAT,CAAiB,UAAUiB,CAAV,EAAa;MAC5B,IAAI,CAACA,CAAC,CAAC+B,KAAP,EAAc;MACd,IAAI,CAACD,MAAM,CAAC9B,CAAC,CAAC+B,KAAH,CAAX,EAAsBD,MAAM,CAAC9B,CAAC,CAAC+B,KAAH,CAAN,GAAkB,EAAlB;MACtBD,MAAM,CAAC9B,CAAC,CAAC+B,KAAH,CAAN,CAAgBtB,IAAhB,CAAqBT,CAAC,CAACH,IAAvB;IACD,CAJD;IAMA,MAAMmC,GAAG,GAAGlC,CAAC,CAACC,MAAF,CAASE,GAAT,CAAa,UAAUD,CAAV,EAAa;MACpC,OAAO4B,OAAO,CAAC5B,CAAC,CAACI,IAAH,EAASN,CAAC,CAACF,EAAX,CAAd;IACD,CAFW,CAAZ;IAIA,MAAM6B,cAAc,GAAGjD,qBAAqB,CAACsB,CAAD,EAAIkC,GAAJ,EAASF,MAAT,CAA5C;IACA,MAAMlB,MAAM,GAAGrC,aAAa,CAACuB,CAAD,EAAI8B,OAAJ,EAAaI,GAAb,EAAkBF,MAAlB,EAA0BL,cAA1B,CAA5B;IACA,MAAMH,MAAM,GAAGhD,aAAa,CAACwB,CAAD,EAAI8B,OAAJ,EAAaI,GAAb,CAA5B,CA3B2C,CA6B3C;;IAEApB,MAAM,CAACS,KAAP,GAAeC,MAAM,CAACD,KAAP,GAAe,CAA9B;IAEAlC,OAAO,CAAC8C,MAAR,GAAiB,IAAjB;IACA9C,OAAO,CAACyB,MAAR,GAAiBA,MAAjB;IACAzB,OAAO,CAACmC,MAAR,GAAiBA,MAAjB;IACAnC,OAAO,CAACsC,cAAR,GAAyBA,cAAzB;IAEA,OAAOtC,OAAP;EACD,CAvCD;;EAyCA,MAAMyC,OAAO,GAAG,UAAU/B,IAAV,EAAgBK,IAAhB,EAAsBgC,OAAtB,EAA+B;IAC7C,IAAI7C,cAAc,IAAIA,cAAc,CAACQ,IAAD,CAApC,EAA4C,OAAOR,cAAc,CAACQ,IAAD,CAArB;IAC5C,IAAIzB,SAAS,CAACyB,IAAD,CAAb,EAAqB,OAAOzB,SAAS,CAACyB,IAAD,CAAhB;IAErB,MAAMC,CAAC,GAAG,CAACI,IAAI,GAAGA,IAAI,GAAG,GAAP,GAAaL,IAAhB,GAAuBA,IAA5B,EAAkCsC,KAAlC,CAAwC,GAAxC,EACPlC,GADO,CACH,UAAUmC,IAAV,EAAgBC,CAAhB,EAAmBC,IAAnB,EAAyB;MAC5B,OAAOA,IAAI,CAACC,KAAL,CAAW,CAAX,EAAcF,CAAd,EAAiBG,MAAjB,CAAwB3C,IAAxB,EAA8B4C,IAA9B,CAAmC,GAAnC,CAAP;IACD,CAHO,EAIPC,OAJO,GAKPC,MALO,CAKA,UAAU/D,MAAV,EAAkBgB,EAAlB,EAAsB;MAC5B,OAAOhB,MAAM,IAAIU,QAAQ,CAACM,EAAD,CAAlB,IAA0BL,KAAK,CAACK,EAAD,CAAtC;IACD,CAPO,EAOL,IAPK,CAAV;IASA,IAAIsC,OAAO,KAAK,KAAhB,EAAuB,OAAOpC,CAAP;IACvB,IAAI,CAACA,CAAL,EAAQ,MAAM,IAAIsB,KAAJ,CAAU,uBAAuBvB,IAAjC,CAAN;IAER,IAAIC,CAAC,CAACnB,MAAN,EAAc,OAAO+B,WAAW,CAACZ,CAAD,CAAlB;IACd,MAAM8C,GAAG,GAAGpD,KAAK,CAACM,CAAC,CAACF,EAAH,CAAL,IAAe8B,cAAc,CAAC5B,CAAD,EAAIN,KAAK,CAACM,CAAC,CAACF,EAAH,CAAL,GAAc,EAAlB,CAAzC;IACA,OAAOgD,GAAP;EACD,CAnBD;;EAqBA,OAAO,CAACxD,MAAM,CAACG,KAAP,IAAgB,EAAjB,EAAqBiD,MAArB,CAA4B,CAACpD,MAAM,CAACE,QAAP,IAAmB,EAApB,EAAwBW,GAAxB,CAA4B,UAAU4B,OAAV,EAAmB;IAChF,OAAOD,OAAO,CAACC,OAAO,CAACjC,EAAT,CAAd;EACD,CAFkC,CAA5B,CAAP;AAGD,CAnJD"},"metadata":{},"sourceType":"script"}