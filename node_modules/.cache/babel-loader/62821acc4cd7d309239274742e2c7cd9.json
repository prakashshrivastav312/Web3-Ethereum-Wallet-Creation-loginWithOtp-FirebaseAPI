{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkStake = void 0;\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n/**\n * An object holding Network stake parameters.\n */\n\n\nclass NetworkStake {\n  constructor() {\n    this.TotalValidators = 0;\n    this.ActiveValidators = 0;\n    this.QueueSize = 0;\n    this.TotalStaked = new bignumber_js_1.default(0);\n  }\n  /**\n   * Gets the default configuration object (think of the Singleton pattern).\n   */\n\n\n  static getDefault() {\n    if (!NetworkStake.default) {\n      NetworkStake.default = new NetworkStake();\n    }\n\n    return NetworkStake.default;\n  }\n  /**\n   * Synchronizes a configuration object by querying the Network, through a {@link IProvider}.\n   * @param provider The provider to use\n   */\n\n\n  sync(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let fresh = yield provider.getNetworkStake();\n      Object.assign(this, fresh);\n    });\n  }\n  /**\n   * Constructs a configuration object from a HTTP response (as returned by the provider).\n   */\n\n\n  static fromHttpResponse(payload) {\n    let networkStake = new NetworkStake();\n    networkStake.TotalValidators = Number(payload[\"totalValidators\"]);\n    networkStake.ActiveValidators = Number(payload[\"activeValidators\"]);\n    networkStake.QueueSize = Number(payload[\"queueSize\"]);\n    networkStake.TotalStaked = new bignumber_js_1.default(payload[\"totalStaked\"]);\n    return networkStake;\n  }\n\n}\n\nexports.NetworkStake = NetworkStake;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;;;;;AAGA,MAAaA,YAAb,CAAyB;EAqBvBC;IACE,KAAKC,eAAL,GAAuB,CAAvB;IACA,KAAKC,gBAAL,GAAwB,CAAxB;IACA,KAAKC,SAAL,GAAiB,CAAjB;IACA,KAAKC,WAAL,GAAmB,IAAIC,sBAAJ,CAAc,CAAd,CAAnB;EACD;EAED;;;;;EAGiB,OAAVC,UAAU;IACf,IAAI,CAACP,YAAY,CAACQ,OAAlB,EAA2B;MACzBR,YAAY,CAACQ,OAAb,GAAuB,IAAIR,YAAJ,EAAvB;IACD;;IAED,OAAOA,YAAY,CAACQ,OAApB;EACD;EAED;;;;;;EAIMC,IAAI,CAACC,QAAD,EAAuB;;MAC/B,IAAIC,KAAK,GAAiB,MAAMD,QAAQ,CAACE,eAAT,EAAhC;MACAC,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBH,KAApB;IACD;EAAA;EAED;;;;;EAGuB,OAAhBI,gBAAgB,CAACC,OAAD,EAAa;IAClC,IAAIC,YAAY,GAAG,IAAIjB,YAAJ,EAAnB;IAEAiB,YAAY,CAACf,eAAb,GAA+BgB,MAAM,CAACF,OAAO,CAAC,iBAAD,CAAR,CAArC;IACAC,YAAY,CAACd,gBAAb,GAAgCe,MAAM,CAACF,OAAO,CAAC,kBAAD,CAAR,CAAtC;IACAC,YAAY,CAACb,SAAb,GAAyBc,MAAM,CAACF,OAAO,CAAC,WAAD,CAAR,CAA/B;IACAC,YAAY,CAACZ,WAAb,GAA2B,IAAIC,sBAAJ,CAAcU,OAAO,CAAC,aAAD,CAArB,CAA3B;IAEA,OAAOC,YAAP;EACD;;AA5DsB;;AAAzBE","names":["NetworkStake","constructor","TotalValidators","ActiveValidators","QueueSize","TotalStaked","bignumber_js_1","getDefault","default","sync","provider","fresh","getNetworkStake","Object","assign","fromHttpResponse","payload","networkStake","Number","exports"],"sourceRoot":"","sources":["../src/networkStake.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}