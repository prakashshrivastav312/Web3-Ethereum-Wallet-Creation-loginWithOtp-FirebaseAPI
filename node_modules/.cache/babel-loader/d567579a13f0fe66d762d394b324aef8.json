{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils = __importStar(require(\"./utils\"));\n\nconst toRippledAmount = utils.common.toRippledAmount;\n\nconst common_1 = require(\"../common\");\n\nfunction createCheckCreateTransaction(account, check) {\n  const txJSON = {\n    Account: account,\n    TransactionType: 'CheckCreate',\n    Destination: check.destination,\n    SendMax: toRippledAmount(check.sendMax)\n  };\n\n  if (check.destinationTag != null) {\n    txJSON.DestinationTag = check.destinationTag;\n  }\n\n  if (check.expiration != null) {\n    txJSON.Expiration = common_1.iso8601ToRippleTime(check.expiration);\n  }\n\n  if (check.invoiceID != null) {\n    txJSON.InvoiceID = check.invoiceID;\n  }\n\n  return txJSON;\n}\n\nfunction prepareCheckCreate(address, checkCreate) {\n  let instructions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  try {\n    common_1.validate.prepareCheckCreate({\n      address,\n      checkCreate,\n      instructions\n    });\n    const txJSON = createCheckCreateTransaction(address, checkCreate);\n    return utils.prepareTransaction(txJSON, this, instructions);\n  } catch (e) {\n    return Promise.reject(e);\n  }\n}\n\nexports.default = prepareCheckCreate;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA,MAAMA,eAAe,GAAGC,KAAK,CAACC,MAAN,CAAaF,eAArC;;AACA;;AAaA,SAASG,4BAAT,CACEC,OADF,EAEEC,KAFF,EAE8B;EAE5B,MAAMC,MAAM,GAAQ;IAClBC,OAAO,EAAEH,OADS;IAElBI,eAAe,EAAE,aAFC;IAGlBC,WAAW,EAAEJ,KAAK,CAACK,WAHD;IAIlBC,OAAO,EAAEX,eAAe,CAACK,KAAK,CAACO,OAAP;EAJN,CAApB;;EAOA,IAAIP,KAAK,CAACQ,cAAN,IAAwB,IAA5B,EAAkC;IAChCP,MAAM,CAACQ,cAAP,GAAwBT,KAAK,CAACQ,cAA9B;EACD;;EAED,IAAIR,KAAK,CAACU,UAAN,IAAoB,IAAxB,EAA8B;IAC5BT,MAAM,CAACU,UAAP,GAAoBC,6BAAoBZ,KAAK,CAACU,UAA1B,CAApB;EACD;;EAED,IAAIV,KAAK,CAACa,SAAN,IAAmB,IAAvB,EAA6B;IAC3BZ,MAAM,CAACa,SAAP,GAAmBd,KAAK,CAACa,SAAzB;EACD;;EAED,OAAOZ,MAAP;AACD;;AAED,SAASc,kBAAT,CAEEC,OAFF,EAGEC,WAHF,EAIiC;EAAA,IAA/BC,YAA+B,uEAAF,EAAE;;EAE/B,IAAI;IACFN,kBAASG,kBAAT,CAA4B;MAACC,OAAD;MAAUC,WAAV;MAAuBC;IAAvB,CAA5B;IACA,MAAMjB,MAAM,GAAGH,4BAA4B,CAACkB,OAAD,EAAUC,WAAV,CAA3C;IACA,OAAOrB,KAAK,CAACuB,kBAAN,CAAyBlB,MAAzB,EAAiC,IAAjC,EAAuCiB,YAAvC,CAAP;EACD,CAJD,CAIE,OAAOE,CAAP,EAAU;IACV,OAAOC,OAAO,CAACC,MAAR,CAAeF,CAAf,CAAP;EACD;AACF;;AAEDG,kBAAeR,kBAAf","names":["toRippledAmount","utils","common","createCheckCreateTransaction","account","check","txJSON","Account","TransactionType","Destination","destination","SendMax","sendMax","destinationTag","DestinationTag","expiration","Expiration","common_1","invoiceID","InvoiceID","prepareCheckCreate","address","checkCreate","instructions","prepareTransaction","e","Promise","reject","exports"],"sourceRoot":"","sources":["../../../src/transaction/check-create.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}