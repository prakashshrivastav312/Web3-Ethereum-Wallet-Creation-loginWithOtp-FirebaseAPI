{"ast":null,"code":"import { ValidationError } from './ValidationError';\nimport { ValidationTypes } from './ValidationTypes';\nimport { ValidationUtils } from './ValidationUtils';\nimport { isPromise, convertToArray } from '../utils';\nimport { getMetadataStorage } from '../metadata/MetadataStorage';\n/**\n * Executes validation over given object.\n */\n\nvar ValidationExecutor =\n/** @class */\nfunction () {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n  function ValidationExecutor(validator, validatorOptions) {\n    this.validator = validator;\n    this.validatorOptions = validatorOptions; // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n\n    this.awaitingPromises = [];\n    this.ignoreAsyncValidations = false; // -------------------------------------------------------------------------\n    // Private Properties\n    // -------------------------------------------------------------------------\n\n    this.metadataStorage = getMetadataStorage();\n  } // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n\n  ValidationExecutor.prototype.execute = function (object, targetSchema, validationErrors) {\n    var _this = this;\n    /**\n     * If there is no metadata registered it means possibly the dependencies are not flatterned and\n     * more than one instance is used.\n     *\n     * TODO: This needs proper handling, forcing to use the same container or some other proper solution.\n     */\n\n\n    if (!this.metadataStorage.hasValidationMetaData) {\n      console.warn(\"No metadata found. There is more than once class-validator version installed probably. You need to flatten your dependencies.\");\n    }\n\n    var groups = this.validatorOptions ? this.validatorOptions.groups : undefined;\n    var strictGroups = this.validatorOptions && this.validatorOptions.strictGroups || false;\n    var always = this.validatorOptions && this.validatorOptions.always || false;\n    var targetMetadatas = this.metadataStorage.getTargetValidationMetadatas(object.constructor, targetSchema, always, strictGroups, groups);\n    var groupedMetadatas = this.metadataStorage.groupByPropertyName(targetMetadatas);\n\n    if (this.validatorOptions && this.validatorOptions.forbidUnknownValues && !targetMetadatas.length) {\n      var validationError = new ValidationError();\n      if (!this.validatorOptions || !this.validatorOptions.validationError || this.validatorOptions.validationError.target === undefined || this.validatorOptions.validationError.target === true) validationError.target = object;\n      validationError.value = undefined;\n      validationError.property = undefined;\n      validationError.children = [];\n      validationError.constraints = {\n        unknownValue: 'an unknown value was passed to the validate function'\n      };\n      validationErrors.push(validationError);\n      return;\n    }\n\n    if (this.validatorOptions && this.validatorOptions.whitelist) this.whitelist(object, groupedMetadatas, validationErrors); // General validation\n\n    Object.keys(groupedMetadatas).forEach(function (propertyName) {\n      var value = object[propertyName];\n      var definedMetadatas = groupedMetadatas[propertyName].filter(function (metadata) {\n        return metadata.type === ValidationTypes.IS_DEFINED;\n      });\n      var metadatas = groupedMetadatas[propertyName].filter(function (metadata) {\n        return metadata.type !== ValidationTypes.IS_DEFINED && metadata.type !== ValidationTypes.WHITELIST;\n      });\n\n      if (value instanceof Promise && metadatas.find(function (metadata) {\n        return metadata.type === ValidationTypes.PROMISE_VALIDATION;\n      })) {\n        _this.awaitingPromises.push(value.then(function (resolvedValue) {\n          _this.performValidations(object, resolvedValue, propertyName, definedMetadatas, metadatas, validationErrors);\n        }));\n      } else {\n        _this.performValidations(object, value, propertyName, definedMetadatas, metadatas, validationErrors);\n      }\n    });\n  };\n\n  ValidationExecutor.prototype.whitelist = function (object, groupedMetadatas, validationErrors) {\n    var _this = this;\n\n    var notAllowedProperties = [];\n    Object.keys(object).forEach(function (propertyName) {\n      // does this property have no metadata?\n      if (!groupedMetadatas[propertyName] || groupedMetadatas[propertyName].length === 0) notAllowedProperties.push(propertyName);\n    });\n\n    if (notAllowedProperties.length > 0) {\n      if (this.validatorOptions && this.validatorOptions.forbidNonWhitelisted) {\n        // throw errors\n        notAllowedProperties.forEach(function (property) {\n          var _a;\n\n          var validationError = _this.generateValidationError(object, object[property], property);\n\n          validationError.constraints = (_a = {}, _a[ValidationTypes.WHITELIST] = \"property \" + property + \" should not exist\", _a);\n          validationError.children = undefined;\n          validationErrors.push(validationError);\n        });\n      } else {\n        // strip non allowed properties\n        notAllowedProperties.forEach(function (property) {\n          return delete object[property];\n        });\n      }\n    }\n  };\n\n  ValidationExecutor.prototype.stripEmptyErrors = function (errors) {\n    var _this = this;\n\n    return errors.filter(function (error) {\n      if (error.children) {\n        error.children = _this.stripEmptyErrors(error.children);\n      }\n\n      if (Object.keys(error.constraints).length === 0) {\n        if (error.children.length === 0) {\n          return false;\n        } else {\n          delete error.constraints;\n        }\n      }\n\n      return true;\n    });\n  }; // -------------------------------------------------------------------------\n  // Private Methods\n  // -------------------------------------------------------------------------\n\n\n  ValidationExecutor.prototype.performValidations = function (object, value, propertyName, definedMetadatas, metadatas, validationErrors) {\n    var customValidationMetadatas = metadatas.filter(function (metadata) {\n      return metadata.type === ValidationTypes.CUSTOM_VALIDATION;\n    });\n    var nestedValidationMetadatas = metadatas.filter(function (metadata) {\n      return metadata.type === ValidationTypes.NESTED_VALIDATION;\n    });\n    var conditionalValidationMetadatas = metadatas.filter(function (metadata) {\n      return metadata.type === ValidationTypes.CONDITIONAL_VALIDATION;\n    });\n    var validationError = this.generateValidationError(object, value, propertyName);\n    validationErrors.push(validationError);\n    var canValidate = this.conditionalValidations(object, value, conditionalValidationMetadatas);\n\n    if (!canValidate) {\n      return;\n    } // handle IS_DEFINED validation type the special way - it should work no matter skipUndefinedProperties/skipMissingProperties is set or not\n\n\n    this.customValidations(object, value, definedMetadatas, validationError);\n    this.mapContexts(object, value, definedMetadatas, validationError);\n\n    if (value === undefined && this.validatorOptions && this.validatorOptions.skipUndefinedProperties === true) {\n      return;\n    }\n\n    if (value === null && this.validatorOptions && this.validatorOptions.skipNullProperties === true) {\n      return;\n    }\n\n    if ((value === null || value === undefined) && this.validatorOptions && this.validatorOptions.skipMissingProperties === true) {\n      return;\n    }\n\n    this.customValidations(object, value, customValidationMetadatas, validationError);\n    this.nestedValidations(value, nestedValidationMetadatas, validationError.children);\n    this.mapContexts(object, value, metadatas, validationError);\n    this.mapContexts(object, value, customValidationMetadatas, validationError);\n  };\n\n  ValidationExecutor.prototype.generateValidationError = function (object, value, propertyName) {\n    var validationError = new ValidationError();\n    if (!this.validatorOptions || !this.validatorOptions.validationError || this.validatorOptions.validationError.target === undefined || this.validatorOptions.validationError.target === true) validationError.target = object;\n    if (!this.validatorOptions || !this.validatorOptions.validationError || this.validatorOptions.validationError.value === undefined || this.validatorOptions.validationError.value === true) validationError.value = value;\n    validationError.property = propertyName;\n    validationError.children = [];\n    validationError.constraints = {};\n    return validationError;\n  };\n\n  ValidationExecutor.prototype.conditionalValidations = function (object, value, metadatas) {\n    return metadatas.map(function (metadata) {\n      return metadata.constraints[0](object, value);\n    }).reduce(function (resultA, resultB) {\n      return resultA && resultB;\n    }, true);\n  };\n\n  ValidationExecutor.prototype.customValidations = function (object, value, metadatas, error) {\n    var _this = this;\n\n    metadatas.forEach(function (metadata) {\n      _this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls).forEach(function (customConstraintMetadata) {\n        if (customConstraintMetadata.async && _this.ignoreAsyncValidations) return;\n        if (_this.validatorOptions && _this.validatorOptions.stopAtFirstError && Object.keys(error.constraints || {}).length > 0) return;\n        var validationArguments = {\n          targetName: object.constructor ? object.constructor.name : undefined,\n          property: metadata.propertyName,\n          object: object,\n          value: value,\n          constraints: metadata.constraints\n        };\n\n        if (!metadata.each || !(value instanceof Array || value instanceof Set || value instanceof Map)) {\n          var validatedValue = customConstraintMetadata.instance.validate(value, validationArguments);\n\n          if (isPromise(validatedValue)) {\n            var promise = validatedValue.then(function (isValid) {\n              if (!isValid) {\n                var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata),\n                    type = _a[0],\n                    message = _a[1];\n\n                error.constraints[type] = message;\n\n                if (metadata.context) {\n                  if (!error.contexts) {\n                    error.contexts = {};\n                  }\n\n                  error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n                }\n              }\n            });\n\n            _this.awaitingPromises.push(promise);\n          } else {\n            if (!validatedValue) {\n              var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata),\n                  type = _a[0],\n                  message = _a[1];\n\n              error.constraints[type] = message;\n            }\n          }\n\n          return;\n        } // convert set and map into array\n\n\n        var arrayValue = convertToArray(value); // Validation needs to be applied to each array item\n\n        var validatedSubValues = arrayValue.map(function (subValue) {\n          return customConstraintMetadata.instance.validate(subValue, validationArguments);\n        });\n        var validationIsAsync = validatedSubValues.some(function (validatedSubValue) {\n          return isPromise(validatedSubValue);\n        });\n\n        if (validationIsAsync) {\n          // Wrap plain values (if any) in promises, so that all are async\n          var asyncValidatedSubValues = validatedSubValues.map(function (validatedSubValue) {\n            return isPromise(validatedSubValue) ? validatedSubValue : Promise.resolve(validatedSubValue);\n          });\n          var asyncValidationIsFinishedPromise = Promise.all(asyncValidatedSubValues).then(function (flatValidatedValues) {\n            var validationResult = flatValidatedValues.every(function (isValid) {\n              return isValid;\n            });\n\n            if (!validationResult) {\n              var _a = _this.createValidationError(object, value, metadata, customConstraintMetadata),\n                  type = _a[0],\n                  message = _a[1];\n\n              error.constraints[type] = message;\n\n              if (metadata.context) {\n                if (!error.contexts) {\n                  error.contexts = {};\n                }\n\n                error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n              }\n            }\n          });\n\n          _this.awaitingPromises.push(asyncValidationIsFinishedPromise);\n\n          return;\n        }\n\n        var validationResult = validatedSubValues.every(function (isValid) {\n          return isValid;\n        });\n\n        if (!validationResult) {\n          var _b = _this.createValidationError(object, value, metadata, customConstraintMetadata),\n              type = _b[0],\n              message = _b[1];\n\n          error.constraints[type] = message;\n        }\n      });\n    });\n  };\n\n  ValidationExecutor.prototype.nestedValidations = function (value, metadatas, errors) {\n    var _this = this;\n\n    if (value === void 0) {\n      return;\n    }\n\n    metadatas.forEach(function (metadata) {\n      var _a;\n\n      if (metadata.type !== ValidationTypes.NESTED_VALIDATION && metadata.type !== ValidationTypes.PROMISE_VALIDATION) {\n        return;\n      }\n\n      if (value instanceof Array || value instanceof Set || value instanceof Map) {\n        // Treats Set as an array - as index of Set value is value itself and it is common case to have Object as value\n        var arrayLikeValue = value instanceof Set ? Array.from(value) : value;\n        arrayLikeValue.forEach(function (subValue, index) {\n          _this.performValidations(value, subValue, index.toString(), [], metadatas, errors);\n        });\n      } else if (value instanceof Object) {\n        var targetSchema = typeof metadata.target === 'string' ? metadata.target : metadata.target.name;\n\n        _this.execute(value, targetSchema, errors);\n      } else {\n        var error = new ValidationError();\n        error.value = value;\n        error.property = metadata.propertyName;\n        error.target = metadata.target;\n\n        var _b = _this.createValidationError(metadata.target, value, metadata),\n            type = _b[0],\n            message = _b[1];\n\n        error.constraints = (_a = {}, _a[type] = message, _a);\n        errors.push(error);\n      }\n    });\n  };\n\n  ValidationExecutor.prototype.mapContexts = function (object, value, metadatas, error) {\n    var _this = this;\n\n    return metadatas.forEach(function (metadata) {\n      if (metadata.context) {\n        var customConstraint = void 0;\n\n        if (metadata.type === ValidationTypes.CUSTOM_VALIDATION) {\n          var customConstraints = _this.metadataStorage.getTargetValidatorConstraints(metadata.constraintCls);\n\n          customConstraint = customConstraints[0];\n        }\n\n        var type = _this.getConstraintType(metadata, customConstraint);\n\n        if (error.constraints[type]) {\n          if (!error.contexts) {\n            error.contexts = {};\n          }\n\n          error.contexts[type] = Object.assign(error.contexts[type] || {}, metadata.context);\n        }\n      }\n    });\n  };\n\n  ValidationExecutor.prototype.createValidationError = function (object, value, metadata, customValidatorMetadata) {\n    var targetName = object.constructor ? object.constructor.name : undefined;\n    var type = this.getConstraintType(metadata, customValidatorMetadata);\n    var validationArguments = {\n      targetName: targetName,\n      property: metadata.propertyName,\n      object: object,\n      value: value,\n      constraints: metadata.constraints\n    };\n    var message = metadata.message || '';\n\n    if (!metadata.message && (!this.validatorOptions || this.validatorOptions && !this.validatorOptions.dismissDefaultMessages)) {\n      if (customValidatorMetadata && customValidatorMetadata.instance.defaultMessage instanceof Function) {\n        message = customValidatorMetadata.instance.defaultMessage(validationArguments);\n      }\n    }\n\n    var messageString = ValidationUtils.replaceMessageSpecialTokens(message, validationArguments);\n    return [type, messageString];\n  };\n\n  ValidationExecutor.prototype.getConstraintType = function (metadata, customValidatorMetadata) {\n    var type = customValidatorMetadata && customValidatorMetadata.name ? customValidatorMetadata.name : metadata.type;\n    return type;\n  };\n\n  return ValidationExecutor;\n}();\n\nexport { ValidationExecutor };","map":{"version":3,"mappings":"AACA,SAASA,eAAT,QAAgC,mBAAhC;AAGA,SAASC,eAAT,QAAgC,mBAAhC;AAGA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,UAA1C;AACA,SAASC,kBAAT,QAAmC,6BAAnC;AAEA;;;;AAGA;AAAA;AAAA;EAcE;EACA;EACA;EAEA,4BAAoBC,SAApB,EAAkDC,gBAAlD,EAAqF;IAAjE;IAA8B,yCAAmC,CAjBrF;IACA;IACA;;IAEA,wBAAmC,EAAnC;IACA,8BAAkC,KAAlC,CAYqF,CAVrF;IACA;IACA;;IAEQ,uBAAkBF,kBAAkB,EAApC;EAMiF,CAlB3F,CAoBE;EACA;EACA;;;EAEAG,iDAAQC,MAAR,EAAwBC,YAAxB,EAA8CC,gBAA9C,EAAiF;IAAjF;IACE;;;;;;;;IAMA,IAAI,CAAC,KAAKC,eAAL,CAAqBC,qBAA1B,EAAiD;MAC/CC,OAAO,CAACC,IAAR,CACE,+HADF;IAGD;;IAED,IAAMC,MAAM,GAAG,KAAKT,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBS,MAA9C,GAAuDC,SAAtE;IACA,IAAMC,YAAY,GAAI,KAAKX,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBW,YAAhD,IAAiE,KAAtF;IACA,IAAMC,MAAM,GAAI,KAAKZ,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBY,MAAhD,IAA2D,KAA1E;IAEA,IAAMC,eAAe,GAAG,KAAKR,eAAL,CAAqBS,4BAArB,CACtBZ,MAAM,CAACa,WADe,EAEtBZ,YAFsB,EAGtBS,MAHsB,EAItBD,YAJsB,EAKtBF,MALsB,CAAxB;IAOA,IAAMO,gBAAgB,GAAG,KAAKX,eAAL,CAAqBY,mBAArB,CAAyCJ,eAAzC,CAAzB;;IAEA,IAAI,KAAKb,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBkB,mBAA/C,IAAsE,CAACL,eAAe,CAACM,MAA3F,EAAmG;MACjG,IAAMC,eAAe,GAAG,IAAI3B,eAAJ,EAAxB;MAEA,IACE,CAAC,KAAKO,gBAAN,IACA,CAAC,KAAKA,gBAAL,CAAsBoB,eADvB,IAEA,KAAKpB,gBAAL,CAAsBoB,eAAtB,CAAsCC,MAAtC,KAAiDX,SAFjD,IAGA,KAAKV,gBAAL,CAAsBoB,eAAtB,CAAsCC,MAAtC,KAAiD,IAJnD,EAMED,eAAe,CAACC,MAAhB,GAAyBnB,MAAzB;MAEFkB,eAAe,CAACE,KAAhB,GAAwBZ,SAAxB;MACAU,eAAe,CAACG,QAAhB,GAA2Bb,SAA3B;MACAU,eAAe,CAACI,QAAhB,GAA2B,EAA3B;MACAJ,eAAe,CAACK,WAAhB,GAA8B;QAAEC,YAAY,EAAE;MAAhB,CAA9B;MAEAtB,gBAAgB,CAACuB,IAAjB,CAAsBP,eAAtB;MAEA;IACD;;IAED,IAAI,KAAKpB,gBAAL,IAAyB,KAAKA,gBAAL,CAAsB4B,SAAnD,EACE,KAAKA,SAAL,CAAe1B,MAAf,EAAuBc,gBAAvB,EAAyCZ,gBAAzC,EAhD6E,CAkD/E;;IACAyB,MAAM,CAACC,IAAP,CAAYd,gBAAZ,EAA8Be,OAA9B,CAAsC,wBAAY;MAChD,IAAMT,KAAK,GAAIpB,MAAc,CAAC8B,YAAD,CAA7B;MACA,IAAMC,gBAAgB,GAAGjB,gBAAgB,CAACgB,YAAD,CAAhB,CAA+BE,MAA/B,CACvB,oBAAQ;QAAI,eAAQ,CAACC,IAAT,KAAkBzC,eAAe,CAAC0C,UAAlC;MAA4C,CADjC,CAAzB;MAGA,IAAMC,SAAS,GAAGrB,gBAAgB,CAACgB,YAAD,CAAhB,CAA+BE,MAA/B,CAChB,oBAAQ;QAAI,eAAQ,CAACC,IAAT,KAAkBzC,eAAe,CAAC0C,UAAlC,IAAgDE,QAAQ,CAACH,IAAT,KAAkBzC,eAAe,CAAC6C,SAAlF;MAA2F,CADvF,CAAlB;;MAIA,IACEjB,KAAK,YAAYkB,OAAjB,IACAH,SAAS,CAACI,IAAV,CAAe,oBAAQ;QAAI,eAAQ,CAACN,IAAT,KAAkBzC,eAAe,CAACgD,kBAAlC;MAAoD,CAA/E,CAFF,EAGE;QACAC,KAAI,CAACC,gBAAL,CAAsBjB,IAAtB,CACEL,KAAK,CAACuB,IAAN,CAAW,yBAAa;UACtBF,KAAI,CAACG,kBAAL,CAAwB5C,MAAxB,EAAgC6C,aAAhC,EAA+Cf,YAA/C,EAA6DC,gBAA7D,EAA+EI,SAA/E,EAA0FjC,gBAA1F;QACD,CAFD,CADF;MAKD,CATD,MASO;QACLuC,KAAI,CAACG,kBAAL,CAAwB5C,MAAxB,EAAgCoB,KAAhC,EAAuCU,YAAvC,EAAqDC,gBAArD,EAAuEI,SAAvE,EAAkFjC,gBAAlF;MACD;IACF,CArBD;EAsBD,CAzED;;EA2EAH,mDACEC,MADF,EAEEc,gBAFF,EAGEZ,gBAHF,EAGqC;IAHrC;;IAKE,IAAM4C,oBAAoB,GAAa,EAAvC;IAEAnB,MAAM,CAACC,IAAP,CAAY5B,MAAZ,EAAoB6B,OAApB,CAA4B,wBAAY;MACtC;MACA,IAAI,CAACf,gBAAgB,CAACgB,YAAD,CAAjB,IAAmChB,gBAAgB,CAACgB,YAAD,CAAhB,CAA+Bb,MAA/B,KAA0C,CAAjF,EACE6B,oBAAoB,CAACrB,IAArB,CAA0BK,YAA1B;IACH,CAJD;;IAMA,IAAIgB,oBAAoB,CAAC7B,MAArB,GAA8B,CAAlC,EAAqC;MACnC,IAAI,KAAKnB,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBiD,oBAAnD,EAAyE;QACvE;QACAD,oBAAoB,CAACjB,OAArB,CAA6B,oBAAQ;;;UACnC,IAAMX,eAAe,GAAoBuB,KAAI,CAACO,uBAAL,CAA6BhD,MAA7B,EAAqCA,MAAM,CAACqB,QAAD,CAA3C,EAAuDA,QAAvD,CAAzC;;UACAH,eAAe,CAACK,WAAhB,IAA2B0B,SAAKA,GAACzD,eAAe,CAAC6C,SAAjB,IAA6B,cAAYhB,QAAZ,GAAoB,mBAAtD,EAAyE4B,EAApG;UACA/B,eAAe,CAACI,QAAhB,GAA2Bd,SAA3B;UACAN,gBAAgB,CAACuB,IAAjB,CAAsBP,eAAtB;QACD,CALD;MAMD,CARD,MAQO;QACL;QACA4B,oBAAoB,CAACjB,OAArB,CAA6B,oBAAQ;UAAI,cAAO7B,MAAM,CAACqB,QAAD,CAAb;QAAuB,CAAhE;MACD;IACF;EACF,CA3BD;;EA6BAtB,0DAAiBmD,MAAjB,EAA0C;IAA1C;;IACE,OAAOA,MAAM,CAAClB,MAAP,CAAc,iBAAK;MACxB,IAAImB,KAAK,CAAC7B,QAAV,EAAoB;QAClB6B,KAAK,CAAC7B,QAAN,GAAiBmB,KAAI,CAACW,gBAAL,CAAsBD,KAAK,CAAC7B,QAA5B,CAAjB;MACD;;MAED,IAAIK,MAAM,CAACC,IAAP,CAAYuB,KAAK,CAAC5B,WAAlB,EAA+BN,MAA/B,KAA0C,CAA9C,EAAiD;QAC/C,IAAIkC,KAAK,CAAC7B,QAAN,CAAeL,MAAf,KAA0B,CAA9B,EAAiC;UAC/B,OAAO,KAAP;QACD,CAFD,MAEO;UACL,OAAOkC,KAAK,CAAC5B,WAAb;QACD;MACF;;MAED,OAAO,IAAP;IACD,CAdM,CAAP;EAeD,CAhBD,CAhIF,CAkJE;EACA;EACA;;;EAEQxB,kDAAR,UACEC,MADF,EAEEoB,KAFF,EAGEU,YAHF,EAIEC,gBAJF,EAKEI,SALF,EAMEjC,gBANF,EAMqC;IAEnC,IAAMmD,yBAAyB,GAAGlB,SAAS,CAACH,MAAV,CAAiB,oBAAQ;MAAI,eAAQ,CAACC,IAAT,KAAkBzC,eAAe,CAAC8D,iBAAlC;IAAmD,CAAhF,CAAlC;IACA,IAAMC,yBAAyB,GAAGpB,SAAS,CAACH,MAAV,CAAiB,oBAAQ;MAAI,eAAQ,CAACC,IAAT,KAAkBzC,eAAe,CAACgE,iBAAlC;IAAmD,CAAhF,CAAlC;IACA,IAAMC,8BAA8B,GAAGtB,SAAS,CAACH,MAAV,CACrC,oBAAQ;MAAI,eAAQ,CAACC,IAAT,KAAkBzC,eAAe,CAACkE,sBAAlC;IAAwD,CAD/B,CAAvC;IAIA,IAAMxC,eAAe,GAAG,KAAK8B,uBAAL,CAA6BhD,MAA7B,EAAqCoB,KAArC,EAA4CU,YAA5C,CAAxB;IACA5B,gBAAgB,CAACuB,IAAjB,CAAsBP,eAAtB;IAEA,IAAMyC,WAAW,GAAG,KAAKC,sBAAL,CAA4B5D,MAA5B,EAAoCoB,KAApC,EAA2CqC,8BAA3C,CAApB;;IACA,IAAI,CAACE,WAAL,EAAkB;MAChB;IACD,CAdkC,CAgBnC;;;IACA,KAAKE,iBAAL,CAAuB7D,MAAvB,EAA+BoB,KAA/B,EAAsCW,gBAAtC,EAAwDb,eAAxD;IACA,KAAK4C,WAAL,CAAiB9D,MAAjB,EAAyBoB,KAAzB,EAAgCW,gBAAhC,EAAkDb,eAAlD;;IAEA,IAAIE,KAAK,KAAKZ,SAAV,IAAuB,KAAKV,gBAA5B,IAAgD,KAAKA,gBAAL,CAAsBiE,uBAAtB,KAAkD,IAAtG,EAA4G;MAC1G;IACD;;IAED,IAAI3C,KAAK,KAAK,IAAV,IAAkB,KAAKtB,gBAAvB,IAA2C,KAAKA,gBAAL,CAAsBkE,kBAAtB,KAA6C,IAA5F,EAAkG;MAChG;IACD;;IAED,IACE,CAAC5C,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKZ,SAA7B,KACA,KAAKV,gBADL,IAEA,KAAKA,gBAAL,CAAsBmE,qBAAtB,KAAgD,IAHlD,EAIE;MACA;IACD;;IAED,KAAKJ,iBAAL,CAAuB7D,MAAvB,EAA+BoB,KAA/B,EAAsCiC,yBAAtC,EAAiEnC,eAAjE;IACA,KAAKgD,iBAAL,CAAuB9C,KAAvB,EAA8BmC,yBAA9B,EAAyDrC,eAAe,CAACI,QAAzE;IAEA,KAAKwC,WAAL,CAAiB9D,MAAjB,EAAyBoB,KAAzB,EAAgCe,SAAhC,EAA2CjB,eAA3C;IACA,KAAK4C,WAAL,CAAiB9D,MAAjB,EAAyBoB,KAAzB,EAAgCiC,yBAAhC,EAA2DnC,eAA3D;EACD,CA/CO;;EAiDAnB,uDAAR,UAAgCC,MAAhC,EAAgDoB,KAAhD,EAA4DU,YAA5D,EAAgF;IAC9E,IAAMZ,eAAe,GAAG,IAAI3B,eAAJ,EAAxB;IAEA,IACE,CAAC,KAAKO,gBAAN,IACA,CAAC,KAAKA,gBAAL,CAAsBoB,eADvB,IAEA,KAAKpB,gBAAL,CAAsBoB,eAAtB,CAAsCC,MAAtC,KAAiDX,SAFjD,IAGA,KAAKV,gBAAL,CAAsBoB,eAAtB,CAAsCC,MAAtC,KAAiD,IAJnD,EAMED,eAAe,CAACC,MAAhB,GAAyBnB,MAAzB;IAEF,IACE,CAAC,KAAKF,gBAAN,IACA,CAAC,KAAKA,gBAAL,CAAsBoB,eADvB,IAEA,KAAKpB,gBAAL,CAAsBoB,eAAtB,CAAsCE,KAAtC,KAAgDZ,SAFhD,IAGA,KAAKV,gBAAL,CAAsBoB,eAAtB,CAAsCE,KAAtC,KAAgD,IAJlD,EAMEF,eAAe,CAACE,KAAhB,GAAwBA,KAAxB;IAEFF,eAAe,CAACG,QAAhB,GAA2BS,YAA3B;IACAZ,eAAe,CAACI,QAAhB,GAA2B,EAA3B;IACAJ,eAAe,CAACK,WAAhB,GAA8B,EAA9B;IAEA,OAAOL,eAAP;EACD,CAxBO;;EA0BAnB,sDAAR,UAA+BC,MAA/B,EAA+CoB,KAA/C,EAA2De,SAA3D,EAA0F;IACxF,OAAOA,SAAS,CACbgC,GADI,CACA,oBAAQ;MAAI,eAAQ,CAAC5C,WAAT,CAAqB,CAArB,EAAwBvB,MAAxB,EAAgCoB,KAAhC;IAAsC,CADlD,EAEJgD,MAFI,CAEG,UAACC,OAAD,EAAUC,OAAV,EAAiB;MAAK,cAAO,IAAIA,OAAX;IAAkB,CAF3C,EAE6C,IAF7C,CAAP;EAGD,CAJO;;EAMAvE,iDAAR,UAA0BC,MAA1B,EAA0CoB,KAA1C,EAAsDe,SAAtD,EAAuFgB,KAAvF,EAA6G;IAA7G;;IACEhB,SAAS,CAACN,OAAV,CAAkB,oBAAQ;MACxBY,KAAI,CAACtC,eAAL,CAAqBoE,6BAArB,CAAmDnC,QAAQ,CAACoC,aAA5D,EAA2E3C,OAA3E,CAAmF,oCAAwB;QACzG,IAAI4C,wBAAwB,CAACC,KAAzB,IAAkCjC,KAAI,CAACkC,sBAA3C,EAAmE;QACnE,IACElC,KAAI,CAAC3C,gBAAL,IACA2C,KAAI,CAAC3C,gBAAL,CAAsB8E,gBADtB,IAEAjD,MAAM,CAACC,IAAP,CAAYuB,KAAK,CAAC5B,WAAN,IAAqB,EAAjC,EAAqCN,MAArC,GAA8C,CAHhD,EAKE;QAEF,IAAM4D,mBAAmB,GAAwB;UAC/CC,UAAU,EAAE9E,MAAM,CAACa,WAAP,GAAsBb,MAAM,CAACa,WAAP,CAA2BkE,IAAjD,GAAwDvE,SADrB;UAE/Ca,QAAQ,EAAEe,QAAQ,CAACN,YAF4B;UAG/C9B,MAAM,EAAEA,MAHuC;UAI/CoB,KAAK,EAAEA,KAJwC;UAK/CG,WAAW,EAAEa,QAAQ,CAACb;QALyB,CAAjD;;QAQA,IAAI,CAACa,QAAQ,CAAC4C,IAAV,IAAkB,EAAE5D,KAAK,YAAY6D,KAAjB,IAA0B7D,KAAK,YAAY8D,GAA3C,IAAkD9D,KAAK,YAAY+D,GAArE,CAAtB,EAAiG;UAC/F,IAAMC,cAAc,GAAGX,wBAAwB,CAACY,QAAzB,CAAkCC,QAAlC,CAA2ClE,KAA3C,EAAkDyD,mBAAlD,CAAvB;;UACA,IAAInF,SAAS,CAAC0F,cAAD,CAAb,EAA+B;YAC7B,IAAMG,OAAO,GAAGH,cAAc,CAACzC,IAAf,CAAoB,mBAAO;cACzC,IAAI,CAAC6C,OAAL,EAAc;gBACN,SAAkB/C,KAAI,CAACgD,qBAAL,CAA2BzF,MAA3B,EAAmCoB,KAAnC,EAA0CgB,QAA1C,EAAoDqC,wBAApD,CAAlB;gBAAA,IAACxC,IAAI,QAAL;gBAAA,IAAOyD,OAAO,QAAd;;gBACNvC,KAAK,CAAC5B,WAAN,CAAkBU,IAAlB,IAA0ByD,OAA1B;;gBACA,IAAItD,QAAQ,CAACuD,OAAb,EAAsB;kBACpB,IAAI,CAACxC,KAAK,CAACyC,QAAX,EAAqB;oBACnBzC,KAAK,CAACyC,QAAN,GAAiB,EAAjB;kBACD;;kBACDzC,KAAK,CAACyC,QAAN,CAAe3D,IAAf,IAAuBN,MAAM,CAACkE,MAAP,CAAc1C,KAAK,CAACyC,QAAN,CAAe3D,IAAf,KAAwB,EAAtC,EAA0CG,QAAQ,CAACuD,OAAnD,CAAvB;gBACD;cACF;YACF,CAXe,CAAhB;;YAYAlD,KAAI,CAACC,gBAAL,CAAsBjB,IAAtB,CAA2B8D,OAA3B;UACD,CAdD,MAcO;YACL,IAAI,CAACH,cAAL,EAAqB;cACb,SAAkB3C,KAAI,CAACgD,qBAAL,CAA2BzF,MAA3B,EAAmCoB,KAAnC,EAA0CgB,QAA1C,EAAoDqC,wBAApD,CAAlB;cAAA,IAACxC,IAAI,QAAL;cAAA,IAAOyD,OAAO,QAAd;;cACNvC,KAAK,CAAC5B,WAAN,CAAkBU,IAAlB,IAA0ByD,OAA1B;YACD;UACF;;UAED;QACD,CAzCwG,CA2CzG;;;QACA,IAAMI,UAAU,GAAGnG,cAAc,CAACyB,KAAD,CAAjC,CA5CyG,CA6CzG;;QACA,IAAM2E,kBAAkB,GAAGD,UAAU,CAAC3B,GAAX,CAAe,UAAC6B,QAAD,EAAc;UACtD,+BAAwB,CAACX,QAAzB,CAAkCC,QAAlC,CAA2CU,QAA3C,EAAqDnB,mBAArD;QAAyE,CADhD,CAA3B;QAGA,IAAMoB,iBAAiB,GAAGF,kBAAkB,CAACG,IAAnB,CAAwB,UAACC,iBAAD,EAA8C;UAC9F,gBAAS,CAACA,iBAAD,CAAT;QAA4B,CADJ,CAA1B;;QAIA,IAAIF,iBAAJ,EAAuB;UACrB;UACA,IAAMG,uBAAuB,GAAGL,kBAAkB,CAAC5B,GAAnB,CAAuB,UAACgC,iBAAD,EAA8C;YACnG,gBAAS,CAACA,iBAAD,CAAT,GAA+BA,iBAA/B,GAAmD7D,OAAO,CAAC+D,OAAR,CAAgBF,iBAAhB,CAAnD;UAAqF,CADvD,CAAhC;UAGA,IAAMG,gCAAgC,GAAGhE,OAAO,CAACiE,GAAR,CAAYH,uBAAZ,EAAqCzD,IAArC,CACvC,UAAC6D,mBAAD,EAA+B;YAC7B,IAAMC,gBAAgB,GAAGD,mBAAmB,CAACE,KAApB,CAA0B,UAAClB,OAAD,EAAiB;cAAK;YAAO,CAAvD,CAAzB;;YACA,IAAI,CAACiB,gBAAL,EAAuB;cACf,SAAkBhE,KAAI,CAACgD,qBAAL,CAA2BzF,MAA3B,EAAmCoB,KAAnC,EAA0CgB,QAA1C,EAAoDqC,wBAApD,CAAlB;cAAA,IAACxC,IAAI,QAAL;cAAA,IAAOyD,OAAO,QAAd;;cACNvC,KAAK,CAAC5B,WAAN,CAAkBU,IAAlB,IAA0ByD,OAA1B;;cACA,IAAItD,QAAQ,CAACuD,OAAb,EAAsB;gBACpB,IAAI,CAACxC,KAAK,CAACyC,QAAX,EAAqB;kBACnBzC,KAAK,CAACyC,QAAN,GAAiB,EAAjB;gBACD;;gBACDzC,KAAK,CAACyC,QAAN,CAAe3D,IAAf,IAAuBN,MAAM,CAACkE,MAAP,CAAc1C,KAAK,CAACyC,QAAN,CAAe3D,IAAf,KAAwB,EAAtC,EAA0CG,QAAQ,CAACuD,OAAnD,CAAvB;cACD;YACF;UACF,CAbsC,CAAzC;;UAgBAlD,KAAI,CAACC,gBAAL,CAAsBjB,IAAtB,CAA2B6E,gCAA3B;;UAEA;QACD;;QAED,IAAMG,gBAAgB,GAAGV,kBAAkB,CAACW,KAAnB,CAAyB,UAAClB,OAAD,EAAiB;UAAK;QAAO,CAAtD,CAAzB;;QACA,IAAI,CAACiB,gBAAL,EAAuB;UACf,SAAkBhE,KAAI,CAACgD,qBAAL,CAA2BzF,MAA3B,EAAmCoB,KAAnC,EAA0CgB,QAA1C,EAAoDqC,wBAApD,CAAlB;UAAA,IAACxC,IAAI,QAAL;UAAA,IAAOyD,OAAO,QAAd;;UACNvC,KAAK,CAAC5B,WAAN,CAAkBU,IAAlB,IAA0ByD,OAA1B;QACD;MACF,CApFD;IAqFD,CAtFD;EAuFD,CAxFO;;EA0FA3F,iDAAR,UAA0BqB,KAA1B,EAAsCe,SAAtC,EAAuEe,MAAvE,EAAgG;IAAhG;;IACE,IAAI9B,KAAK,KAAK,KAAK,CAAnB,EAAsB;MACpB;IACD;;IAEDe,SAAS,CAACN,OAAV,CAAkB,oBAAQ;;;MACxB,IAAIO,QAAQ,CAACH,IAAT,KAAkBzC,eAAe,CAACgE,iBAAlC,IAAuDpB,QAAQ,CAACH,IAAT,KAAkBzC,eAAe,CAACgD,kBAA7F,EAAiH;QAC/G;MACD;;MAED,IAAIpB,KAAK,YAAY6D,KAAjB,IAA0B7D,KAAK,YAAY8D,GAA3C,IAAkD9D,KAAK,YAAY+D,GAAvE,EAA4E;QAC1E;QACA,IAAMwB,cAAc,GAAGvF,KAAK,YAAY8D,GAAjB,GAAuBD,KAAK,CAAC2B,IAAN,CAAWxF,KAAX,CAAvB,GAA2CA,KAAlE;QACAuF,cAAc,CAAC9E,OAAf,CAAuB,UAACmE,QAAD,EAAgBa,KAAhB,EAA0B;UAC/CpE,KAAI,CAACG,kBAAL,CAAwBxB,KAAxB,EAA+B4E,QAA/B,EAAyCa,KAAK,CAACC,QAAN,EAAzC,EAA2D,EAA3D,EAA+D3E,SAA/D,EAA0Ee,MAA1E;QACD,CAFD;MAGD,CAND,MAMO,IAAI9B,KAAK,YAAYO,MAArB,EAA6B;QAClC,IAAM1B,YAAY,GAAG,OAAOmC,QAAQ,CAACjB,MAAhB,KAA2B,QAA3B,GAAsCiB,QAAQ,CAACjB,MAA/C,GAAwDiB,QAAQ,CAACjB,MAAT,CAAgB4D,IAA7F;;QACAtC,KAAI,CAACsE,OAAL,CAAa3F,KAAb,EAAoBnB,YAApB,EAAkCiD,MAAlC;MACD,CAHM,MAGA;QACL,IAAMC,KAAK,GAAG,IAAI5D,eAAJ,EAAd;QACA4D,KAAK,CAAC/B,KAAN,GAAcA,KAAd;QACA+B,KAAK,CAAC9B,QAAN,GAAiBe,QAAQ,CAACN,YAA1B;QACAqB,KAAK,CAAChC,MAAN,GAAeiB,QAAQ,CAACjB,MAAxB;;QACM,SAAkBsB,KAAI,CAACgD,qBAAL,CAA2BrD,QAAQ,CAACjB,MAApC,EAAsDC,KAAtD,EAA6DgB,QAA7D,CAAlB;QAAA,IAACH,IAAI,QAAL;QAAA,IAAOyD,OAAO,QAAd;;QACNvC,KAAK,CAAC5B,WAAN,IAAiB0B,SACfA,GAAChB,IAAD,IAAQyD,OADO,IAAjB;QAGAxC,MAAM,CAACzB,IAAP,CAAY0B,KAAZ;MACD;IACF,CAzBD;EA0BD,CA/BO;;EAiCApD,2CAAR,UAAoBC,MAApB,EAAoCoB,KAApC,EAAgDe,SAAhD,EAAiFgB,KAAjF,EAAuG;IAAvG;;IACE,OAAOhB,SAAS,CAACN,OAAV,CAAkB,oBAAQ;MAC/B,IAAIO,QAAQ,CAACuD,OAAb,EAAsB;QACpB,IAAIqB,gBAAgB,SAApB;;QACA,IAAI5E,QAAQ,CAACH,IAAT,KAAkBzC,eAAe,CAAC8D,iBAAtC,EAAyD;UACvD,IAAM2D,iBAAiB,GAAGxE,KAAI,CAACtC,eAAL,CAAqBoE,6BAArB,CAAmDnC,QAAQ,CAACoC,aAA5D,CAA1B;;UACAwC,gBAAgB,GAAGC,iBAAiB,CAAC,CAAD,CAApC;QACD;;QAED,IAAMhF,IAAI,GAAGQ,KAAI,CAACyE,iBAAL,CAAuB9E,QAAvB,EAAiC4E,gBAAjC,CAAb;;QAEA,IAAI7D,KAAK,CAAC5B,WAAN,CAAkBU,IAAlB,CAAJ,EAA6B;UAC3B,IAAI,CAACkB,KAAK,CAACyC,QAAX,EAAqB;YACnBzC,KAAK,CAACyC,QAAN,GAAiB,EAAjB;UACD;;UAEDzC,KAAK,CAACyC,QAAN,CAAe3D,IAAf,IAAuBN,MAAM,CAACkE,MAAP,CAAc1C,KAAK,CAACyC,QAAN,CAAe3D,IAAf,KAAwB,EAAtC,EAA0CG,QAAQ,CAACuD,OAAnD,CAAvB;QACD;MACF;IACF,CAlBM,CAAP;EAmBD,CApBO;;EAsBA5F,qDAAR,UACEC,MADF,EAEEoB,KAFF,EAGEgB,QAHF,EAIE+E,uBAJF,EAI8C;IAE5C,IAAMrC,UAAU,GAAG9E,MAAM,CAACa,WAAP,GAAsBb,MAAM,CAACa,WAAP,CAA2BkE,IAAjD,GAAwDvE,SAA3E;IACA,IAAMyB,IAAI,GAAG,KAAKiF,iBAAL,CAAuB9E,QAAvB,EAAiC+E,uBAAjC,CAAb;IACA,IAAMtC,mBAAmB,GAAwB;MAC/CC,UAAU,EAAEA,UADmC;MAE/CzD,QAAQ,EAAEe,QAAQ,CAACN,YAF4B;MAG/C9B,MAAM,EAAEA,MAHuC;MAI/CoB,KAAK,EAAEA,KAJwC;MAK/CG,WAAW,EAAEa,QAAQ,CAACb;IALyB,CAAjD;IAQA,IAAImE,OAAO,GAAGtD,QAAQ,CAACsD,OAAT,IAAoB,EAAlC;;IACA,IACE,CAACtD,QAAQ,CAACsD,OAAV,KACC,CAAC,KAAK5F,gBAAN,IAA2B,KAAKA,gBAAL,IAAyB,CAAC,KAAKA,gBAAL,CAAsBsH,sBAD5E,CADF,EAGE;MACA,IAAID,uBAAuB,IAAIA,uBAAuB,CAAC9B,QAAxB,CAAiCgC,cAAjC,YAA2DC,QAA1F,EAAoG;QAClG5B,OAAO,GAAGyB,uBAAuB,CAAC9B,QAAxB,CAAiCgC,cAAjC,CAAgDxC,mBAAhD,CAAV;MACD;IACF;;IAED,IAAM0C,aAAa,GAAG9H,eAAe,CAAC+H,2BAAhB,CAA4C9B,OAA5C,EAAqDb,mBAArD,CAAtB;IACA,OAAO,CAAC5C,IAAD,EAAOsF,aAAP,CAAP;EACD,CA5BO;;EA8BAxH,iDAAR,UAA0BqC,QAA1B,EAAwD+E,uBAAxD,EAAoG;IAClG,IAAMlF,IAAI,GAAGkF,uBAAuB,IAAIA,uBAAuB,CAACpC,IAAnD,GAA0DoC,uBAAuB,CAACpC,IAAlF,GAAyF3C,QAAQ,CAACH,IAA/G;IACA,OAAOA,IAAP;EACD,CAHO;;EAIV;AAAC,CA1ZD","names":["ValidationError","ValidationTypes","ValidationUtils","isPromise","convertToArray","getMetadataStorage","validator","validatorOptions","ValidationExecutor","object","targetSchema","validationErrors","metadataStorage","hasValidationMetaData","console","warn","groups","undefined","strictGroups","always","targetMetadatas","getTargetValidationMetadatas","constructor","groupedMetadatas","groupByPropertyName","forbidUnknownValues","length","validationError","target","value","property","children","constraints","unknownValue","push","whitelist","Object","keys","forEach","propertyName","definedMetadatas","filter","type","IS_DEFINED","metadatas","metadata","WHITELIST","Promise","find","PROMISE_VALIDATION","_this","awaitingPromises","then","performValidations","resolvedValue","notAllowedProperties","forbidNonWhitelisted","generateValidationError","_a","errors","error","stripEmptyErrors","customValidationMetadatas","CUSTOM_VALIDATION","nestedValidationMetadatas","NESTED_VALIDATION","conditionalValidationMetadatas","CONDITIONAL_VALIDATION","canValidate","conditionalValidations","customValidations","mapContexts","skipUndefinedProperties","skipNullProperties","skipMissingProperties","nestedValidations","map","reduce","resultA","resultB","getTargetValidatorConstraints","constraintCls","customConstraintMetadata","async","ignoreAsyncValidations","stopAtFirstError","validationArguments","targetName","name","each","Array","Set","Map","validatedValue","instance","validate","promise","isValid","createValidationError","message","context","contexts","assign","arrayValue","validatedSubValues","subValue","validationIsAsync","some","validatedSubValue","asyncValidatedSubValues","resolve","asyncValidationIsFinishedPromise","all","flatValidatedValues","validationResult","every","arrayLikeValue","from","index","toString","execute","customConstraint","customConstraints","getConstraintType","customValidatorMetadata","dismissDefaultMessages","defaultMessage","Function","messageString","replaceMessageSpecialTokens"],"sourceRoot":"","sources":["../../../src/validation/ValidationExecutor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}