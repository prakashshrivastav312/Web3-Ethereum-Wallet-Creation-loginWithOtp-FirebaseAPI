{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HashPrefix = void 0;\n\nvar buffer_1 = require(\"buffer/\");\n/**\n * Write a 32 bit integer to a Buffer\n *\n * @param uint32 32 bit integer to write to buffer\n * @returns a buffer with the bytes representation of uint32\n */\n\n\nfunction bytes(uint32) {\n  var result = buffer_1.Buffer.alloc(4);\n  result.writeUInt32BE(uint32, 0);\n  return result;\n}\n/**\n * Maps HashPrefix names to their byte representation\n */\n\n\nvar HashPrefix = {\n  transactionID: bytes(0x54584e00),\n  // transaction plus metadata\n  transaction: bytes(0x534e4400),\n  // account state\n  accountStateEntry: bytes(0x4d4c4e00),\n  // inner node in tree\n  innerNode: bytes(0x4d494e00),\n  // ledger master data for signing\n  ledgerHeader: bytes(0x4c575200),\n  // inner transaction to sign\n  transactionSig: bytes(0x53545800),\n  // inner transaction to sign\n  transactionMultiSig: bytes(0x534d5400),\n  // validation for signing\n  validation: bytes(0x56414c00),\n  // proposal for signing\n  proposal: bytes(0x50525000),\n  // payment channel claim\n  paymentChannelClaim: bytes(0x434c4d00)\n};\nexports.HashPrefix = HashPrefix;","map":{"version":3,"mappings":";;;;;;;AAAA;AAEA;;;;;;;;AAMA,SAASA,KAAT,CAAeC,MAAf,EAA6B;EAC3B,IAAMC,MAAM,GAAGC,gBAAOC,KAAP,CAAa,CAAb,CAAf;EACAF,MAAM,CAACG,aAAP,CAAqBJ,MAArB,EAA6B,CAA7B;EACA,OAAOC,MAAP;AACD;AAED;;;;;AAGA,IAAMI,UAAU,GAA2B;EACzCC,aAAa,EAAEP,KAAK,CAAC,UAAD,CADqB;EAEzC;EACAQ,WAAW,EAAER,KAAK,CAAC,UAAD,CAHuB;EAIzC;EACAS,iBAAiB,EAAET,KAAK,CAAC,UAAD,CALiB;EAMzC;EACAU,SAAS,EAAEV,KAAK,CAAC,UAAD,CAPyB;EAQzC;EACAW,YAAY,EAAEX,KAAK,CAAC,UAAD,CATsB;EAUzC;EACAY,cAAc,EAAEZ,KAAK,CAAC,UAAD,CAXoB;EAYzC;EACAa,mBAAmB,EAAEb,KAAK,CAAC,UAAD,CAbe;EAczC;EACAc,UAAU,EAAEd,KAAK,CAAC,UAAD,CAfwB;EAgBzC;EACAe,QAAQ,EAAEf,KAAK,CAAC,UAAD,CAjB0B;EAkBzC;EACAgB,mBAAmB,EAAEhB,KAAK,CAAC,UAAD;AAnBe,CAA3C;AAsBSiB","names":["bytes","uint32","result","buffer_1","alloc","writeUInt32BE","HashPrefix","transactionID","transaction","accountStateEntry","innerNode","ledgerHeader","transactionSig","transactionMultiSig","validation","proposal","paymentChannelClaim","exports"],"sourceRoot":"","sources":["../src/hash-prefixes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}