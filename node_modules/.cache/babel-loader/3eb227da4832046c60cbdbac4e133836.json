{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst converter = require('./converter');\n\nfunction checkForInput(inputs, inputIndex) {\n  const input = inputs[inputIndex];\n  if (input === undefined) throw new Error(`No input #${inputIndex}`);\n  return input;\n}\n\nexports.checkForInput = checkForInput;\n\nfunction checkForOutput(outputs, outputIndex) {\n  const output = outputs[outputIndex];\n  if (output === undefined) throw new Error(`No output #${outputIndex}`);\n  return output;\n}\n\nexports.checkForOutput = checkForOutput;\n\nfunction checkHasKey(checkKeyVal, keyVals, enumLength) {\n  if (checkKeyVal.key[0] < enumLength) {\n    throw new Error(`Use the method for your specific key instead of addUnknownKeyVal*`);\n  }\n\n  if (keyVals && keyVals.filter(kv => kv.key.equals(checkKeyVal.key)).length !== 0) {\n    throw new Error(`Duplicate Key: ${checkKeyVal.key.toString('hex')}`);\n  }\n}\n\nexports.checkHasKey = checkHasKey;\n\nfunction getEnumLength(myenum) {\n  let count = 0;\n  Object.keys(myenum).forEach(val => {\n    if (Number(isNaN(Number(val)))) {\n      count++;\n    }\n  });\n  return count;\n}\n\nexports.getEnumLength = getEnumLength;\n\nfunction inputCheckUncleanFinalized(inputIndex, input) {\n  let result = false;\n\n  if (input.nonWitnessUtxo || input.witnessUtxo) {\n    const needScriptSig = !!input.redeemScript;\n    const needWitnessScript = !!input.witnessScript;\n    const scriptSigOK = !needScriptSig || !!input.finalScriptSig;\n    const witnessScriptOK = !needWitnessScript || !!input.finalScriptWitness;\n    const hasOneFinal = !!input.finalScriptSig || !!input.finalScriptWitness;\n    result = scriptSigOK && witnessScriptOK && hasOneFinal;\n  }\n\n  if (result === false) {\n    throw new Error(`Input #${inputIndex} has too much or too little data to clean`);\n  }\n}\n\nexports.inputCheckUncleanFinalized = inputCheckUncleanFinalized;\n\nfunction throwForUpdateMaker(typeName, name, expected, data) {\n  throw new Error(`Data for ${typeName} key ${name} is incorrect: Expected ` + `${expected} and got ${JSON.stringify(data)}`);\n}\n\nfunction updateMaker(typeName) {\n  return (updateData, mainData) => {\n    for (const name of Object.keys(updateData)) {\n      // @ts-ignore\n      const data = updateData[name]; // @ts-ignore\n\n      const {\n        canAdd,\n        canAddToArray,\n        check,\n        expected\n      } = // @ts-ignore\n      converter[typeName + 's'][name] || {};\n      const isArray = !!canAddToArray; // If unknown data. ignore and do not add\n\n      if (check) {\n        if (isArray) {\n          if (!Array.isArray(data) || // @ts-ignore\n          mainData[name] && !Array.isArray(mainData[name])) {\n            throw new Error(`Key type ${name} must be an array`);\n          }\n\n          if (!data.every(check)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          } // @ts-ignore\n\n\n          const arr = mainData[name] || [];\n          const dupeCheckSet = new Set();\n\n          if (!data.every(v => canAddToArray(arr, v, dupeCheckSet))) {\n            throw new Error('Can not add duplicate data to array');\n          } // @ts-ignore\n\n\n          mainData[name] = arr.concat(data);\n        } else {\n          if (!check(data)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          }\n\n          if (!canAdd(mainData, data)) {\n            throw new Error(`Can not add duplicate data to ${typeName}`);\n          } // @ts-ignore\n\n\n          mainData[name] = data;\n        }\n      }\n    }\n  };\n}\n\nexports.updateGlobal = updateMaker('global');\nexports.updateInput = updateMaker('input');\nexports.updateOutput = updateMaker('output');\n\nfunction addInputAttributes(inputs, data) {\n  const index = inputs.length - 1;\n  const input = checkForInput(inputs, index);\n  exports.updateInput(data, input);\n}\n\nexports.addInputAttributes = addInputAttributes;\n\nfunction addOutputAttributes(outputs, data) {\n  const index = outputs.length - 1;\n  const output = checkForOutput(outputs, index);\n  exports.updateOutput(data, output);\n}\n\nexports.addOutputAttributes = addOutputAttributes;\n\nfunction defaultVersionSetter(version, txBuf) {\n  if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n    throw new Error('Set Version: Invalid Transaction');\n  }\n\n  txBuf.writeUInt32LE(version, 0);\n  return txBuf;\n}\n\nexports.defaultVersionSetter = defaultVersionSetter;\n\nfunction defaultLocktimeSetter(locktime, txBuf) {\n  if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n    throw new Error('Set Locktime: Invalid Transaction');\n  }\n\n  txBuf.writeUInt32LE(locktime, txBuf.length - 4);\n  return txBuf;\n}\n\nexports.defaultLocktimeSetter = defaultLocktimeSetter;","map":{"version":3,"names":["Object","defineProperty","exports","value","converter","require","checkForInput","inputs","inputIndex","input","undefined","Error","checkForOutput","outputs","outputIndex","output","checkHasKey","checkKeyVal","keyVals","enumLength","key","filter","kv","equals","length","toString","getEnumLength","myenum","count","keys","forEach","val","Number","isNaN","inputCheckUncleanFinalized","result","nonWitnessUtxo","witnessUtxo","needScriptSig","redeemScript","needWitnessScript","witnessScript","scriptSigOK","finalScriptSig","witnessScriptOK","finalScriptWitness","hasOneFinal","throwForUpdateMaker","typeName","name","expected","data","JSON","stringify","updateMaker","updateData","mainData","canAdd","canAddToArray","check","isArray","Array","every","arr","dupeCheckSet","Set","v","concat","updateGlobal","updateInput","updateOutput","addInputAttributes","index","addOutputAttributes","defaultVersionSetter","version","txBuf","Buffer","isBuffer","writeUInt32LE","defaultLocktimeSetter","locktime"],"sources":["C:/Users/acer/node_modules/bip174/src/lib/utils.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst converter = require('./converter');\nfunction checkForInput(inputs, inputIndex) {\n  const input = inputs[inputIndex];\n  if (input === undefined) throw new Error(`No input #${inputIndex}`);\n  return input;\n}\nexports.checkForInput = checkForInput;\nfunction checkForOutput(outputs, outputIndex) {\n  const output = outputs[outputIndex];\n  if (output === undefined) throw new Error(`No output #${outputIndex}`);\n  return output;\n}\nexports.checkForOutput = checkForOutput;\nfunction checkHasKey(checkKeyVal, keyVals, enumLength) {\n  if (checkKeyVal.key[0] < enumLength) {\n    throw new Error(\n      `Use the method for your specific key instead of addUnknownKeyVal*`,\n    );\n  }\n  if (\n    keyVals &&\n    keyVals.filter(kv => kv.key.equals(checkKeyVal.key)).length !== 0\n  ) {\n    throw new Error(`Duplicate Key: ${checkKeyVal.key.toString('hex')}`);\n  }\n}\nexports.checkHasKey = checkHasKey;\nfunction getEnumLength(myenum) {\n  let count = 0;\n  Object.keys(myenum).forEach(val => {\n    if (Number(isNaN(Number(val)))) {\n      count++;\n    }\n  });\n  return count;\n}\nexports.getEnumLength = getEnumLength;\nfunction inputCheckUncleanFinalized(inputIndex, input) {\n  let result = false;\n  if (input.nonWitnessUtxo || input.witnessUtxo) {\n    const needScriptSig = !!input.redeemScript;\n    const needWitnessScript = !!input.witnessScript;\n    const scriptSigOK = !needScriptSig || !!input.finalScriptSig;\n    const witnessScriptOK = !needWitnessScript || !!input.finalScriptWitness;\n    const hasOneFinal = !!input.finalScriptSig || !!input.finalScriptWitness;\n    result = scriptSigOK && witnessScriptOK && hasOneFinal;\n  }\n  if (result === false) {\n    throw new Error(\n      `Input #${inputIndex} has too much or too little data to clean`,\n    );\n  }\n}\nexports.inputCheckUncleanFinalized = inputCheckUncleanFinalized;\nfunction throwForUpdateMaker(typeName, name, expected, data) {\n  throw new Error(\n    `Data for ${typeName} key ${name} is incorrect: Expected ` +\n      `${expected} and got ${JSON.stringify(data)}`,\n  );\n}\nfunction updateMaker(typeName) {\n  return (updateData, mainData) => {\n    for (const name of Object.keys(updateData)) {\n      // @ts-ignore\n      const data = updateData[name];\n      // @ts-ignore\n      const { canAdd, canAddToArray, check, expected } =\n        // @ts-ignore\n        converter[typeName + 's'][name] || {};\n      const isArray = !!canAddToArray;\n      // If unknown data. ignore and do not add\n      if (check) {\n        if (isArray) {\n          if (\n            !Array.isArray(data) ||\n            // @ts-ignore\n            (mainData[name] && !Array.isArray(mainData[name]))\n          ) {\n            throw new Error(`Key type ${name} must be an array`);\n          }\n          if (!data.every(check)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          }\n          // @ts-ignore\n          const arr = mainData[name] || [];\n          const dupeCheckSet = new Set();\n          if (!data.every(v => canAddToArray(arr, v, dupeCheckSet))) {\n            throw new Error('Can not add duplicate data to array');\n          }\n          // @ts-ignore\n          mainData[name] = arr.concat(data);\n        } else {\n          if (!check(data)) {\n            throwForUpdateMaker(typeName, name, expected, data);\n          }\n          if (!canAdd(mainData, data)) {\n            throw new Error(`Can not add duplicate data to ${typeName}`);\n          }\n          // @ts-ignore\n          mainData[name] = data;\n        }\n      }\n    }\n  };\n}\nexports.updateGlobal = updateMaker('global');\nexports.updateInput = updateMaker('input');\nexports.updateOutput = updateMaker('output');\nfunction addInputAttributes(inputs, data) {\n  const index = inputs.length - 1;\n  const input = checkForInput(inputs, index);\n  exports.updateInput(data, input);\n}\nexports.addInputAttributes = addInputAttributes;\nfunction addOutputAttributes(outputs, data) {\n  const index = outputs.length - 1;\n  const output = checkForOutput(outputs, index);\n  exports.updateOutput(data, output);\n}\nexports.addOutputAttributes = addOutputAttributes;\nfunction defaultVersionSetter(version, txBuf) {\n  if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n    throw new Error('Set Version: Invalid Transaction');\n  }\n  txBuf.writeUInt32LE(version, 0);\n  return txBuf;\n}\nexports.defaultVersionSetter = defaultVersionSetter;\nfunction defaultLocktimeSetter(locktime, txBuf) {\n  if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n    throw new Error('Set Locktime: Invalid Transaction');\n  }\n  txBuf.writeUInt32LE(locktime, txBuf.length - 4);\n  return txBuf;\n}\nexports.defaultLocktimeSetter = defaultLocktimeSetter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}