{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst range = n => [...Array(n).keys()];\n\nconst isValidDERKey = pubkey => pubkey.length === 33 && [2, 3].includes(pubkey[0]) || pubkey.length === 65 && 4 === pubkey[0];\n\nfunction makeConverter(TYPE_BYTE) {\n  let isValidPubkey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : isValidDERKey;\n\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error('Decode Error: could not decode bip32Derivation with key 0x' + keyVal.key.toString('hex'));\n    }\n\n    const pubkey = keyVal.key.slice(1);\n\n    if (!isValidPubkey(pubkey)) {\n      throw new Error('Decode Error: bip32Derivation has invalid pubkey in key 0x' + keyVal.key.toString('hex'));\n    }\n\n    if (keyVal.value.length / 4 % 1 !== 0) {\n      throw new Error('Decode Error: Input BIP32_DERIVATION value length should be multiple of 4');\n    }\n\n    const data = {\n      masterFingerprint: keyVal.value.slice(0, 4),\n      pubkey,\n      path: 'm'\n    };\n\n    for (const i of range(keyVal.value.length / 4 - 1)) {\n      const val = keyVal.value.readUInt32LE(i * 4 + 4);\n      const isHard = !!(val & 0x80000000);\n      const idx = val & 0x7fffffff;\n      data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n    }\n\n    return data;\n  }\n\n  function encode(data) {\n    const head = Buffer.from([TYPE_BYTE]);\n    const key = Buffer.concat([head, data.pubkey]);\n    const splitPath = data.path.split('/');\n    const value = Buffer.allocUnsafe(splitPath.length * 4);\n    data.masterFingerprint.copy(value, 0);\n    let offset = 4;\n    splitPath.slice(1).forEach(level => {\n      const isHard = level.slice(-1) === \"'\";\n      let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n      if (isHard) num += 0x80000000;\n      value.writeUInt32LE(num, offset);\n      offset += 4;\n    });\n    return {\n      key,\n      value\n    };\n  }\n\n  const expected = '{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }';\n\n  function check(data) {\n    return Buffer.isBuffer(data.pubkey) && Buffer.isBuffer(data.masterFingerprint) && typeof data.path === 'string' && isValidPubkey(data.pubkey) && data.masterFingerprint.length === 4;\n  }\n\n  function canAddToArray(array, item, dupeSet) {\n    const dupeString = item.pubkey.toString('hex');\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return array.filter(v => v.pubkey.equals(item.pubkey)).length === 0;\n  }\n\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAddToArray\n  };\n}\n\nexports.makeConverter = makeConverter;","map":{"version":3,"names":["Object","defineProperty","exports","value","range","n","Array","keys","isValidDERKey","pubkey","length","includes","makeConverter","TYPE_BYTE","isValidPubkey","decode","keyVal","key","Error","toString","slice","data","masterFingerprint","path","i","val","readUInt32LE","isHard","idx","encode","head","Buffer","from","concat","splitPath","split","allocUnsafe","copy","offset","forEach","level","num","parseInt","writeUInt32LE","expected","check","isBuffer","canAddToArray","array","item","dupeSet","dupeString","has","add","filter","v","equals"],"sources":["C:/Users/acer/node_modules/bip174/src/lib/converter/shared/bip32Derivation.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst range = n => [...Array(n).keys()];\nconst isValidDERKey = pubkey =>\n  (pubkey.length === 33 && [2, 3].includes(pubkey[0])) ||\n  (pubkey.length === 65 && 4 === pubkey[0]);\nfunction makeConverter(TYPE_BYTE, isValidPubkey = isValidDERKey) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error(\n        'Decode Error: could not decode bip32Derivation with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    const pubkey = keyVal.key.slice(1);\n    if (!isValidPubkey(pubkey)) {\n      throw new Error(\n        'Decode Error: bip32Derivation has invalid pubkey in key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    if ((keyVal.value.length / 4) % 1 !== 0) {\n      throw new Error(\n        'Decode Error: Input BIP32_DERIVATION value length should be multiple of 4',\n      );\n    }\n    const data = {\n      masterFingerprint: keyVal.value.slice(0, 4),\n      pubkey,\n      path: 'm',\n    };\n    for (const i of range(keyVal.value.length / 4 - 1)) {\n      const val = keyVal.value.readUInt32LE(i * 4 + 4);\n      const isHard = !!(val & 0x80000000);\n      const idx = val & 0x7fffffff;\n      data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n    }\n    return data;\n  }\n  function encode(data) {\n    const head = Buffer.from([TYPE_BYTE]);\n    const key = Buffer.concat([head, data.pubkey]);\n    const splitPath = data.path.split('/');\n    const value = Buffer.allocUnsafe(splitPath.length * 4);\n    data.masterFingerprint.copy(value, 0);\n    let offset = 4;\n    splitPath.slice(1).forEach(level => {\n      const isHard = level.slice(-1) === \"'\";\n      let num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n      if (isHard) num += 0x80000000;\n      value.writeUInt32LE(num, offset);\n      offset += 4;\n    });\n    return {\n      key,\n      value,\n    };\n  }\n  const expected =\n    '{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }';\n  function check(data) {\n    return (\n      Buffer.isBuffer(data.pubkey) &&\n      Buffer.isBuffer(data.masterFingerprint) &&\n      typeof data.path === 'string' &&\n      isValidPubkey(data.pubkey) &&\n      data.masterFingerprint.length === 4\n    );\n  }\n  function canAddToArray(array, item, dupeSet) {\n    const dupeString = item.pubkey.toString('hex');\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return array.filter(v => v.pubkey.equals(item.pubkey)).length === 0;\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAddToArray,\n  };\n}\nexports.makeConverter = makeConverter;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}