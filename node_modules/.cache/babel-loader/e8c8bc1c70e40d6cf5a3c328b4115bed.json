{"ast":null,"code":"/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-core/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nconst {\n  Manager,\n  BatchManager\n} = require('../../caver-core-requestmanager');\n\nmodule.exports = {\n  packageInit: function (pkg, args) {\n    if (!pkg) throw new Error('You need to instantiate using the \"new\" keyword.'); // make property of pkg._provider, which can properly set providers\n\n    Object.defineProperty(pkg, 'currentProvider', {\n      get: function () {\n        return pkg._requestManager.provider;\n      },\n      set: function (value) {\n        pkg.setProvider(value);\n      },\n      enumerable: true,\n      configurable: true\n    }); // make property of pkg._provider, which can properly set providers\n\n    Object.defineProperty(pkg, '_provider', {\n      get: function () {\n        return pkg._requestManager.provider;\n      },\n      set: function (value) {\n        pkg.setProvider(value);\n      },\n      enumerable: true,\n      configurable: true\n    }); // inherit from parent package or create a new RequestManager\n\n    if (args[0] && args[0]._requestManager) {\n      pkg._requestManager = args[0]._requestManager;\n    } else {\n      pkg._requestManager = new Manager(args[0], args[1]);\n    }\n\n    pkg.providers = Manager.providers; // add SETPROVIDER function (don't overwrite if already existing)\n\n    if (!pkg.setProvider) {\n      pkg.setProvider = function (provider, net) {\n        pkg._requestManager.setProvider(provider, net);\n\n        return true;\n      };\n    }\n\n    pkg.setRequestManager = function (manager) {\n      pkg._requestManager = manager;\n    }; // attach batch request creation\n\n\n    pkg.BatchRequest = BatchManager.bind(null, pkg._requestManager);\n  },\n  providers: Manager.providers\n};","map":{"version":3,"names":["Manager","BatchManager","require","module","exports","packageInit","pkg","args","Error","Object","defineProperty","get","_requestManager","provider","set","value","setProvider","enumerable","configurable","providers","net","setRequestManager","manager","BatchRequest","bind"],"sources":["C:/Users/acer/node_modules/caver-js/packages/caver-core/src/index.js"],"sourcesContent":["/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-core/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nconst { Manager, BatchManager } = require('../../caver-core-requestmanager')\n\nmodule.exports = {\n    packageInit: function(pkg, args) {\n        if (!pkg) throw new Error('You need to instantiate using the \"new\" keyword.')\n\n        // make property of pkg._provider, which can properly set providers\n        Object.defineProperty(pkg, 'currentProvider', {\n            get: function() {\n                return pkg._requestManager.provider\n            },\n            set: function(value) {\n                pkg.setProvider(value)\n            },\n            enumerable: true,\n            configurable: true,\n        })\n\n        // make property of pkg._provider, which can properly set providers\n        Object.defineProperty(pkg, '_provider', {\n            get: function() {\n                return pkg._requestManager.provider\n            },\n            set: function(value) {\n                pkg.setProvider(value)\n            },\n            enumerable: true,\n            configurable: true,\n        })\n\n        // inherit from parent package or create a new RequestManager\n        if (args[0] && args[0]._requestManager) {\n            pkg._requestManager = args[0]._requestManager\n        } else {\n            pkg._requestManager = new Manager(args[0], args[1])\n        }\n\n        pkg.providers = Manager.providers\n\n        // add SETPROVIDER function (don't overwrite if already existing)\n        if (!pkg.setProvider) {\n            pkg.setProvider = function(provider, net) {\n                pkg._requestManager.setProvider(provider, net)\n                return true\n            }\n        }\n\n        pkg.setRequestManager = function(manager) {\n            pkg._requestManager = manager\n        }\n\n        // attach batch request creation\n        pkg.BatchRequest = BatchManager.bind(null, pkg._requestManager)\n    },\n    providers: Manager.providers,\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM;EAAEA,OAAF;EAAWC;AAAX,IAA4BC,OAAO,CAAC,iCAAD,CAAzC;;AAEAC,MAAM,CAACC,OAAP,GAAiB;EACbC,WAAW,EAAE,UAASC,GAAT,EAAcC,IAAd,EAAoB;IAC7B,IAAI,CAACD,GAAL,EAAU,MAAM,IAAIE,KAAJ,CAAU,kDAAV,CAAN,CADmB,CAG7B;;IACAC,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2B,iBAA3B,EAA8C;MAC1CK,GAAG,EAAE,YAAW;QACZ,OAAOL,GAAG,CAACM,eAAJ,CAAoBC,QAA3B;MACH,CAHyC;MAI1CC,GAAG,EAAE,UAASC,KAAT,EAAgB;QACjBT,GAAG,CAACU,WAAJ,CAAgBD,KAAhB;MACH,CANyC;MAO1CE,UAAU,EAAE,IAP8B;MAQ1CC,YAAY,EAAE;IAR4B,CAA9C,EAJ6B,CAe7B;;IACAT,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2B,WAA3B,EAAwC;MACpCK,GAAG,EAAE,YAAW;QACZ,OAAOL,GAAG,CAACM,eAAJ,CAAoBC,QAA3B;MACH,CAHmC;MAIpCC,GAAG,EAAE,UAASC,KAAT,EAAgB;QACjBT,GAAG,CAACU,WAAJ,CAAgBD,KAAhB;MACH,CANmC;MAOpCE,UAAU,EAAE,IAPwB;MAQpCC,YAAY,EAAE;IARsB,CAAxC,EAhB6B,CA2B7B;;IACA,IAAIX,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAJ,CAAQK,eAAvB,EAAwC;MACpCN,GAAG,CAACM,eAAJ,GAAsBL,IAAI,CAAC,CAAD,CAAJ,CAAQK,eAA9B;IACH,CAFD,MAEO;MACHN,GAAG,CAACM,eAAJ,GAAsB,IAAIZ,OAAJ,CAAYO,IAAI,CAAC,CAAD,CAAhB,EAAqBA,IAAI,CAAC,CAAD,CAAzB,CAAtB;IACH;;IAEDD,GAAG,CAACa,SAAJ,GAAgBnB,OAAO,CAACmB,SAAxB,CAlC6B,CAoC7B;;IACA,IAAI,CAACb,GAAG,CAACU,WAAT,EAAsB;MAClBV,GAAG,CAACU,WAAJ,GAAkB,UAASH,QAAT,EAAmBO,GAAnB,EAAwB;QACtCd,GAAG,CAACM,eAAJ,CAAoBI,WAApB,CAAgCH,QAAhC,EAA0CO,GAA1C;;QACA,OAAO,IAAP;MACH,CAHD;IAIH;;IAEDd,GAAG,CAACe,iBAAJ,GAAwB,UAASC,OAAT,EAAkB;MACtChB,GAAG,CAACM,eAAJ,GAAsBU,OAAtB;IACH,CAFD,CA5C6B,CAgD7B;;;IACAhB,GAAG,CAACiB,YAAJ,GAAmBtB,YAAY,CAACuB,IAAb,CAAkB,IAAlB,EAAwBlB,GAAG,CAACM,eAA5B,CAAnB;EACH,CAnDY;EAoDbO,SAAS,EAAEnB,OAAO,CAACmB;AApDN,CAAjB"},"metadata":{},"sourceType":"script"}