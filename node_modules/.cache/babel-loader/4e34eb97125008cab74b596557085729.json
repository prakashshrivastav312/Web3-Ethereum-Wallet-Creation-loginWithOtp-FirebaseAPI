{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst typeFields_1 = require('../../typeFields');\n\nfunction decode(keyVal) {\n  if (keyVal.key[0] !== typeFields_1.InputTypes.TAP_MERKLE_ROOT || keyVal.key.length !== 1) {\n    throw new Error('Decode Error: could not decode tapMerkleRoot with key 0x' + keyVal.key.toString('hex'));\n  }\n\n  if (!check(keyVal.value)) {\n    throw new Error('Decode Error: tapMerkleRoot not a 32-byte hash');\n  }\n\n  return keyVal.value;\n}\n\nexports.decode = decode;\n\nfunction encode(value) {\n  const key = Buffer.from([typeFields_1.InputTypes.TAP_MERKLE_ROOT]);\n  return {\n    key,\n    value\n  };\n}\n\nexports.encode = encode;\nexports.expected = 'Buffer';\n\nfunction check(data) {\n  return Buffer.isBuffer(data) && data.length === 32;\n}\n\nexports.check = check;\n\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapMerkleRoot === undefined;\n}\n\nexports.canAdd = canAdd;","map":{"version":3,"names":["Object","defineProperty","exports","value","typeFields_1","require","decode","keyVal","key","InputTypes","TAP_MERKLE_ROOT","length","Error","toString","check","encode","Buffer","from","expected","data","isBuffer","canAdd","currentData","newData","tapMerkleRoot","undefined"],"sources":["C:/Users/acer/node_modules/bip174/src/lib/converter/input/tapMerkleRoot.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst typeFields_1 = require('../../typeFields');\nfunction decode(keyVal) {\n  if (\n    keyVal.key[0] !== typeFields_1.InputTypes.TAP_MERKLE_ROOT ||\n    keyVal.key.length !== 1\n  ) {\n    throw new Error(\n      'Decode Error: could not decode tapMerkleRoot with key 0x' +\n        keyVal.key.toString('hex'),\n    );\n  }\n  if (!check(keyVal.value)) {\n    throw new Error('Decode Error: tapMerkleRoot not a 32-byte hash');\n  }\n  return keyVal.value;\n}\nexports.decode = decode;\nfunction encode(value) {\n  const key = Buffer.from([typeFields_1.InputTypes.TAP_MERKLE_ROOT]);\n  return { key, value };\n}\nexports.encode = encode;\nexports.expected = 'Buffer';\nfunction check(data) {\n  return Buffer.isBuffer(data) && data.length === 32;\n}\nexports.check = check;\nfunction canAdd(currentData, newData) {\n  return !!currentData && !!newData && currentData.tapMerkleRoot === undefined;\n}\nexports.canAdd = canAdd;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;EACtB,IACEA,MAAM,CAACC,GAAP,CAAW,CAAX,MAAkBJ,YAAY,CAACK,UAAb,CAAwBC,eAA1C,IACAH,MAAM,CAACC,GAAP,CAAWG,MAAX,KAAsB,CAFxB,EAGE;IACA,MAAM,IAAIC,KAAJ,CACJ,6DACEL,MAAM,CAACC,GAAP,CAAWK,QAAX,CAAoB,KAApB,CAFE,CAAN;EAID;;EACD,IAAI,CAACC,KAAK,CAACP,MAAM,CAACJ,KAAR,CAAV,EAA0B;IACxB,MAAM,IAAIS,KAAJ,CAAU,gDAAV,CAAN;EACD;;EACD,OAAOL,MAAM,CAACJ,KAAd;AACD;;AACDD,OAAO,CAACI,MAAR,GAAiBA,MAAjB;;AACA,SAASS,MAAT,CAAgBZ,KAAhB,EAAuB;EACrB,MAAMK,GAAG,GAAGQ,MAAM,CAACC,IAAP,CAAY,CAACb,YAAY,CAACK,UAAb,CAAwBC,eAAzB,CAAZ,CAAZ;EACA,OAAO;IAAEF,GAAF;IAAOL;EAAP,CAAP;AACD;;AACDD,OAAO,CAACa,MAAR,GAAiBA,MAAjB;AACAb,OAAO,CAACgB,QAAR,GAAmB,QAAnB;;AACA,SAASJ,KAAT,CAAeK,IAAf,EAAqB;EACnB,OAAOH,MAAM,CAACI,QAAP,CAAgBD,IAAhB,KAAyBA,IAAI,CAACR,MAAL,KAAgB,EAAhD;AACD;;AACDT,OAAO,CAACY,KAAR,GAAgBA,KAAhB;;AACA,SAASO,MAAT,CAAgBC,WAAhB,EAA6BC,OAA7B,EAAsC;EACpC,OAAO,CAAC,CAACD,WAAF,IAAiB,CAAC,CAACC,OAAnB,IAA8BD,WAAW,CAACE,aAAZ,KAA8BC,SAAnE;AACD;;AACDvB,OAAO,CAACmB,MAAR,GAAiBA,MAAjB"},"metadata":{},"sourceType":"script"}