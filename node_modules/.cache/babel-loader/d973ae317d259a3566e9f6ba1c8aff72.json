{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst utils = __importStar(require(\"./utils\"));\n\nconst transaction_1 = __importDefault(require(\"./parse/transaction\"));\n\nconst common_1 = require(\"../common\");\n\nfunction attachTransactionDate(connection, tx) {\n  if (tx.date) {\n    return Promise.resolve(tx);\n  }\n\n  const ledgerVersion = tx.ledger_index || tx.LedgerSequence;\n\n  if (!ledgerVersion) {\n    return new Promise(() => {\n      const error = new common_1.errors.NotFoundError('Transaction has not been validated yet; try again later');\n      error.data = {\n        details: '(ledger_index and LedgerSequence not found in tx)'\n      };\n      throw error;\n    });\n  }\n\n  const request = {\n    command: 'ledger',\n    ledger_index: ledgerVersion\n  };\n  return connection.request(request).then(data => {\n    if (typeof data.ledger.close_time === 'number') {\n      return Object.assign({\n        date: data.ledger.close_time\n      }, tx);\n    }\n\n    throw new common_1.errors.UnexpectedError('Ledger missing close_time');\n  }).catch(error => {\n    if (error instanceof common_1.errors.UnexpectedError) {\n      throw error;\n    }\n\n    throw new common_1.errors.NotFoundError('Transaction ledger not found');\n  });\n}\n\nfunction isTransactionInRange(tx, options) {\n  return (!options.minLedgerVersion || tx.ledger_index >= options.minLedgerVersion) && (!options.maxLedgerVersion || tx.ledger_index <= options.maxLedgerVersion);\n}\n\nfunction convertError(connection, options, error) {\n  let shouldUseNotFoundError = false;\n\n  if (error.data && error.data.error === 'txnNotFound' || error.message === 'txnNotFound') {\n    shouldUseNotFoundError = true;\n  }\n\n  const _error = shouldUseNotFoundError ? new common_1.errors.NotFoundError('Transaction not found') : error;\n\n  if (_error instanceof common_1.errors.NotFoundError) {\n    return utils.hasCompleteLedgerRange(connection, options.minLedgerVersion, options.maxLedgerVersion).then(hasCompleteLedgerRange => {\n      if (!hasCompleteLedgerRange) {\n        return utils.isPendingLedgerVersion(connection, options.maxLedgerVersion).then(isPendingLedgerVersion => {\n          return isPendingLedgerVersion ? new common_1.errors.PendingLedgerVersionError() : new common_1.errors.MissingLedgerHistoryError();\n        });\n      }\n\n      return _error;\n    });\n  }\n\n  return Promise.resolve(_error);\n}\n\nfunction formatResponse(options, tx) {\n  if (tx.validated !== true || !isTransactionInRange(tx, options)) {\n    throw new common_1.errors.NotFoundError('Transaction not found');\n  }\n\n  return transaction_1.default(tx, options.includeRawTransaction);\n}\n\nfunction getTransaction(id) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return __awaiter(this, void 0, void 0, function* () {\n    common_1.validate.getTransaction({\n      id,\n      options\n    });\n\n    const _options = yield utils.ensureLedgerVersion.call(this, options);\n\n    try {\n      const tx = yield this.request('tx', {\n        transaction: id,\n        binary: false\n      });\n      const txWithDate = yield attachTransactionDate(this.connection, tx);\n      return formatResponse(_options, txWithDate);\n    } catch (error) {\n      throw yield convertError(this.connection, _options, error);\n    }\n  });\n}\n\nexports.default = getTransaction;","map":{"version":3,"mappings":"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","names":["attachTransactionDate","connection","tx","date","Promise","resolve","ledgerVersion","ledger_index","LedgerSequence","error","common_1","NotFoundError","data","details","request","command","then","ledger","close_time","Object","assign","UnexpectedError","catch","isTransactionInRange","options","minLedgerVersion","maxLedgerVersion","convertError","shouldUseNotFoundError","message","_error","utils","hasCompleteLedgerRange","isPendingLedgerVersion","PendingLedgerVersionError","MissingLedgerHistoryError","formatResponse","validated","transaction_1","includeRawTransaction","getTransaction","id","_options","ensureLedgerVersion","call","transaction","binary","txWithDate","exports"],"sourceRoot":"","sources":["../../../src/ledger/transaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}