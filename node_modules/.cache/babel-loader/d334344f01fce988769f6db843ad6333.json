{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendMethods = void 0;\n\nconst Subscriptions = require('web3-core-subscriptions').subscriptions;\n\nconst formatters_1 = require(\"./formatters\");\n\nconst extendMethods = function (web3) {\n  web3.extend({\n    property: 'eth',\n    methods: [new web3.extend.Method({\n      name: 'getEnergy',\n      call: 'eth_getEnergy',\n      params: 2,\n      inputFormatter: [web3.extend.utils.toAddress, web3.extend.formatters.inputDefaultBlockNumberFormatter],\n      outputFormatter: web3.extend.formatters.outputBigNumberFormatter\n    }), new web3.extend.Method({\n      name: 'getTransaction',\n      call: 'eth_getTransactionByHash',\n      params: 1,\n      inputFormatter: [null],\n      outputFormatter: web3.extend.formatters.outputTransactionFormatter\n    }), new web3.extend.Method({\n      name: 'getTransactionReceipt',\n      call: 'eth_getTransactionReceipt',\n      params: 1,\n      inputFormatter: [null],\n      outputFormatter: web3.extend.formatters.outputTransactionReceiptFormatter\n    }), new web3.extend.Method({\n      name: 'sendTransaction',\n      call: 'eth_sendTransaction',\n      accounts: web3.eth.accounts,\n      params: 1,\n      inputFormatter: [web3.extend.formatters.inputTransactionFormatter]\n    }), new web3.extend.Method({\n      name: 'getBlockRef',\n      call: 'eth_getBlockRef',\n      params: 0\n    }), new web3.extend.Method({\n      name: 'getChainTag',\n      call: 'eth_getChainTag',\n      params: 0\n    }), new web3.extend.Method({\n      name: 'getPastLogs',\n      call: 'eth_getLogs',\n      params: 1,\n      inputFormatter: [web3.extend.formatters.inputLogFormatter],\n      outputFormatter: web3.extend.formatters.outputLogFormatter\n    })]\n  }); // subscriptions\n\n  const subs = new Subscriptions({\n    name: 'subscribe',\n    type: 'eth',\n    subscriptions: {\n      newBlockHeaders: {\n        subscriptionName: 'newHeads',\n        params: 1,\n        inputFormatter: [formatters_1.inputBlockFilterFormatter],\n\n        subscriptionHandler(subscriptionMsg) {\n          if (subscriptionMsg.error) {\n            this.emit('error', subscriptionMsg.error); // web3-core-subscriptions/subscription sets a default value for this.callback\n\n            this.callback(subscriptionMsg.error, null, this);\n          } else {\n            const result = web3.extend.formatters.outputBlockFormatter(subscriptionMsg.data);\n\n            if (result.removed) {\n              this.emit('changed', result);\n            } else {\n              this.emit('data', result);\n            } // web3-core-subscriptions/subscription sets a default value for this.callback\n\n\n            this.callback(null, result, this);\n          }\n        }\n\n      },\n      logs: {\n        params: 1,\n        inputFormatter: [formatters_1.inputLogFilterFormatter],\n\n        subscriptionHandler(subscriptionMsg) {\n          if (subscriptionMsg.error) {\n            this.emit('error', subscriptionMsg.error); // web3-core-subscriptions/subscription sets a default value for this.callback\n\n            this.callback(subscriptionMsg.error, null, this);\n          } else {\n            const result = web3.extend.formatters.outputLogFormatter(subscriptionMsg.data);\n\n            if (result.removed) {\n              this.emit('changed', result);\n            } else {\n              this.emit('data', result);\n            } // web3-core-subscriptions/subscription sets a default value for this.callback\n\n\n            this.callback(null, result, this);\n          }\n        }\n\n      },\n      transfers: {\n        params: 1,\n        inputFormatter: [formatters_1.inputTransferFilterFormatter],\n\n        subscriptionHandler(subscriptionMsg) {\n          if (subscriptionMsg.error) {\n            this.emit('error', subscriptionMsg.error); // web3-core-subscriptions/subscription sets a default value for this.callback\n\n            this.callback(subscriptionMsg.error, null, this);\n          } else {\n            const result = subscriptionMsg.data;\n\n            if (result.removed) {\n              this.emit('changed', result);\n            } else {\n              this.emit('data', result);\n            } // web3-core-subscriptions/subscription sets a default value for this.callback\n\n\n            this.callback(null, result, this);\n          }\n        }\n\n      }\n    }\n  });\n  subs.attachToObject(web3.eth);\n  subs.setRequestManager(web3.eth._requestManager);\n  web3.eth.clearSubscriptions = web3.eth._requestManager.clearSubscriptions.bind(web3.eth._requestManager);\n};\n\nexports.extendMethods = extendMethods;","map":{"version":3,"mappings":"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","names":["Subscriptions","require","subscriptions","extendMethods","web3","extend","property","methods","Method","name","call","params","inputFormatter","utils","toAddress","formatters","inputDefaultBlockNumberFormatter","outputFormatter","outputBigNumberFormatter","outputTransactionFormatter","outputTransactionReceiptFormatter","accounts","eth","inputTransactionFormatter","inputLogFormatter","outputLogFormatter","subs","type","newBlockHeaders","subscriptionName","formatters_1","subscriptionHandler","subscriptionMsg","error","emit","callback","result","outputBlockFormatter","data","removed","logs","transfers","attachToObject","setRequestManager","_requestManager","clearSubscriptions","bind","exports"],"sourceRoot":"","sources":["../../src/extend/methods.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}