{"ast":null,"code":"const cbor = require('borc');\n\nmodule.exports = class CborIndefiniteLengthArray {\n  constructor(elements) {\n    this.elements = elements;\n  }\n\n  encodeCBOR(encoder) {\n    return encoder.push(Buffer.concat([Buffer.from([0x9f]), // indefinite array prefix\n    ...this.elements.map(e => cbor.encode(e)), Buffer.from([0xff]) // end of array\n    ]));\n  }\n\n};","map":{"version":3,"names":["cbor","require","module","exports","CborIndefiniteLengthArray","constructor","elements","encodeCBOR","encoder","push","Buffer","concat","from","map","e","encode"],"sources":["C:/Users/acer/node_modules/cardano-crypto.js/utils/CborIndefiniteLengthArray.js"],"sourcesContent":["const cbor = require('borc')\nmodule.exports = class CborIndefiniteLengthArray {\n  constructor(elements) {\n    this.elements = elements\n  }\n\n  encodeCBOR(encoder) {\n    return encoder.push(\n      Buffer.concat([\n        Buffer.from([0x9f]), // indefinite array prefix\n        ...this.elements.map((e) => cbor.encode(e)),\n        Buffer.from([0xff]), // end of array\n      ])\n    )\n  }\n}\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACAC,MAAM,CAACC,OAAP,GAAiB,MAAMC,yBAAN,CAAgC;EAC/CC,WAAW,CAACC,QAAD,EAAW;IACpB,KAAKA,QAAL,GAAgBA,QAAhB;EACD;;EAEDC,UAAU,CAACC,OAAD,EAAU;IAClB,OAAOA,OAAO,CAACC,IAAR,CACLC,MAAM,CAACC,MAAP,CAAc,CACZD,MAAM,CAACE,IAAP,CAAY,CAAC,IAAD,CAAZ,CADY,EACS;IACrB,GAAG,KAAKN,QAAL,CAAcO,GAAd,CAAmBC,CAAD,IAAOd,IAAI,CAACe,MAAL,CAAYD,CAAZ,CAAzB,CAFS,EAGZJ,MAAM,CAACE,IAAP,CAAY,CAAC,IAAD,CAAZ,CAHY,CAGS;IAHT,CAAd,CADK,CAAP;EAOD;;AAb8C,CAAjD"},"metadata":{},"sourceType":"script"}