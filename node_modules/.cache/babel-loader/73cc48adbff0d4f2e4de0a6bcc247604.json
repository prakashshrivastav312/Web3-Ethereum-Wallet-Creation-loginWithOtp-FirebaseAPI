{"ast":null,"code":"\"use strict\";\n/**\n # @harmony-js/utils\n\nThis package provides a collection of utility apis for unit conversions like `fromWei`, `toWei`, `hexToNumber`, `numberToHex`, `isAddress`, etc.\n\n## Installation\n\n```\nnpm install @harmony-js/utils\n```\n\n## Usage\n\nAvailable units\n```\nconst { Units } = require('@harmony-js/utils');\n\n[Units.wei, '1'], // 1 wei\n[Units.Kwei, '1000'], // 1e3 wei\n[Units.Mwei, '1000000'], // 1e6 wei\n[Units.Gwei, '1000000000'], // 1e9 wei\n[Units.szabo, '1000000000000'], // 1e12 wei\n[Units.finney, '1000000000000000'], // 1e15 wei\n[Units.ether, '1000000000000000000'], // 1e18 wei\n[Units.one, '1000000000000000000'], // 1e18 wei\n[Units.Kether, '1000000000000000000000'], // 1e21 wei\n[Units.Mether, '1000000000000000000000000'], // 1e24 wei\n[Units.Gether, '1000000000000000000000000000'], // 1e27 wei\n[Units.Tether, '1000000000000000000000000000000'], // 1e30 wei\n```\n\nConverting between different units\n```javascript\nconst { Units, Unit, numberToString, add0xToString, fromWei, toWei, numToStr} = require('@harmony-js/utils');\nconst { BN } = require('@harmony-js/crypto');\n\nconst one = new Unit('1').asOne();\nconst oneToGwei = one.toGwei();\nconsole.log(oneToGwei);\n\n// numberToString\nconst num = 123;\nconst str = numberToString(num)\nconsole.log(str);\n\n// add0xToString\nconst str = '12345';\nconst expected = add0xToString(str)\nconsole.log(expected);\n\n// fromWei\nconst Wei = new BN('1000000000000000000');\nconst expected = fromWei(Wei, Units.one);\nconsole.log(expected);\n\n// toWei\nconst one = new BN('1');\nconst expected = toWei(one, hmy.utils.Units.one);\nconst num = numToStr(expected);\nconsole.log(num);\n```\n *\n * @packageDocumentation\n * @module harmony-utils\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddressSuffix = exports.HDPath = exports.HarmonyCore = exports.defaultConfig = exports.ChainID = exports.ChainType = void 0;\nvar ChainType;\n\n(function (ChainType) {\n  ChainType[\"Harmony\"] = \"hmy\";\n  ChainType[\"Ethereum\"] = \"eth\";\n})(ChainType = exports.ChainType || (exports.ChainType = {}));\n\nvar ChainID;\n\n(function (ChainID) {\n  ChainID[ChainID[\"Default\"] = 0] = \"Default\";\n  ChainID[ChainID[\"EthMainnet\"] = 1] = \"EthMainnet\";\n  ChainID[ChainID[\"Morden\"] = 2] = \"Morden\";\n  ChainID[ChainID[\"Ropsten\"] = 3] = \"Ropsten\";\n  ChainID[ChainID[\"Rinkeby\"] = 4] = \"Rinkeby\";\n  ChainID[ChainID[\"RootstockMainnet\"] = 30] = \"RootstockMainnet\";\n  ChainID[ChainID[\"RootstockTestnet\"] = 31] = \"RootstockTestnet\";\n  ChainID[ChainID[\"Kovan\"] = 42] = \"Kovan\";\n  ChainID[ChainID[\"EtcMainnet\"] = 61] = \"EtcMainnet\";\n  ChainID[ChainID[\"EtcTestnet\"] = 62] = \"EtcTestnet\";\n  ChainID[ChainID[\"Geth\"] = 1337] = \"Geth\";\n  ChainID[ChainID[\"Ganache\"] = 0] = \"Ganache\";\n  ChainID[ChainID[\"HmyMainnet\"] = 1] = \"HmyMainnet\";\n  ChainID[ChainID[\"HmyTestnet\"] = 2] = \"HmyTestnet\";\n  ChainID[ChainID[\"HmyLocal\"] = 2] = \"HmyLocal\";\n  ChainID[ChainID[\"HmyPangaea\"] = 3] = \"HmyPangaea\";\n})(ChainID = exports.ChainID || (exports.ChainID = {}));\n/** @hidden */\n\n\nexports.defaultConfig = {\n  Default: {\n    Chain_ID: ChainID.HmyLocal,\n    Chain_Type: ChainType.Harmony,\n    Chain_URL: 'http://localhost:9500',\n    Network_ID: 'Local'\n  },\n  DefaultWS: {\n    Chain_ID: ChainID.HmyLocal,\n    Chain_Type: ChainType.Harmony,\n    Chain_URL: 'ws://localhost:9800',\n    Network_ID: 'LocalWS'\n  }\n};\n/** @hidden */\n\nvar HarmonyCore =\n/** @class */\nfunction () {\n  function HarmonyCore(chainType, chainId) {\n    if (chainId === void 0) {\n      chainId = exports.defaultConfig.Default.Chain_ID;\n    }\n\n    this.chainType = chainType;\n    this.chainId = chainId;\n  }\n\n  Object.defineProperty(HarmonyCore.prototype, \"chainPrefix\", {\n    get: function () {\n      switch (this.chainType) {\n        case ChainType.Ethereum:\n          {\n            return 'eth';\n          }\n\n        case ChainType.Harmony:\n          {\n            return 'hmy';\n          }\n\n        default:\n          {\n            return 'hmy';\n          }\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HarmonyCore.prototype, \"getChainId\", {\n    get: function () {\n      return this.chainId;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  HarmonyCore.prototype.setChainId = function (chainId) {\n    this.chainId = chainId;\n  };\n\n  HarmonyCore.prototype.setChainType = function (chainType) {\n    this.chainType = chainType;\n  };\n\n  return HarmonyCore;\n}();\n\nexports.HarmonyCore = HarmonyCore;\n/** @hidden */\n\nexports.HDPath = \"m/44'/1023'/0'/0/\";\n/** @hidden */\n\nexports.AddressSuffix = '-';","map":{"version":3,"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,IAAYA,SAAZ;;AAAA,WAAYA,SAAZ,EAAqB;EACnBA;EACAA;AACD,CAHD,EAAYA,SAAS,GAATC,0CAAS,EAAT,CAAZ;;AAKA,IAAYC,OAAZ;;AAAA,WAAYA,OAAZ,EAAmB;EACjBA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACD,CAjBD,EAAYA,OAAO,GAAPD,sCAAO,EAAP,CAAZ;AAmBA;;;AACaA,wBAAgB;EAC3BE,OAAO,EAAE;IACPC,QAAQ,EAAEF,OAAO,CAACG,QADX;IAEPC,UAAU,EAAEN,SAAS,CAACO,OAFf;IAGPC,SAAS,EAAE,uBAHJ;IAIPC,UAAU,EAAE;EAJL,CADkB;EAO3BC,SAAS,EAAE;IACTN,QAAQ,EAAEF,OAAO,CAACG,QADT;IAETC,UAAU,EAAEN,SAAS,CAACO,OAFb;IAGTC,SAAS,EAAE,qBAHF;IAITC,UAAU,EAAE;EAJH;AAPgB,CAAhB;AAeb;;AACA;AAAA;AAAA;EAGE,qBAAYE,SAAZ,EAAkCC,OAAlC,EAAmF;IAAjD;MAAAA,UAAmBX,sBAAcE,OAAd,CAAsBC,QAAzC;IAAiD;;IACjF,KAAKO,SAAL,GAAiBA,SAAjB;IACA,KAAKC,OAAL,GAAeA,OAAf;EACD;;EACDC,sBAAIC,qBAAJ,EAAI,aAAJ,EAAe;SAAf;MACE,QAAQ,KAAKH,SAAb;QACE,KAAKX,SAAS,CAACe,QAAf;UAAyB;YACvB,OAAO,KAAP;UACD;;QACD,KAAKf,SAAS,CAACO,OAAf;UAAwB;YACtB,OAAO,KAAP;UACD;;QACD;UAAS;YACP,OAAO,KAAP;UACD;MATH;IAWD,CAZc;qBAAA;;EAAA,CAAf;EAaAM,sBAAIC,qBAAJ,EAAI,YAAJ,EAAc;SAAd;MACE,OAAO,KAAKF,OAAZ;IACD,CAFa;qBAAA;;EAAA,CAAd;;EAGOE,mCAAP,UAAkBF,OAAlB,EAAkC;IAChC,KAAKA,OAAL,GAAeA,OAAf;EACD,CAFM;;EAGAE,qCAAP,UAAoBH,SAApB,EAAwC;IACtC,KAAKA,SAAL,GAAiBA,SAAjB;EACD,CAFM;;EAGT;AAAC,CA7BD;;AAAsBV;AA+BtB;;AACaA,iBAAS,mBAAT;AAEb;;AACaA,wBAAgB,GAAhB","names":["ChainType","exports","ChainID","Default","Chain_ID","HmyLocal","Chain_Type","Harmony","Chain_URL","Network_ID","DefaultWS","chainType","chainId","Object","HarmonyCore","Ethereum"],"sourceRoot":"","sources":["../src/chain.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}