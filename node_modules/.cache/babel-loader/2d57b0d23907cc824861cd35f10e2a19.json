{"ast":null,"code":"\"use strict\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransferDogeBlockchain = exports.FromUTXODoge = void 0;\n\nconst class_transformer_1 = require(\"class-transformer\");\n\nconst class_validator_1 = require(\"class-validator\");\n\nconst TransferBtcBasedBlockchain_1 = require(\"./TransferBtcBasedBlockchain\");\n\nclass FromUTXODoge extends TransferBtcBasedBlockchain_1.FromUTXO {}\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.IsNumberString(), __metadata(\"design:type\", String)], FromUTXODoge.prototype, \"value\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.Length(30, 50), __metadata(\"design:type\", String)], FromUTXODoge.prototype, \"address\", void 0);\n\nexports.FromUTXODoge = FromUTXODoge;\n\nclass TransferDogeBlockchain {}\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.ValidateNested({\n  each: true\n}), class_transformer_1.Type(() => FromUTXODoge), __metadata(\"design:type\", Array)], TransferDogeBlockchain.prototype, \"fromUTXO\", void 0);\n\n__decorate([class_validator_1.ArrayNotEmpty(), class_validator_1.ValidateNested({\n  each: true\n}), class_transformer_1.Type(() => TransferBtcBasedBlockchain_1.To), __metadata(\"design:type\", Array)], TransferDogeBlockchain.prototype, \"to\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.IsNumberString(), __metadata(\"design:type\", String)], TransferDogeBlockchain.prototype, \"fee\", void 0);\n\n__decorate([class_validator_1.IsNotEmpty(), class_validator_1.Length(30, 50), __metadata(\"design:type\", String)], TransferDogeBlockchain.prototype, \"changeAddress\", void 0);\n\nexports.TransferDogeBlockchain = TransferDogeBlockchain;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAaA,YAAb,SAAkCC,qCAAlC,CAA0C;;AAGtCC,YAFCC,8BAED,EADCA,kCACD;;AAIAD,YAFCC,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AAPJC;;AAWA,MAAaC,sBAAb,CAAmC;;AAK/BH,YAHCC,8BAGD,EAFCA,iCAAe;EAACG,IAAI,EAAE;AAAP,CAAf,CAED,EADCC,yBAAK,MAAMP,YAAX,CACD;;AAKAE,YAHCC,iCAGD,EAFCA,iCAAe;EAACG,IAAI,EAAE;AAAP,CAAf,CAED,EADCC,yBAAK,MAAMN,+BAAX,CACD;;AAIAC,YAFCC,8BAED,EADCA,kCACD;;AAIAD,YAFCC,8BAED,EADCA,yBAAO,EAAP,EAAW,EAAX,CACD;;AAlBJC","names":["FromUTXODoge","TransferBtcBasedBlockchain_1","__decorate","class_validator_1","exports","TransferDogeBlockchain","each","class_transformer_1"],"sourceRoot":"","sources":["../../../../src/model/request/TransferDogeBlockchain.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}