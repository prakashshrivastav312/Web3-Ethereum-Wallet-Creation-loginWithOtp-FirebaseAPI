{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.manageBuyOffer = manageBuyOffer;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _jsXdr = require('js-xdr');\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns a XDR ManageBuyOfferOp. A \"manage buy offer\" operation creates, updates, or\n * deletes a buy offer.\n * @function\n * @alias Operation.manageBuyOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.buyAmount - The total amount you're buying. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `buying` in terms of `selling`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.ManageBuyOfferOp} Manage Buy Offer operation\n */\n\n\nfunction manageBuyOffer(opts) {\n  var attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n\n  if (!this.isValidAmount(opts.buyAmount, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('buyAmount'));\n  }\n\n  attributes.buyAmount = this._toXDRAmount(opts.buyAmount);\n\n  if ((0, _isUndefined2.default)(opts.price)) {\n    throw new TypeError('price argument is required');\n  }\n\n  attributes.price = this._toXDRPrice(opts.price);\n\n  if (!(0, _isUndefined2.default)(opts.offerId)) {\n    opts.offerId = opts.offerId.toString();\n  } else {\n    opts.offerId = '0';\n  }\n\n  attributes.offerId = _jsXdr.Hyper.fromString(opts.offerId);\n  var manageBuyOfferOp = new _stellarXdr_generated2.default.ManageBuyOfferOp(attributes);\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.manageBuyOffer(manageBuyOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","manageBuyOffer","_isUndefined","require","_isUndefined2","_interopRequireDefault","_jsXdr","_stellarXdr_generated","_stellarXdr_generated2","obj","__esModule","default","opts","attributes","selling","toXDRObject","buying","isValidAmount","buyAmount","TypeError","constructAmountRequirementsError","_toXDRAmount","price","_toXDRPrice","offerId","toString","Hyper","fromString","manageBuyOfferOp","ManageBuyOfferOp","opAttributes","body","OperationBody","setSourceAccount","Operation"],"sources":["C:/Users/acer/node_modules/stellar-base/lib/operations/manage_buy_offer.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.manageBuyOffer = manageBuyOffer;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _jsXdr = require('js-xdr');\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a XDR ManageBuyOfferOp. A \"manage buy offer\" operation creates, updates, or\n * deletes a buy offer.\n * @function\n * @alias Operation.manageBuyOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.buyAmount - The total amount you're buying. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `buying` in terms of `selling`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {number|string} [opts.offerId ] - If `0`, will create a new offer (default). Otherwise, edits an exisiting offer.\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.ManageBuyOfferOp} Manage Buy Offer operation\n */\nfunction manageBuyOffer(opts) {\n  var attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n  if (!this.isValidAmount(opts.buyAmount, true)) {\n    throw new TypeError(this.constructAmountRequirementsError('buyAmount'));\n  }\n  attributes.buyAmount = this._toXDRAmount(opts.buyAmount);\n  if ((0, _isUndefined2.default)(opts.price)) {\n    throw new TypeError('price argument is required');\n  }\n  attributes.price = this._toXDRPrice(opts.price);\n\n  if (!(0, _isUndefined2.default)(opts.offerId)) {\n    opts.offerId = opts.offerId.toString();\n  } else {\n    opts.offerId = '0';\n  }\n\n  attributes.offerId = _jsXdr.Hyper.fromString(opts.offerId);\n  var manageBuyOfferOp = new _stellarXdr_generated2.default.ManageBuyOfferOp(attributes);\n\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.manageBuyOffer(manageBuyOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBA,cAAzB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACH,YAAD,CAA1C;;AAEA,IAAII,MAAM,GAAGH,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAII,qBAAqB,GAAGJ,OAAO,CAAC,oCAAD,CAAnC;;AAEA,IAAIK,sBAAsB,GAAGH,sBAAsB,CAACE,qBAAD,CAAnD;;AAEA,SAASF,sBAAT,CAAgCI,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEE,OAAO,EAAEF;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASR,cAAT,CAAwBW,IAAxB,EAA8B;EAC5B,IAAIC,UAAU,GAAG,EAAjB;EACAA,UAAU,CAACC,OAAX,GAAqBF,IAAI,CAACE,OAAL,CAAaC,WAAb,EAArB;EACAF,UAAU,CAACG,MAAX,GAAoBJ,IAAI,CAACI,MAAL,CAAYD,WAAZ,EAApB;;EACA,IAAI,CAAC,KAAKE,aAAL,CAAmBL,IAAI,CAACM,SAAxB,EAAmC,IAAnC,CAAL,EAA+C;IAC7C,MAAM,IAAIC,SAAJ,CAAc,KAAKC,gCAAL,CAAsC,WAAtC,CAAd,CAAN;EACD;;EACDP,UAAU,CAACK,SAAX,GAAuB,KAAKG,YAAL,CAAkBT,IAAI,CAACM,SAAvB,CAAvB;;EACA,IAAI,CAAC,GAAGd,aAAa,CAACO,OAAlB,EAA2BC,IAAI,CAACU,KAAhC,CAAJ,EAA4C;IAC1C,MAAM,IAAIH,SAAJ,CAAc,4BAAd,CAAN;EACD;;EACDN,UAAU,CAACS,KAAX,GAAmB,KAAKC,WAAL,CAAiBX,IAAI,CAACU,KAAtB,CAAnB;;EAEA,IAAI,CAAC,CAAC,GAAGlB,aAAa,CAACO,OAAlB,EAA2BC,IAAI,CAACY,OAAhC,CAAL,EAA+C;IAC7CZ,IAAI,CAACY,OAAL,GAAeZ,IAAI,CAACY,OAAL,CAAaC,QAAb,EAAf;EACD,CAFD,MAEO;IACLb,IAAI,CAACY,OAAL,GAAe,GAAf;EACD;;EAEDX,UAAU,CAACW,OAAX,GAAqBlB,MAAM,CAACoB,KAAP,CAAaC,UAAb,CAAwBf,IAAI,CAACY,OAA7B,CAArB;EACA,IAAII,gBAAgB,GAAG,IAAIpB,sBAAsB,CAACG,OAAvB,CAA+BkB,gBAAnC,CAAoDhB,UAApD,CAAvB;EAEA,IAAIiB,YAAY,GAAG,EAAnB;EACAA,YAAY,CAACC,IAAb,GAAoBvB,sBAAsB,CAACG,OAAvB,CAA+BqB,aAA/B,CAA6C/B,cAA7C,CAA4D2B,gBAA5D,CAApB;EACA,KAAKK,gBAAL,CAAsBH,YAAtB,EAAoClB,IAApC;EAEA,OAAO,IAAIJ,sBAAsB,CAACG,OAAvB,CAA+BuB,SAAnC,CAA6CJ,YAA7C,CAAP;AACD"},"metadata":{},"sourceType":"script"}