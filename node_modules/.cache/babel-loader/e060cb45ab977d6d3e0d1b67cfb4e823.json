{"ast":null,"code":"/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst {\n  last\n} = require('lodash');\n\nconst builtinsMiddleware = require('./builtins');\n\nfunction Middleware() {\n  this.list = [];\n}\n/**\n * getMiddlewares return `this.list` from Middleware instance.\n * @return {Array} `this.list`\n */\n\n\nMiddleware.prototype.getMiddlewares = function () {\n  return this.list;\n};\n/**\n * registerMiddleware - add middleware function to `this.list`\n * @param  {function} middleware function to be registered.\n */\n\n\nMiddleware.prototype.registerMiddleware = function (middleware) {\n  if (typeof middleware !== 'function') throw Error('Middleware should be a function');\n  this.list.push(middleware);\n};\n\nMiddleware.prototype.applyMiddleware = function (data, type, sendRequest) {\n  // Tags `type` property to check whether middleware is consumed from outbound or not.\n  // If consumed as outbound, It tags `data` as 'request'\n  // Otherwise, It tags `data` as 'response'\n  data.type = type === 'outbound' ? 'request' : 'response'; // inbound\n  // For outbound middleware, it must have RPC send function as last middleware.\n\n  handleMiddleware(sendRequest ? // `RPC send` is concatenated as a last middleware.\n  this.list.concat(sendRequest) : // last middleware is not a `RPC send`.\n  [...this.list], // `bypass` function is only available for outbound middleware\n  data.type === 'request' && sendRequest)(data);\n};\n\nfunction handleMiddleware(list, bypass) {\n  return function recur(data, next) {\n    // When there are no more item in `this.list`,\n    // it means all middleware function has been consumed.\n    if (list.length === 0) return; // When the argument is put into `next()` function,\n    // The `data` argument get changed in next middleware, taking it as first argument `data`.\n\n    if (arguments.length === 2 && typeof next !== 'function') data = next; // Shift first item from `this.list`, consuming it as a middleware function.\n\n    const fn = list.shift(); // Consuming middleware function,\n    // It would be used outerspace as `caver.use(data, next, bypass)`.\n\n    fn(data, recur.bind(null, data), function _bypass() {\n      // `_bypass` function only works when `bypass` value is true.\n      if (!bypass) return; // When the argument is put into `bypass()` function,\n      // The `data` arugment get changed in next middleware which is last one, request manager,\n      // taking it as first argument `data`.\n\n      if (arguments.length !== 0) data = arguments[0]; // `_bypass` function skips all middleware list except last one.\n\n      list = [last(list)];\n      recur(data);\n    });\n  };\n} // Generate `Middleware` instance, it would be exported as a *singleton*.\n\n\nconst middleware = new Middleware();\nmodule.exports = middleware;\nmodule.exports.builtin = builtinsMiddleware;","map":{"version":3,"names":["last","require","builtinsMiddleware","Middleware","list","prototype","getMiddlewares","registerMiddleware","middleware","Error","push","applyMiddleware","data","type","sendRequest","handleMiddleware","concat","bypass","recur","next","length","arguments","fn","shift","bind","_bypass","module","exports","builtin"],"sources":["C:/Users/acer/node_modules/caver-js/packages/caver-middleware/src/index.js"],"sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst { last } = require('lodash')\nconst builtinsMiddleware = require('./builtins')\n\nfunction Middleware() {\n    this.list = []\n}\n\n/**\n * getMiddlewares return `this.list` from Middleware instance.\n * @return {Array} `this.list`\n */\nMiddleware.prototype.getMiddlewares = function() {\n    return this.list\n}\n\n/**\n * registerMiddleware - add middleware function to `this.list`\n * @param  {function} middleware function to be registered.\n */\nMiddleware.prototype.registerMiddleware = function(middleware) {\n    if (typeof middleware !== 'function') throw Error('Middleware should be a function')\n    this.list.push(middleware)\n}\n\nMiddleware.prototype.applyMiddleware = function(data, type, sendRequest) {\n    // Tags `type` property to check whether middleware is consumed from outbound or not.\n    // If consumed as outbound, It tags `data` as 'request'\n    // Otherwise, It tags `data` as 'response'\n    data.type = type === 'outbound' ? 'request' : 'response' // inbound\n\n    // For outbound middleware, it must have RPC send function as last middleware.\n    handleMiddleware(\n        sendRequest\n            ? // `RPC send` is concatenated as a last middleware.\n              this.list.concat(sendRequest)\n            : // last middleware is not a `RPC send`.\n              [...this.list],\n        // `bypass` function is only available for outbound middleware\n        data.type === 'request' && sendRequest\n    )(data)\n}\n\nfunction handleMiddleware(list, bypass) {\n    return function recur(data, next) {\n        // When there are no more item in `this.list`,\n        // it means all middleware function has been consumed.\n        if (list.length === 0) return\n\n        // When the argument is put into `next()` function,\n        // The `data` argument get changed in next middleware, taking it as first argument `data`.\n        if (arguments.length === 2 && typeof next !== 'function') data = next\n\n        // Shift first item from `this.list`, consuming it as a middleware function.\n        const fn = list.shift()\n\n        // Consuming middleware function,\n        // It would be used outerspace as `caver.use(data, next, bypass)`.\n        fn(data, recur.bind(null, data), function _bypass() {\n            // `_bypass` function only works when `bypass` value is true.\n            if (!bypass) return\n\n            // When the argument is put into `bypass()` function,\n            // The `data` arugment get changed in next middleware which is last one, request manager,\n            // taking it as first argument `data`.\n            if (arguments.length !== 0) data = arguments[0]\n\n            // `_bypass` function skips all middleware list except last one.\n            list = [last(list)]\n            recur(data)\n        })\n    }\n}\n\n// Generate `Middleware` instance, it would be exported as a *singleton*.\nconst middleware = new Middleware()\n\nmodule.exports = middleware\nmodule.exports.builtin = builtinsMiddleware\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM;EAAEA;AAAF,IAAWC,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,YAAD,CAAlC;;AAEA,SAASE,UAAT,GAAsB;EAClB,KAAKC,IAAL,GAAY,EAAZ;AACH;AAED;AACA;AACA;AACA;;;AACAD,UAAU,CAACE,SAAX,CAAqBC,cAArB,GAAsC,YAAW;EAC7C,OAAO,KAAKF,IAAZ;AACH,CAFD;AAIA;AACA;AACA;AACA;;;AACAD,UAAU,CAACE,SAAX,CAAqBE,kBAArB,GAA0C,UAASC,UAAT,EAAqB;EAC3D,IAAI,OAAOA,UAAP,KAAsB,UAA1B,EAAsC,MAAMC,KAAK,CAAC,iCAAD,CAAX;EACtC,KAAKL,IAAL,CAAUM,IAAV,CAAeF,UAAf;AACH,CAHD;;AAKAL,UAAU,CAACE,SAAX,CAAqBM,eAArB,GAAuC,UAASC,IAAT,EAAeC,IAAf,EAAqBC,WAArB,EAAkC;EACrE;EACA;EACA;EACAF,IAAI,CAACC,IAAL,GAAYA,IAAI,KAAK,UAAT,GAAsB,SAAtB,GAAkC,UAA9C,CAJqE,CAIZ;EAEzD;;EACAE,gBAAgB,CACZD,WAAW,GACL;EACA,KAAKV,IAAL,CAAUY,MAAV,CAAiBF,WAAjB,CAFK,GAGL;EACA,CAAC,GAAG,KAAKV,IAAT,CALM,EAMZ;EACAQ,IAAI,CAACC,IAAL,KAAc,SAAd,IAA2BC,WAPf,CAAhB,CAQEF,IARF;AASH,CAhBD;;AAkBA,SAASG,gBAAT,CAA0BX,IAA1B,EAAgCa,MAAhC,EAAwC;EACpC,OAAO,SAASC,KAAT,CAAeN,IAAf,EAAqBO,IAArB,EAA2B;IAC9B;IACA;IACA,IAAIf,IAAI,CAACgB,MAAL,KAAgB,CAApB,EAAuB,OAHO,CAK9B;IACA;;IACA,IAAIC,SAAS,CAACD,MAAV,KAAqB,CAArB,IAA0B,OAAOD,IAAP,KAAgB,UAA9C,EAA0DP,IAAI,GAAGO,IAAP,CAP5B,CAS9B;;IACA,MAAMG,EAAE,GAAGlB,IAAI,CAACmB,KAAL,EAAX,CAV8B,CAY9B;IACA;;IACAD,EAAE,CAACV,IAAD,EAAOM,KAAK,CAACM,IAAN,CAAW,IAAX,EAAiBZ,IAAjB,CAAP,EAA+B,SAASa,OAAT,GAAmB;MAChD;MACA,IAAI,CAACR,MAAL,EAAa,OAFmC,CAIhD;MACA;MACA;;MACA,IAAII,SAAS,CAACD,MAAV,KAAqB,CAAzB,EAA4BR,IAAI,GAAGS,SAAS,CAAC,CAAD,CAAhB,CAPoB,CAShD;;MACAjB,IAAI,GAAG,CAACJ,IAAI,CAACI,IAAD,CAAL,CAAP;MACAc,KAAK,CAACN,IAAD,CAAL;IACH,CAZC,CAAF;EAaH,CA3BD;AA4BH,C,CAED;;;AACA,MAAMJ,UAAU,GAAG,IAAIL,UAAJ,EAAnB;AAEAuB,MAAM,CAACC,OAAP,GAAiBnB,UAAjB;AACAkB,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyB1B,kBAAzB"},"metadata":{},"sourceType":"script"}