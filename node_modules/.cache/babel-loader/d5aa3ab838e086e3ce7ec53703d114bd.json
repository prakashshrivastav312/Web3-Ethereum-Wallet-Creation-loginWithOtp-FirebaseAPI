{"ast":null,"code":"\"use strict\";\n/**\n * @packageDocumentation\n * @module harmony-crypto\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decryptPhrase = exports.encryptPhrase = exports.decrypt = exports.encrypt = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar aes_js_1 = tslib_1.__importDefault(require(\"aes-js\")); // import scrypt from 'scrypt.js';\n\n\nvar scrypt_shim_1 = tslib_1.__importDefault(require(\"scrypt-shim\"));\n\nvar pbkdf2_1 = require(\"pbkdf2\");\n\nvar uuid_1 = tslib_1.__importDefault(require(\"uuid\"));\n\nvar utils_1 = require(\"@harmony-js/utils\");\n\nvar random_1 = require(\"./random\");\n\nvar keyTool_1 = require(\"./keyTool\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar keccak256_1 = require(\"./keccak256\");\n/** @hidden */\n\n\nvar DEFAULT_ALGORITHM = 'aes-128-ctr';\n/**\n * getDerivedKey\n *\n * NOTE: only scrypt and pbkdf2 are supported.\n *\n * @param {Buffer} key - the passphrase\n * @param {KDF} kdf - the key derivation function to be used\n * @param {KDFParams} params - params for the kdf\n *\n * @returns {Promise<Buffer>}\n */\n\nfunction getDerivedKey(key, kdf, params) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var salt, _a, c, dklen, _b, n, r, p, dklen;\n\n    return tslib_1.__generator(this, function (_c) {\n      salt = Buffer.from(params.salt, 'hex');\n\n      if (kdf === 'pbkdf2') {\n        _a = params, c = _a.c, dklen = _a.dklen;\n        return [2\n        /*return*/\n        , pbkdf2_1.pbkdf2Sync(key, salt, c, dklen, 'sha256')];\n      }\n\n      if (kdf === 'scrypt') {\n        _b = params, n = _b.n, r = _b.r, p = _b.p, dklen = _b.dklen;\n        return [2\n        /*return*/\n        , scrypt_shim_1.default(key, salt, n, r, p, dklen)];\n      }\n\n      throw new Error('Only pbkdf2 and scrypt are supported');\n    });\n  });\n}\n/**\n * This method will map the current Account object to V3Keystore object.\n *\n * @method encrypt\n *\n * @param {string} privateKey\n * @param {string} password\n * @param {object} options\n *\n * @return {{version, id, address, crypto}}\n */\n\n\nexports.encrypt = function (privateKey, password, options) {\n  return tslib_1.__awaiter(void 0, void 0, void 0, function () {\n    var address, salt, iv, kdf, level, uuidRandom, n, kdfparams, derivedKey, cipher, ciphertext, mac;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!utils_1.isPrivateKey(privateKey)) {\n            throw new Error('privateKey is not correct');\n          }\n\n          if (typeof password !== 'string') {\n            throw new Error('password is not found');\n          }\n\n          address = keyTool_1.getAddressFromPrivateKey(privateKey);\n          salt = random_1.randomBytes(32);\n          iv = Buffer.from(random_1.randomBytes(16), 'hex');\n          kdf = options !== undefined ? options.kdf ? options.kdf : 'scrypt' : 'scrypt';\n          level = options !== undefined ? options.level ? options.level : 8192 : 8192;\n          uuidRandom = options !== undefined ? options.uuid : undefined;\n          n = kdf === 'pbkdf2' ? 262144 : level;\n          kdfparams = {\n            salt: salt,\n            n: n,\n            r: 8,\n            p: 1,\n            dklen: 32\n          };\n          return [4\n          /*yield*/\n          , getDerivedKey(Buffer.from(password), kdf, kdfparams)];\n\n        case 1:\n          derivedKey = _a.sent();\n          cipher = new aes_js_1.default.ModeOfOperation.ctr(derivedKey.slice(0, 16), new aes_js_1.default.Counter(iv));\n\n          if (!cipher) {\n            throw new Error('Unsupported cipher');\n          }\n\n          ciphertext = Buffer.from(cipher.encrypt(Buffer.from(privateKey.replace('0x', ''), 'hex')));\n          mac = keccak256_1.keccak256(bytes_1.concat([derivedKey.slice(16, 32), ciphertext]));\n          return [2\n          /*return*/\n          , JSON.stringify({\n            version: 3,\n            id: uuid_1.default.v4({\n              random: uuidRandom || bytes_1.hexToIntArray(random_1.randomBytes(16))\n            }),\n            address: address.toLowerCase().replace('0x', ''),\n            crypto: {\n              ciphertext: ciphertext.toString('hex'),\n              cipherparams: {\n                iv: iv.toString('hex')\n              },\n              cipher: DEFAULT_ALGORITHM,\n              kdf: kdf,\n              kdfparams: kdfparams,\n              mac: mac.replace('0x', '')\n            }\n          })];\n      }\n    });\n  });\n};\n/**\n * @function decrypt\n * @param  {Keystore} keystore - Keystore file\n * @param  {string} password - password string\n * @return {string} privateKey\n */\n\n\nexports.decrypt = function (keystore, password) {\n  return tslib_1.__awaiter(void 0, void 0, void 0, function () {\n    var ciphertext, iv, kdfparams, derivedKey, mac, CTR, cipher, decrypted;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ciphertext = Buffer.from(keystore.crypto.ciphertext, 'hex');\n          iv = Buffer.from(keystore.crypto.cipherparams.iv, 'hex');\n          kdfparams = keystore.crypto.kdfparams;\n          return [4\n          /*yield*/\n          , getDerivedKey(Buffer.from(password), keystore.crypto.kdf, kdfparams)];\n\n        case 1:\n          derivedKey = _a.sent();\n          mac = keccak256_1.keccak256(bytes_1.concat([derivedKey.slice(16, 32), ciphertext])).replace('0x', '');\n\n          if (mac.toUpperCase() !== keystore.crypto.mac.toUpperCase()) {\n            return [2\n            /*return*/\n            , Promise.reject(new Error('Failed to decrypt.'))];\n          }\n\n          CTR = aes_js_1.default.ModeOfOperation.ctr;\n          cipher = new CTR(derivedKey.slice(0, 16), new aes_js_1.default.Counter(iv));\n          decrypted = '0x' + Buffer.from(cipher.decrypt(ciphertext)).toString('hex');\n          return [2\n          /*return*/\n          , decrypted];\n      }\n    });\n  });\n};\n/**\n * encrypt Phrase\n */\n\n\nexports.encryptPhrase = function (phrase, password, options) {\n  return tslib_1.__awaiter(void 0, void 0, void 0, function () {\n    var salt, iv, kdf, level, uuidRandom, n, kdfparams, derivedKey, cipher, ciphertext, mac;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (typeof password !== 'string') {\n            throw new Error('password is not found');\n          }\n\n          salt = random_1.randomBytes(32);\n          iv = Buffer.from(random_1.randomBytes(16), 'hex');\n          kdf = options !== undefined ? options.kdf ? options.kdf : 'scrypt' : 'scrypt';\n          level = options !== undefined ? options.level ? options.level : 8192 : 8192;\n          uuidRandom = options !== undefined ? options.uuid : undefined;\n          n = kdf === 'pbkdf2' ? 262144 : level;\n          kdfparams = {\n            salt: salt,\n            n: n,\n            r: 8,\n            p: 1,\n            dklen: 32\n          };\n          return [4\n          /*yield*/\n          , getDerivedKey(Buffer.from(password), kdf, kdfparams)];\n\n        case 1:\n          derivedKey = _a.sent();\n          cipher = new aes_js_1.default.ModeOfOperation.ctr(derivedKey.slice(0, 16), new aes_js_1.default.Counter(iv));\n\n          if (!cipher) {\n            throw new Error('Unsupported cipher');\n          }\n\n          ciphertext = Buffer.from(cipher.encrypt(Buffer.from(phrase)));\n          mac = keccak256_1.keccak256(bytes_1.concat([derivedKey.slice(16, 32), ciphertext]));\n          return [2\n          /*return*/\n          , JSON.stringify({\n            version: 3,\n            id: uuid_1.default.v4({\n              random: uuidRandom || bytes_1.hexToIntArray(random_1.randomBytes(16))\n            }),\n            crypto: {\n              ciphertext: ciphertext.toString('hex'),\n              cipherparams: {\n                iv: iv.toString('hex')\n              },\n              cipher: DEFAULT_ALGORITHM,\n              kdf: kdf,\n              kdfparams: kdfparams,\n              mac: mac.replace('0x', '')\n            }\n          })];\n      }\n    });\n  });\n};\n/**\n * decrypt phrase\n */\n\n\nexports.decryptPhrase = function (keystore, password) {\n  return tslib_1.__awaiter(void 0, void 0, void 0, function () {\n    var result;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , exports.decrypt(keystore, password)];\n\n        case 1:\n          result = _a.sent();\n          return [2\n          /*return*/\n          , Buffer.from(result.replace('0x', ''), 'hex').toString()];\n      }\n    });\n  });\n};","map":{"version":3,"mappings":"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","names":["DEFAULT_ALGORITHM","getDerivedKey","key","kdf","params","salt","Buffer","from","_a","c","dklen","pbkdf2_1","_b","n","r","p","scrypt_shim_1","Error","exports","privateKey","password","options","utils_1","address","keyTool_1","random_1","iv","undefined","level","uuidRandom","uuid","kdfparams","derivedKey","cipher","aes_js_1","ModeOfOperation","ctr","slice","Counter","ciphertext","encrypt","replace","mac","keccak256_1","bytes_1","JSON","stringify","version","id","uuid_1","v4","random","toLowerCase","crypto","toString","cipherparams","keystore","toUpperCase","Promise","reject","CTR","decrypted","decrypt","phrase","result"],"sourceRoot":"","sources":["../src/keystore.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}