{"ast":null,"code":"'use strict'; // <scriptSig> {serialized scriptPubKey script}\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst bscript = require('../../script');\n\nconst p2ms = require('../multisig');\n\nconst p2pk = require('../pubkey');\n\nconst p2pkh = require('../pubkeyhash');\n\nconst p2wpkho = require('../witnesspubkeyhash/output');\n\nconst p2wsho = require('../witnessscripthash/output');\n\nfunction check(script, allowIncomplete) {\n  const chunks = bscript.decompile(script);\n  if (chunks.length < 1) return false;\n  const lastChunk = chunks[chunks.length - 1];\n  if (!Buffer.isBuffer(lastChunk)) return false;\n  const scriptSigChunks = bscript.decompile(bscript.compile(chunks.slice(0, -1)));\n  const redeemScriptChunks = bscript.decompile(lastChunk); // is redeemScript a valid script?\n\n  if (!redeemScriptChunks) return false; // is redeemScriptSig push only?\n\n  if (!bscript.isPushOnly(scriptSigChunks)) return false; // is witness?\n\n  if (chunks.length === 1) {\n    return p2wsho.check(redeemScriptChunks) || p2wpkho.check(redeemScriptChunks);\n  } // match types\n\n\n  if (p2pkh.input.check(scriptSigChunks) && p2pkh.output.check(redeemScriptChunks)) return true;\n  if (p2ms.input.check(scriptSigChunks, allowIncomplete) && p2ms.output.check(redeemScriptChunks)) return true;\n  if (p2pk.input.check(scriptSigChunks) && p2pk.output.check(redeemScriptChunks)) return true;\n  return false;\n}\n\nexports.check = check;\n\ncheck.toJSON = () => {\n  return 'scriptHash input';\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","bscript","require","p2ms","p2pk","p2pkh","p2wpkho","p2wsho","check","script","allowIncomplete","chunks","decompile","length","lastChunk","Buffer","isBuffer","scriptSigChunks","compile","slice","redeemScriptChunks","isPushOnly","input","output","toJSON"],"sources":["C:/Users/acer/node_modules/bitcoinjs-lib/src/templates/scripthash/input.js"],"sourcesContent":["'use strict';\n// <scriptSig> {serialized scriptPubKey script}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst p2ms = require('../multisig');\nconst p2pk = require('../pubkey');\nconst p2pkh = require('../pubkeyhash');\nconst p2wpkho = require('../witnesspubkeyhash/output');\nconst p2wsho = require('../witnessscripthash/output');\nfunction check(script, allowIncomplete) {\n  const chunks = bscript.decompile(script);\n  if (chunks.length < 1) return false;\n  const lastChunk = chunks[chunks.length - 1];\n  if (!Buffer.isBuffer(lastChunk)) return false;\n  const scriptSigChunks = bscript.decompile(\n    bscript.compile(chunks.slice(0, -1)),\n  );\n  const redeemScriptChunks = bscript.decompile(lastChunk);\n  // is redeemScript a valid script?\n  if (!redeemScriptChunks) return false;\n  // is redeemScriptSig push only?\n  if (!bscript.isPushOnly(scriptSigChunks)) return false;\n  // is witness?\n  if (chunks.length === 1) {\n    return (\n      p2wsho.check(redeemScriptChunks) || p2wpkho.check(redeemScriptChunks)\n    );\n  }\n  // match types\n  if (\n    p2pkh.input.check(scriptSigChunks) &&\n    p2pkh.output.check(redeemScriptChunks)\n  )\n    return true;\n  if (\n    p2ms.input.check(scriptSigChunks, allowIncomplete) &&\n    p2ms.output.check(redeemScriptChunks)\n  )\n    return true;\n  if (\n    p2pk.input.check(scriptSigChunks) &&\n    p2pk.output.check(redeemScriptChunks)\n  )\n    return true;\n  return false;\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'scriptHash input';\n};\n"],"mappings":"AAAA,a,CACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,aAAD,CAApB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,eAAD,CAArB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,6BAAD,CAAvB;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,6BAAD,CAAtB;;AACA,SAASM,KAAT,CAAeC,MAAf,EAAuBC,eAAvB,EAAwC;EACtC,MAAMC,MAAM,GAAGV,OAAO,CAACW,SAAR,CAAkBH,MAAlB,CAAf;EACA,IAAIE,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB,OAAO,KAAP;EACvB,MAAMC,SAAS,GAAGH,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAAxB;EACA,IAAI,CAACE,MAAM,CAACC,QAAP,CAAgBF,SAAhB,CAAL,EAAiC,OAAO,KAAP;EACjC,MAAMG,eAAe,GAAGhB,OAAO,CAACW,SAAR,CACtBX,OAAO,CAACiB,OAAR,CAAgBP,MAAM,CAACQ,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAhB,CADsB,CAAxB;EAGA,MAAMC,kBAAkB,GAAGnB,OAAO,CAACW,SAAR,CAAkBE,SAAlB,CAA3B,CARsC,CAStC;;EACA,IAAI,CAACM,kBAAL,EAAyB,OAAO,KAAP,CAVa,CAWtC;;EACA,IAAI,CAACnB,OAAO,CAACoB,UAAR,CAAmBJ,eAAnB,CAAL,EAA0C,OAAO,KAAP,CAZJ,CAatC;;EACA,IAAIN,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;IACvB,OACEN,MAAM,CAACC,KAAP,CAAaY,kBAAb,KAAoCd,OAAO,CAACE,KAAR,CAAcY,kBAAd,CADtC;EAGD,CAlBqC,CAmBtC;;;EACA,IACEf,KAAK,CAACiB,KAAN,CAAYd,KAAZ,CAAkBS,eAAlB,KACAZ,KAAK,CAACkB,MAAN,CAAaf,KAAb,CAAmBY,kBAAnB,CAFF,EAIE,OAAO,IAAP;EACF,IACEjB,IAAI,CAACmB,KAAL,CAAWd,KAAX,CAAiBS,eAAjB,EAAkCP,eAAlC,KACAP,IAAI,CAACoB,MAAL,CAAYf,KAAZ,CAAkBY,kBAAlB,CAFF,EAIE,OAAO,IAAP;EACF,IACEhB,IAAI,CAACkB,KAAL,CAAWd,KAAX,CAAiBS,eAAjB,KACAb,IAAI,CAACmB,MAAL,CAAYf,KAAZ,CAAkBY,kBAAlB,CAFF,EAIE,OAAO,IAAP;EACF,OAAO,KAAP;AACD;;AACDrB,OAAO,CAACS,KAAR,GAAgBA,KAAhB;;AACAA,KAAK,CAACgB,MAAN,GAAe,MAAM;EACnB,OAAO,kBAAP;AACD,CAFD"},"metadata":{},"sourceType":"script"}