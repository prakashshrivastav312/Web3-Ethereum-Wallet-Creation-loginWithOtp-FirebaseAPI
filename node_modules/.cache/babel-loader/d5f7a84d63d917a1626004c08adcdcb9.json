{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPassiveSellOffer = createPassiveSellOffer;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Returns a XDR CreatePasiveSellOfferOp. A \"create passive offer\" operation creates an\n * offer that won't consume a counter offer that exactly matches this offer. This is\n * useful for offers just used as 1:1 exchanges for path payments. Use manage offer\n * to manage this offer after using this operation to create it.\n * @function\n * @alias Operation.createPassiveSellOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.CreatePassiveSellOfferOp} Create Passive Sell Offer operation\n */\n\n\nfunction createPassiveSellOffer(opts) {\n  var attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n\n  attributes.amount = this._toXDRAmount(opts.amount);\n\n  if ((0, _isUndefined2.default)(opts.price)) {\n    throw new TypeError('price argument is required');\n  }\n\n  attributes.price = this._toXDRPrice(opts.price);\n  var createPassiveSellOfferOp = new _stellarXdr_generated2.default.CreatePassiveSellOfferOp(attributes);\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.createPassiveSellOffer(createPassiveSellOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","createPassiveSellOffer","_isUndefined","require","_isUndefined2","_interopRequireDefault","_stellarXdr_generated","_stellarXdr_generated2","obj","__esModule","default","opts","attributes","selling","toXDRObject","buying","isValidAmount","amount","TypeError","constructAmountRequirementsError","_toXDRAmount","price","_toXDRPrice","createPassiveSellOfferOp","CreatePassiveSellOfferOp","opAttributes","body","OperationBody","setSourceAccount","Operation"],"sources":["C:/Users/acer/node_modules/stellar-base/lib/operations/create_passive_sell_offer.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPassiveSellOffer = createPassiveSellOffer;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a XDR CreatePasiveSellOfferOp. A \"create passive offer\" operation creates an\n * offer that won't consume a counter offer that exactly matches this offer. This is\n * useful for offers just used as 1:1 exchanges for path payments. Use manage offer\n * to manage this offer after using this operation to create it.\n * @function\n * @alias Operation.createPassiveSellOffer\n * @param {object} opts Options object\n * @param {Asset} opts.selling - What you're selling.\n * @param {Asset} opts.buying - What you're buying.\n * @param {string} opts.amount - The total amount you're selling. If 0, deletes the offer.\n * @param {number|string|BigNumber|Object} opts.price - Price of 1 unit of `selling` in terms of `buying`.\n * @param {number} opts.price.n - If `opts.price` is an object: the price numerator\n * @param {number} opts.price.d - If `opts.price` is an object: the price denominator\n * @param {string} [opts.source] - The source account (defaults to transaction source).\n * @throws {Error} Throws `Error` when the best rational approximation of `price` cannot be found.\n * @returns {xdr.CreatePassiveSellOfferOp} Create Passive Sell Offer operation\n */\nfunction createPassiveSellOffer(opts) {\n  var attributes = {};\n  attributes.selling = opts.selling.toXDRObject();\n  attributes.buying = opts.buying.toXDRObject();\n  if (!this.isValidAmount(opts.amount)) {\n    throw new TypeError(this.constructAmountRequirementsError('amount'));\n  }\n  attributes.amount = this._toXDRAmount(opts.amount);\n  if ((0, _isUndefined2.default)(opts.price)) {\n    throw new TypeError('price argument is required');\n  }\n  attributes.price = this._toXDRPrice(opts.price);\n  var createPassiveSellOfferOp = new _stellarXdr_generated2.default.CreatePassiveSellOfferOp(attributes);\n\n  var opAttributes = {};\n  opAttributes.body = _stellarXdr_generated2.default.OperationBody.createPassiveSellOffer(createPassiveSellOfferOp);\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,sBAAR,GAAiCA,sBAAjC;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,oBAAD,CAA1B;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACH,YAAD,CAA1C;;AAEA,IAAII,qBAAqB,GAAGH,OAAO,CAAC,oCAAD,CAAnC;;AAEA,IAAII,sBAAsB,GAAGF,sBAAsB,CAACC,qBAAD,CAAnD;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEE,OAAO,EAAEF;EAAX,CAArC;AAAwD;AAE/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASP,sBAAT,CAAgCU,IAAhC,EAAsC;EACpC,IAAIC,UAAU,GAAG,EAAjB;EACAA,UAAU,CAACC,OAAX,GAAqBF,IAAI,CAACE,OAAL,CAAaC,WAAb,EAArB;EACAF,UAAU,CAACG,MAAX,GAAoBJ,IAAI,CAACI,MAAL,CAAYD,WAAZ,EAApB;;EACA,IAAI,CAAC,KAAKE,aAAL,CAAmBL,IAAI,CAACM,MAAxB,CAAL,EAAsC;IACpC,MAAM,IAAIC,SAAJ,CAAc,KAAKC,gCAAL,CAAsC,QAAtC,CAAd,CAAN;EACD;;EACDP,UAAU,CAACK,MAAX,GAAoB,KAAKG,YAAL,CAAkBT,IAAI,CAACM,MAAvB,CAApB;;EACA,IAAI,CAAC,GAAGb,aAAa,CAACM,OAAlB,EAA2BC,IAAI,CAACU,KAAhC,CAAJ,EAA4C;IAC1C,MAAM,IAAIH,SAAJ,CAAc,4BAAd,CAAN;EACD;;EACDN,UAAU,CAACS,KAAX,GAAmB,KAAKC,WAAL,CAAiBX,IAAI,CAACU,KAAtB,CAAnB;EACA,IAAIE,wBAAwB,GAAG,IAAIhB,sBAAsB,CAACG,OAAvB,CAA+Bc,wBAAnC,CAA4DZ,UAA5D,CAA/B;EAEA,IAAIa,YAAY,GAAG,EAAnB;EACAA,YAAY,CAACC,IAAb,GAAoBnB,sBAAsB,CAACG,OAAvB,CAA+BiB,aAA/B,CAA6C1B,sBAA7C,CAAoEsB,wBAApE,CAApB;EACA,KAAKK,gBAAL,CAAsBH,YAAtB,EAAoCd,IAApC;EAEA,OAAO,IAAIJ,sBAAsB,CAACG,OAAvB,CAA+BmB,SAAnC,CAA6CJ,YAA7C,CAAP;AACD"},"metadata":{},"sourceType":"script"}