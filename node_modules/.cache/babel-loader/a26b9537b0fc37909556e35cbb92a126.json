{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddressValue = exports.AddressType = void 0;\n\nconst types_1 = require(\"./types\");\n\nclass AddressType extends types_1.PrimitiveType {\n  constructor() {\n    super(\"Address\");\n  }\n\n}\n\nexports.AddressType = AddressType;\n/**\n * An address fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\n\nclass AddressValue extends types_1.PrimitiveValue {\n  constructor(value) {\n    super(new AddressType());\n    this.value = value;\n  }\n  /**\n   * Returns whether two objects have the same value.\n   *\n   * @param other another AddressValue\n   */\n\n\n  equals(other) {\n    return this.value.equals(other.value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.AddressValue = AddressValue;","map":{"version":3,"mappings":";;;;;;;AAEA;;AAEA,MAAaA,WAAb,SAAiCC,qBAAjC,CAA8C;EAC1CC;IACI,MAAM,SAAN;EACH;;AAHyC;;AAA9CC;AAMA;;;;AAGA,MAAaC,YAAb,SAAkCH,sBAAlC,CAAgD;EAG5CC,YAAYG,KAAZ,EAA0B;IACtB,MAAM,IAAIL,WAAJ,EAAN;IACA,KAAKK,KAAL,GAAaA,KAAb;EACH;EAED;;;;;;;EAKAC,MAAM,CAACC,KAAD,EAAoB;IACtB,OAAO,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,KAAK,CAACF,KAAxB,CAAP;EACH;;EAEDG,OAAO;IACH,OAAO,KAAKH,KAAZ;EACH;;AAnB2C;;AAAhDF","names":["AddressType","types_1","constructor","exports","AddressValue","value","equals","other","valueOf"],"sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/address.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}