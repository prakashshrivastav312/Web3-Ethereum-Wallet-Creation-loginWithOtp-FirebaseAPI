{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.liquidityPoolDeposit = liquidityPoolDeposit;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Creates a liquidity pool deposit operation.\n *\n * @function\n * @alias Operation.liquidityPoolDeposit\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-deposit\n *\n * @param {object} opts - Options object\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\n * @param {string} opts.maxAmountA - Maximum amount of first asset to deposit.\n * @param {string} opts.maxAmountB - Maximum amount of second asset to deposit.\n * @param {number|string|BigNumber|Object} opts.minPrice -  Minimum depositA/depositB price.\n * @param {number} opts.minPrice.n - If `opts.minPrice` is an object: the price numerator\n * @param {number} opts.minPrice.d - If `opts.minPrice` is an object: the price denominator\n * @param {number|string|BigNumber|Object} opts.maxPrice -  Maximum depositA/depositB price.\n * @param {number} opts.maxPrice.n - If `opts.maxPrice` is an object: the price numerator\n * @param {number} opts.maxPrice.d - If `opts.maxPrice` is an object: the price denominator\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation} The resulting operation (xdr.LiquidityPoolDepositOp).\n */\n\n\nfunction liquidityPoolDeposit() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var liquidityPoolId = opts.liquidityPoolId,\n      maxAmountA = opts.maxAmountA,\n      maxAmountB = opts.maxAmountB,\n      minPrice = opts.minPrice,\n      maxPrice = opts.maxPrice;\n  var attributes = {};\n\n  if (!liquidityPoolId) {\n    throw new TypeError('liquidityPoolId argument is required');\n  }\n\n  attributes.liquidityPoolId = _stellarXdr_generated2.default.PoolId.fromXDR(liquidityPoolId, 'hex');\n\n  if (!this.isValidAmount(maxAmountA, true)) {\n    throw new TypeError('maxAmountA argument is required');\n  }\n\n  attributes.maxAmountA = this._toXDRAmount(maxAmountA);\n\n  if (!this.isValidAmount(maxAmountB, true)) {\n    throw new TypeError('maxAmountB argument is required');\n  }\n\n  attributes.maxAmountB = this._toXDRAmount(maxAmountB);\n\n  if ((0, _isUndefined2.default)(minPrice)) {\n    throw new TypeError('minPrice argument is required');\n  }\n\n  attributes.minPrice = this._toXDRPrice(minPrice);\n\n  if ((0, _isUndefined2.default)(maxPrice)) {\n    throw new TypeError('maxPrice argument is required');\n  }\n\n  attributes.maxPrice = this._toXDRPrice(maxPrice);\n  var liquidityPoolDepositOp = new _stellarXdr_generated2.default.LiquidityPoolDepositOp(attributes);\n  var opAttributes = {\n    body: _stellarXdr_generated2.default.OperationBody.liquidityPoolDeposit(liquidityPoolDepositOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","liquidityPoolDeposit","_isUndefined","require","_isUndefined2","_interopRequireDefault","_stellarXdr_generated","_stellarXdr_generated2","obj","__esModule","default","opts","arguments","length","undefined","liquidityPoolId","maxAmountA","maxAmountB","minPrice","maxPrice","attributes","TypeError","PoolId","fromXDR","isValidAmount","_toXDRAmount","_toXDRPrice","liquidityPoolDepositOp","LiquidityPoolDepositOp","opAttributes","body","OperationBody","setSourceAccount","Operation"],"sources":["C:/Users/acer/node_modules/stellar-base/lib/operations/liquidity_pool_deposit.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.liquidityPoolDeposit = liquidityPoolDeposit;\n\nvar _isUndefined = require('lodash/isUndefined');\n\nvar _isUndefined2 = _interopRequireDefault(_isUndefined);\n\nvar _stellarXdr_generated = require('../generated/stellar-xdr_generated');\n\nvar _stellarXdr_generated2 = _interopRequireDefault(_stellarXdr_generated);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Creates a liquidity pool deposit operation.\n *\n * @function\n * @alias Operation.liquidityPoolDeposit\n * @see https://developers.stellar.org/docs/start/list-of-operations/#liquidity-pool-deposit\n *\n * @param {object} opts - Options object\n * @param {string} opts.liquidityPoolId - The liquidity pool ID.\n * @param {string} opts.maxAmountA - Maximum amount of first asset to deposit.\n * @param {string} opts.maxAmountB - Maximum amount of second asset to deposit.\n * @param {number|string|BigNumber|Object} opts.minPrice -  Minimum depositA/depositB price.\n * @param {number} opts.minPrice.n - If `opts.minPrice` is an object: the price numerator\n * @param {number} opts.minPrice.d - If `opts.minPrice` is an object: the price denominator\n * @param {number|string|BigNumber|Object} opts.maxPrice -  Maximum depositA/depositB price.\n * @param {number} opts.maxPrice.n - If `opts.maxPrice` is an object: the price numerator\n * @param {number} opts.maxPrice.d - If `opts.maxPrice` is an object: the price denominator\n * @param {string} [opts.source] - The source account for the operation. Defaults to the transaction's source account.\n *\n * @returns {xdr.Operation} The resulting operation (xdr.LiquidityPoolDepositOp).\n */\nfunction liquidityPoolDeposit() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var liquidityPoolId = opts.liquidityPoolId,\n      maxAmountA = opts.maxAmountA,\n      maxAmountB = opts.maxAmountB,\n      minPrice = opts.minPrice,\n      maxPrice = opts.maxPrice;\n\n  var attributes = {};\n\n  if (!liquidityPoolId) {\n    throw new TypeError('liquidityPoolId argument is required');\n  }\n  attributes.liquidityPoolId = _stellarXdr_generated2.default.PoolId.fromXDR(liquidityPoolId, 'hex');\n\n  if (!this.isValidAmount(maxAmountA, true)) {\n    throw new TypeError('maxAmountA argument is required');\n  }\n  attributes.maxAmountA = this._toXDRAmount(maxAmountA);\n\n  if (!this.isValidAmount(maxAmountB, true)) {\n    throw new TypeError('maxAmountB argument is required');\n  }\n  attributes.maxAmountB = this._toXDRAmount(maxAmountB);\n\n  if ((0, _isUndefined2.default)(minPrice)) {\n    throw new TypeError('minPrice argument is required');\n  }\n  attributes.minPrice = this._toXDRPrice(minPrice);\n\n  if ((0, _isUndefined2.default)(maxPrice)) {\n    throw new TypeError('maxPrice argument is required');\n  }\n  attributes.maxPrice = this._toXDRPrice(maxPrice);\n\n  var liquidityPoolDepositOp = new _stellarXdr_generated2.default.LiquidityPoolDepositOp(attributes);\n  var opAttributes = {\n    body: _stellarXdr_generated2.default.OperationBody.liquidityPoolDeposit(liquidityPoolDepositOp)\n  };\n  this.setSourceAccount(opAttributes, opts);\n\n  return new _stellarXdr_generated2.default.Operation(opAttributes);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}