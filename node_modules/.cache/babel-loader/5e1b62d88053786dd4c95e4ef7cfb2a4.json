{"ast":null,"code":"'use strict';\n\nconst {\n  BigNumber\n} = require('bignumber.js');\n\nconst CID = require('cids');\n\nconst configure = require('../lib/configure');\n\nconst toUrlSearchParams = require('../lib/to-url-search-params');\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/stat')>}\n   */\n  async function stat() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers\n    });\n    return toCoreInterface(await res.json());\n  }\n\n  return stat;\n});\n\nfunction toCoreInterface(res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => new CID(k['/'])),\n    peers: res.Peers || [],\n    blocksReceived: new BigNumber(res.BlocksReceived),\n    dataReceived: new BigNumber(res.DataReceived),\n    blocksSent: new BigNumber(res.BlocksSent),\n    dataSent: new BigNumber(res.DataSent),\n    dupBlksReceived: new BigNumber(res.DupBlksReceived),\n    dupDataReceived: new BigNumber(res.DupDataReceived)\n  };\n}","map":{"version":3,"names":["BigNumber","require","CID","configure","toUrlSearchParams","module","exports","api","stat","options","res","post","searchParams","timeout","signal","headers","toCoreInterface","json","provideBufLen","ProvideBufLen","wantlist","Wantlist","map","k","peers","Peers","blocksReceived","BlocksReceived","dataReceived","DataReceived","blocksSent","BlocksSent","dataSent","DataSent","dupBlksReceived","DupBlksReceived","dupDataReceived","DupDataReceived"],"sources":["C:/Users/acer/node_modules/ipfs-http-client/src/bitswap/stat.js"],"sourcesContent":["'use strict'\n\nconst { BigNumber } = require('bignumber.js')\nconst CID = require('cids')\nconst configure = require('../lib/configure')\nconst toUrlSearchParams = require('../lib/to-url-search-params')\n\nmodule.exports = configure(api => {\n  /**\n   * @type {import('..').Implements<typeof import('ipfs-core/src/components/bitswap/stat')>}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      timeout: options.timeout,\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n  return stat\n})\n\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map(k => new CID(k['/'])),\n    peers: (res.Peers || []),\n    blocksReceived: new BigNumber(res.BlocksReceived),\n    dataReceived: new BigNumber(res.DataReceived),\n    blocksSent: new BigNumber(res.BlocksSent),\n    dataSent: new BigNumber(res.DataSent),\n    dupBlksReceived: new BigNumber(res.DupBlksReceived),\n    dupDataReceived: new BigNumber(res.DupDataReceived)\n  }\n}\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAgBC,OAAO,CAAC,cAAD,CAA7B;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,6BAAD,CAAjC;;AAEAI,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;EAChC;AACF;AACA;EACE,eAAeC,IAAf,GAAmC;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,cAAT,EAAyB;MACzCC,YAAY,EAAER,iBAAiB,CAACK,OAAD,CADU;MAEzCI,OAAO,EAAEJ,OAAO,CAACI,OAFwB;MAGzCC,MAAM,EAAEL,OAAO,CAACK,MAHyB;MAIzCC,OAAO,EAAEN,OAAO,CAACM;IAJwB,CAAzB,CAAlB;IAOA,OAAOC,eAAe,CAAC,MAAMN,GAAG,CAACO,IAAJ,EAAP,CAAtB;EACD;;EACD,OAAOT,IAAP;AACD,CAfyB,CAA1B;;AAiBA,SAASQ,eAAT,CAA0BN,GAA1B,EAA+B;EAC7B,OAAO;IACLQ,aAAa,EAAER,GAAG,CAACS,aADd;IAELC,QAAQ,EAAE,CAACV,GAAG,CAACW,QAAJ,IAAgB,EAAjB,EAAqBC,GAArB,CAAyBC,CAAC,IAAI,IAAIrB,GAAJ,CAAQqB,CAAC,CAAC,GAAD,CAAT,CAA9B,CAFL;IAGLC,KAAK,EAAGd,GAAG,CAACe,KAAJ,IAAa,EAHhB;IAILC,cAAc,EAAE,IAAI1B,SAAJ,CAAcU,GAAG,CAACiB,cAAlB,CAJX;IAKLC,YAAY,EAAE,IAAI5B,SAAJ,CAAcU,GAAG,CAACmB,YAAlB,CALT;IAMLC,UAAU,EAAE,IAAI9B,SAAJ,CAAcU,GAAG,CAACqB,UAAlB,CANP;IAOLC,QAAQ,EAAE,IAAIhC,SAAJ,CAAcU,GAAG,CAACuB,QAAlB,CAPL;IAQLC,eAAe,EAAE,IAAIlC,SAAJ,CAAcU,GAAG,CAACyB,eAAlB,CARZ;IASLC,eAAe,EAAE,IAAIpC,SAAJ,CAAcU,GAAG,CAAC2B,eAAlB;EATZ,CAAP;AAWD"},"metadata":{},"sourceType":"script"}