{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst bcrypto = require('../crypto');\n\nconst networks_1 = require('../networks');\n\nconst bscript = require('../script');\n\nconst lazy = require('./lazy');\n\nconst typef = require('typeforce');\n\nconst OPS = bscript.OPS;\n\nconst ecc = require('tiny-secp256k1');\n\nconst bech32 = require('bech32');\n\nconst EMPTY_BUFFER = Buffer.alloc(0); // witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\n\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness) throw new TypeError('Not enough data');\n  opts = Object.assign({\n    validate: true\n  }, opts || {});\n  typef({\n    address: typef.maybe(typef.String),\n    hash: typef.maybe(typef.BufferN(20)),\n    input: typef.maybe(typef.BufferN(0)),\n    network: typef.maybe(typef.Object),\n    output: typef.maybe(typef.BufferN(22)),\n    pubkey: typef.maybe(ecc.isPoint),\n    signature: typef.maybe(bscript.isCanonicalScriptSignature),\n    witness: typef.maybe(typef.arrayOf(typef.Buffer))\n  }, a);\n\n  const _address = lazy.value(() => {\n    const result = bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data)\n    };\n  });\n\n  const network = a.network || networks_1.bitcoin;\n  const o = {\n    name: 'p2wpkh',\n    network\n  };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  }); // extended validation\n\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix) throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00) throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20) throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash)) throw new TypeError('Hash mismatch');else hash = a.hash;\n    }\n\n    if (a.output) {\n      if (a.output.length !== 22 || a.output[0] !== OPS.OP_0 || a.output[1] !== 0x14) throw new TypeError('Output is invalid');\n      if (hash.length > 0 && !hash.equals(a.output.slice(2))) throw new TypeError('Hash mismatch');else hash = a.output.slice(2);\n    }\n\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh)) throw new TypeError('Hash mismatch');else hash = pkh;\n      if (!ecc.isPoint(a.pubkey) || a.pubkey.length !== 33) throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!bscript.isCanonicalScriptSignature(a.witness[0])) throw new TypeError('Witness has invalid signature');\n      if (!ecc.isPoint(a.witness[1]) || a.witness[1].length !== 33) throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && !a.signature.equals(a.witness[0])) throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(a.witness[1])) throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(a.witness[1]);\n      if (hash.length > 0 && !hash.equals(pkh)) throw new TypeError('Hash mismatch');\n    }\n  }\n\n  return Object.assign(o, a);\n}\n\nexports.p2wpkh = p2wpkh;","map":{"version":3,"names":["Object","defineProperty","exports","value","bcrypto","require","networks_1","bscript","lazy","typef","OPS","ecc","bech32","EMPTY_BUFFER","Buffer","alloc","p2wpkh","a","opts","address","hash","output","pubkey","witness","TypeError","assign","validate","maybe","String","BufferN","input","network","isPoint","signature","isCanonicalScriptSignature","arrayOf","_address","result","decode","version","words","shift","data","fromWords","prefix","from","bitcoin","o","name","prop","toWords","unshift","encode","slice","hash160","compile","OP_0","length","equals","pkh"],"sources":["C:/Users/acer/node_modules/bitcoinjs-lib/src/payments/p2wpkh.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bcrypto = require('../crypto');\nconst networks_1 = require('../networks');\nconst bscript = require('../script');\nconst lazy = require('./lazy');\nconst typef = require('typeforce');\nconst OPS = bscript.OPS;\nconst ecc = require('tiny-secp256k1');\nconst bech32 = require('bech32');\nconst EMPTY_BUFFER = Buffer.alloc(0);\n// witness: {signature} {pubKey}\n// input: <>\n// output: OP_0 {pubKeyHash}\nfunction p2wpkh(a, opts) {\n  if (!a.address && !a.hash && !a.output && !a.pubkey && !a.witness)\n    throw new TypeError('Not enough data');\n  opts = Object.assign({ validate: true }, opts || {});\n  typef(\n    {\n      address: typef.maybe(typef.String),\n      hash: typef.maybe(typef.BufferN(20)),\n      input: typef.maybe(typef.BufferN(0)),\n      network: typef.maybe(typef.Object),\n      output: typef.maybe(typef.BufferN(22)),\n      pubkey: typef.maybe(ecc.isPoint),\n      signature: typef.maybe(bscript.isCanonicalScriptSignature),\n      witness: typef.maybe(typef.arrayOf(typef.Buffer)),\n    },\n    a,\n  );\n  const _address = lazy.value(() => {\n    const result = bech32.decode(a.address);\n    const version = result.words.shift();\n    const data = bech32.fromWords(result.words);\n    return {\n      version,\n      prefix: result.prefix,\n      data: Buffer.from(data),\n    };\n  });\n  const network = a.network || networks_1.bitcoin;\n  const o = { name: 'p2wpkh', network };\n  lazy.prop(o, 'address', () => {\n    if (!o.hash) return;\n    const words = bech32.toWords(o.hash);\n    words.unshift(0x00);\n    return bech32.encode(network.bech32, words);\n  });\n  lazy.prop(o, 'hash', () => {\n    if (a.output) return a.output.slice(2, 22);\n    if (a.address) return _address().data;\n    if (a.pubkey || o.pubkey) return bcrypto.hash160(a.pubkey || o.pubkey);\n  });\n  lazy.prop(o, 'output', () => {\n    if (!o.hash) return;\n    return bscript.compile([OPS.OP_0, o.hash]);\n  });\n  lazy.prop(o, 'pubkey', () => {\n    if (a.pubkey) return a.pubkey;\n    if (!a.witness) return;\n    return a.witness[1];\n  });\n  lazy.prop(o, 'signature', () => {\n    if (!a.witness) return;\n    return a.witness[0];\n  });\n  lazy.prop(o, 'input', () => {\n    if (!o.witness) return;\n    return EMPTY_BUFFER;\n  });\n  lazy.prop(o, 'witness', () => {\n    if (!a.pubkey) return;\n    if (!a.signature) return;\n    return [a.signature, a.pubkey];\n  });\n  // extended validation\n  if (opts.validate) {\n    let hash = Buffer.from([]);\n    if (a.address) {\n      if (network && network.bech32 !== _address().prefix)\n        throw new TypeError('Invalid prefix or Network mismatch');\n      if (_address().version !== 0x00)\n        throw new TypeError('Invalid address version');\n      if (_address().data.length !== 20)\n        throw new TypeError('Invalid address data');\n      hash = _address().data;\n    }\n    if (a.hash) {\n      if (hash.length > 0 && !hash.equals(a.hash))\n        throw new TypeError('Hash mismatch');\n      else hash = a.hash;\n    }\n    if (a.output) {\n      if (\n        a.output.length !== 22 ||\n        a.output[0] !== OPS.OP_0 ||\n        a.output[1] !== 0x14\n      )\n        throw new TypeError('Output is invalid');\n      if (hash.length > 0 && !hash.equals(a.output.slice(2)))\n        throw new TypeError('Hash mismatch');\n      else hash = a.output.slice(2);\n    }\n    if (a.pubkey) {\n      const pkh = bcrypto.hash160(a.pubkey);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n      else hash = pkh;\n      if (!ecc.isPoint(a.pubkey) || a.pubkey.length !== 33)\n        throw new TypeError('Invalid pubkey for p2wpkh');\n    }\n    if (a.witness) {\n      if (a.witness.length !== 2) throw new TypeError('Witness is invalid');\n      if (!bscript.isCanonicalScriptSignature(a.witness[0]))\n        throw new TypeError('Witness has invalid signature');\n      if (!ecc.isPoint(a.witness[1]) || a.witness[1].length !== 33)\n        throw new TypeError('Witness has invalid pubkey');\n      if (a.signature && !a.signature.equals(a.witness[0]))\n        throw new TypeError('Signature mismatch');\n      if (a.pubkey && !a.pubkey.equals(a.witness[1]))\n        throw new TypeError('Pubkey mismatch');\n      const pkh = bcrypto.hash160(a.witness[1]);\n      if (hash.length > 0 && !hash.equals(pkh))\n        throw new TypeError('Hash mismatch');\n    }\n  }\n  return Object.assign(o, a);\n}\nexports.p2wpkh = p2wpkh;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}