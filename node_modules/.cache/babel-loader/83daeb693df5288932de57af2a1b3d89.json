{"ast":null,"code":"'use strict'; // <scriptSig> {serialized scriptPubKey script}\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst bscript = require('../../script');\n\nconst typeforce = require('typeforce');\n\nconst p2ms = require('../multisig');\n\nconst p2pk = require('../pubkey');\n\nconst p2pkh = require('../pubkeyhash');\n\nfunction check(chunks, allowIncomplete) {\n  typeforce(typeforce.Array, chunks);\n  if (chunks.length < 1) return false;\n  const witnessScript = chunks[chunks.length - 1];\n  if (!Buffer.isBuffer(witnessScript)) return false;\n  const witnessScriptChunks = bscript.decompile(witnessScript); // is witnessScript a valid script?\n\n  if (!witnessScriptChunks || witnessScriptChunks.length === 0) return false;\n  const witnessRawScriptSig = bscript.compile(chunks.slice(0, -1)); // match types\n\n  if (p2pkh.input.check(witnessRawScriptSig) && p2pkh.output.check(witnessScriptChunks)) return true;\n  if (p2ms.input.check(witnessRawScriptSig, allowIncomplete) && p2ms.output.check(witnessScriptChunks)) return true;\n  if (p2pk.input.check(witnessRawScriptSig) && p2pk.output.check(witnessScriptChunks)) return true;\n  return false;\n}\n\nexports.check = check;\n\ncheck.toJSON = () => {\n  return 'witnessScriptHash input';\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","bscript","require","typeforce","p2ms","p2pk","p2pkh","check","chunks","allowIncomplete","Array","length","witnessScript","Buffer","isBuffer","witnessScriptChunks","decompile","witnessRawScriptSig","compile","slice","input","output","toJSON"],"sources":["C:/Users/acer/node_modules/bitcoinjs-lib/src/templates/witnessscripthash/input.js"],"sourcesContent":["'use strict';\n// <scriptSig> {serialized scriptPubKey script}\nObject.defineProperty(exports, '__esModule', { value: true });\nconst bscript = require('../../script');\nconst typeforce = require('typeforce');\nconst p2ms = require('../multisig');\nconst p2pk = require('../pubkey');\nconst p2pkh = require('../pubkeyhash');\nfunction check(chunks, allowIncomplete) {\n  typeforce(typeforce.Array, chunks);\n  if (chunks.length < 1) return false;\n  const witnessScript = chunks[chunks.length - 1];\n  if (!Buffer.isBuffer(witnessScript)) return false;\n  const witnessScriptChunks = bscript.decompile(witnessScript);\n  // is witnessScript a valid script?\n  if (!witnessScriptChunks || witnessScriptChunks.length === 0) return false;\n  const witnessRawScriptSig = bscript.compile(chunks.slice(0, -1));\n  // match types\n  if (\n    p2pkh.input.check(witnessRawScriptSig) &&\n    p2pkh.output.check(witnessScriptChunks)\n  )\n    return true;\n  if (\n    p2ms.input.check(witnessRawScriptSig, allowIncomplete) &&\n    p2ms.output.check(witnessScriptChunks)\n  )\n    return true;\n  if (\n    p2pk.input.check(witnessRawScriptSig) &&\n    p2pk.output.check(witnessScriptChunks)\n  )\n    return true;\n  return false;\n}\nexports.check = check;\ncheck.toJSON = () => {\n  return 'witnessScriptHash input';\n};\n"],"mappings":"AAAA,a,CACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,aAAD,CAApB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,WAAD,CAApB;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,eAAD,CAArB;;AACA,SAASK,KAAT,CAAeC,MAAf,EAAuBC,eAAvB,EAAwC;EACtCN,SAAS,CAACA,SAAS,CAACO,KAAX,EAAkBF,MAAlB,CAAT;EACA,IAAIA,MAAM,CAACG,MAAP,GAAgB,CAApB,EAAuB,OAAO,KAAP;EACvB,MAAMC,aAAa,GAAGJ,MAAM,CAACA,MAAM,CAACG,MAAP,GAAgB,CAAjB,CAA5B;EACA,IAAI,CAACE,MAAM,CAACC,QAAP,CAAgBF,aAAhB,CAAL,EAAqC,OAAO,KAAP;EACrC,MAAMG,mBAAmB,GAAGd,OAAO,CAACe,SAAR,CAAkBJ,aAAlB,CAA5B,CALsC,CAMtC;;EACA,IAAI,CAACG,mBAAD,IAAwBA,mBAAmB,CAACJ,MAApB,KAA+B,CAA3D,EAA8D,OAAO,KAAP;EAC9D,MAAMM,mBAAmB,GAAGhB,OAAO,CAACiB,OAAR,CAAgBV,MAAM,CAACW,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAhB,CAA5B,CARsC,CAStC;;EACA,IACEb,KAAK,CAACc,KAAN,CAAYb,KAAZ,CAAkBU,mBAAlB,KACAX,KAAK,CAACe,MAAN,CAAad,KAAb,CAAmBQ,mBAAnB,CAFF,EAIE,OAAO,IAAP;EACF,IACEX,IAAI,CAACgB,KAAL,CAAWb,KAAX,CAAiBU,mBAAjB,EAAsCR,eAAtC,KACAL,IAAI,CAACiB,MAAL,CAAYd,KAAZ,CAAkBQ,mBAAlB,CAFF,EAIE,OAAO,IAAP;EACF,IACEV,IAAI,CAACe,KAAL,CAAWb,KAAX,CAAiBU,mBAAjB,KACAZ,IAAI,CAACgB,MAAL,CAAYd,KAAZ,CAAkBQ,mBAAlB,CAFF,EAIE,OAAO,IAAP;EACF,OAAO,KAAP;AACD;;AACDhB,OAAO,CAACQ,KAAR,GAAgBA,KAAhB;;AACAA,KAAK,CAACe,MAAN,GAAe,MAAM;EACnB,OAAO,yBAAP;AACD,CAFD"},"metadata":{},"sourceType":"script"}