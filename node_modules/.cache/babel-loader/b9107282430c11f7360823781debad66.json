{"ast":null,"code":"/* eslint max-depth: 1 */\n'use strict';\n\nconst varint = require('varint');\n\nconst defined = require('./utils').defined;\n\nfunction toSentenceCase(string) {\n  return `${string.substring(0, 1).toUpperCase()}${string.substring(1)}`;\n}\n\nfunction addPropertyAccessors(obj, name, value, defaultValue) {\n  if (Object.prototype.hasOwnProperty.call(obj, name)) {\n    // have already added this property\n    return;\n  }\n\n  const sentenceCaseName = toSentenceCase(name);\n  Object.defineProperties(obj, {\n    [name]: {\n      enumerable: true,\n      configurable: true,\n      set: val => {\n        value = val;\n      },\n      get: () => {\n        if (value === undefined) {\n          return defaultValue;\n        }\n\n        return value;\n      }\n    },\n    [`has${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value !== undefined;\n      }\n    },\n    [`set${sentenceCaseName}`]: {\n      configurable: true,\n      value: val => {\n        value = val;\n      }\n    },\n    [`get${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value;\n      }\n    },\n    [`clear${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        value = undefined;\n        obj[name] = undefined;\n      }\n    }\n  });\n}\n\nfunction compileDecode(m, resolve, enc) {\n  const requiredFields = [];\n  const fields = {};\n  const oneofFields = [];\n  const vals = [];\n\n  for (var i = 0; i < enc.length; i++) {\n    const field = m.fields[i];\n    fields[field.tag] = i;\n    const def = field.options && field.options.default;\n    const resolved = resolve(field.type, m.id, false);\n    vals[i] = [def, resolved && resolved.values];\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false';\n\n    if (field.required) {\n      requiredFields.push(field.name);\n    }\n\n    if (field.oneof) {\n      oneofFields.push(field.name);\n    }\n  }\n\n  function decodeField(e, field, obj, buf, dataView, offset, i) {\n    const name = field.name;\n\n    if (field.oneof) {\n      // clear already defined oneof fields\n      const props = Object.keys(obj);\n\n      for (var j = 0; j < props.length; j++) {\n        if (oneofFields.indexOf(props[j]) > -1) {\n          const sentenceCase = toSentenceCase(props[j]);\n          delete obj[`has${sentenceCase}`];\n          delete obj[`get${sentenceCase}`];\n          delete obj[`set${sentenceCase}`];\n          delete obj[`clear${sentenceCase}`];\n          delete obj[props[j]];\n        }\n      }\n    }\n\n    let value;\n\n    if (e.message) {\n      const len = varint.decode(buf, offset);\n      offset += varint.decode.bytes;\n      const decoded = e.decode(buf, dataView, offset, offset + len);\n\n      if (field.map) {\n        value = obj[name] || {};\n        value[decoded.key] = decoded.value;\n      } else if (field.repeated) {\n        value = obj[name] || [];\n        value.push(decoded);\n      } else {\n        value = decoded;\n      }\n    } else {\n      if (field.repeated) {\n        value = obj[name] || [];\n        value.push(e.decode(buf, dataView, offset));\n      } else {\n        value = e.decode(buf, dataView, offset);\n      }\n    }\n\n    addPropertyAccessors(obj, name, value);\n    offset += e.decode.bytes;\n    return offset;\n  }\n\n  return function decode(buf, view, offset, end) {\n    if (offset == null) {\n      offset = 0;\n    }\n\n    if (end == null) {\n      end = buf.length;\n    }\n\n    if (!(end <= buf.length && offset <= buf.length)) {\n      throw new Error('Decoded message is not valid');\n    }\n\n    if (!view) {\n      view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n\n    var oldOffset = offset;\n    var obj = {};\n    var field;\n\n    while (true) {\n      if (end <= offset) {\n        // finished\n        // check required methods\n        var name = '';\n        var j = 0;\n\n        for (j = 0; j < requiredFields.length; j++) {\n          name = requiredFields[j];\n\n          if (!defined(obj[name])) {\n            throw new Error('Decoded message is not valid, missing required field: ' + name);\n          }\n        } // fill out missing defaults\n\n\n        var val;\n        var def;\n\n        for (j = 0; j < enc.length; j++) {\n          field = m.fields[j];\n          def = vals[j][0];\n          val = vals[j][1];\n          name = field.name;\n          let defaultVal;\n\n          if (Object.prototype.hasOwnProperty.call(obj, name)) {\n            continue;\n          }\n\n          var done = false;\n\n          if (field.oneof) {\n            var props = Object.keys(obj);\n\n            for (var k = 0; k < props.length; k++) {\n              if (oneofFields.indexOf(props[k]) > -1) {\n                done = true;\n                break;\n              }\n            }\n          }\n\n          if (done) {\n            continue;\n          }\n\n          if (val) {\n            // is enum\n            if (field.repeated) {\n              def = [];\n            } else {\n              def = def && val[def] ? val[def].value : val[Object.keys(val)[0]].value;\n              def = parseInt(def || 0, 10);\n            }\n          } else {\n            defaultVal = defaultValue(field);\n            def = coerceValue(field, def);\n          }\n\n          addPropertyAccessors(obj, name, def, defaultVal);\n        }\n\n        decode.bytes = offset - oldOffset;\n        return obj;\n      }\n\n      var prefix = varint.decode(buf, offset);\n      offset += varint.decode.bytes;\n      var tag = prefix >> 3;\n      var i = fields[tag];\n\n      if (i == null) {\n        offset = skip(prefix & 7, buf, view, offset);\n        continue;\n      }\n\n      var e = enc[i];\n      field = m.fields[i];\n\n      if (field.packed) {\n        var packedEnd = varint.decode(buf, offset);\n        offset += varint.decode.bytes;\n        packedEnd += offset;\n\n        while (offset < packedEnd) {\n          offset = decodeField(e, field, obj, buf, view, offset, i);\n        }\n      } else {\n        offset = decodeField(e, field, obj, buf, view, offset, i);\n      }\n    }\n  };\n}\n\nvar skip = function (type, buffer, view, offset) {\n  switch (type) {\n    case 0:\n      varint.decode(buffer, offset);\n      return offset + varint.decode.bytes;\n\n    case 1:\n      return offset + 8;\n\n    case 2:\n      var len = varint.decode(buffer, offset);\n      return offset + varint.decode.bytes + len;\n\n    case 3:\n    case 4:\n      throw new Error('Groups are not supported');\n\n    case 5:\n      return offset + 4;\n\n    default:\n      throw new Error('Unknown wire type: ' + type);\n  }\n};\n\nvar defaultValue = function (f) {\n  if (f.map) return {};\n  if (f.repeated) return [];\n\n  switch (f.type) {\n    case 'string':\n      return '';\n\n    case 'bool':\n      return false;\n\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return 0;\n\n    default:\n      return null;\n  }\n};\n\nvar coerceValue = function (f, def) {\n  if (def === undefined) {\n    return def;\n  }\n\n  switch (f.type) {\n    case 'bool':\n      return def === 'true';\n\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return parseInt(def, 10);\n\n    default:\n      return def;\n  }\n};\n\nmodule.exports = compileDecode;","map":{"version":3,"names":["varint","require","defined","toSentenceCase","string","substring","toUpperCase","addPropertyAccessors","obj","name","value","defaultValue","Object","prototype","hasOwnProperty","call","sentenceCaseName","defineProperties","enumerable","configurable","set","val","get","undefined","compileDecode","m","resolve","enc","requiredFields","fields","oneofFields","vals","i","length","field","tag","def","options","default","resolved","type","id","values","packed","repeated","required","push","oneof","decodeField","e","buf","dataView","offset","props","keys","j","indexOf","sentenceCase","message","len","decode","bytes","decoded","map","key","view","end","Error","DataView","buffer","byteOffset","byteLength","oldOffset","defaultVal","done","k","parseInt","coerceValue","prefix","skip","packedEnd","f","module","exports"],"sources":["C:/Users/acer/node_modules/protons/src/compile/decode.js"],"sourcesContent":["/* eslint max-depth: 1 */\n'use strict'\n\nconst varint = require('varint')\nconst defined = require('./utils').defined\n\nfunction toSentenceCase (string) {\n  return `${string.substring(0, 1).toUpperCase()}${string.substring(1)}`\n}\n\nfunction addPropertyAccessors (obj, name, value, defaultValue) {\n  if (Object.prototype.hasOwnProperty.call(obj, name)) {\n    // have already added this property\n    return\n  }\n\n  const sentenceCaseName = toSentenceCase(name)\n\n  Object.defineProperties(obj, {\n    [name]: {\n      enumerable: true,\n      configurable: true,\n      set: (val) => {\n        value = val\n      },\n      get: () => {\n        if (value === undefined) {\n          return defaultValue\n        }\n\n        return value\n      }\n    },\n    [`has${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value !== undefined\n      }\n    },\n    [`set${sentenceCaseName}`]: {\n      configurable: true,\n      value: (val) => {\n        value = val\n      }\n    },\n    [`get${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        return value\n      }\n    },\n    [`clear${sentenceCaseName}`]: {\n      configurable: true,\n      value: () => {\n        value = undefined\n        obj[name] = undefined\n      }\n    }\n  })\n}\n\nfunction compileDecode (m, resolve, enc) {\n  const requiredFields = []\n  const fields = {}\n  const oneofFields = []\n  const vals = []\n\n  for (var i = 0; i < enc.length; i++) {\n    const field = m.fields[i]\n\n    fields[field.tag] = i\n\n    const def = field.options && field.options.default\n    const resolved = resolve(field.type, m.id, false)\n    vals[i] = [def, resolved && resolved.values]\n\n    m.fields[i].packed = field.repeated && field.options && field.options.packed && field.options.packed !== 'false'\n\n    if (field.required) {\n      requiredFields.push(field.name)\n    }\n\n    if (field.oneof) {\n      oneofFields.push(field.name)\n    }\n  }\n\n  function decodeField (e, field, obj, buf, dataView, offset, i) {\n    const name = field.name\n\n    if (field.oneof) {\n      // clear already defined oneof fields\n      const props = Object.keys(obj)\n      for (var j = 0; j < props.length; j++) {\n        if (oneofFields.indexOf(props[j]) > -1) {\n          const sentenceCase = toSentenceCase(props[j])\n          delete obj[`has${sentenceCase}`]\n          delete obj[`get${sentenceCase}`]\n          delete obj[`set${sentenceCase}`]\n          delete obj[`clear${sentenceCase}`]\n          delete obj[props[j]]\n        }\n      }\n    }\n\n    let value\n\n    if (e.message) {\n      const len = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n\n      const decoded = e.decode(buf, dataView, offset, offset + len)\n\n      if (field.map) {\n        value = obj[name] || {}\n        value[decoded.key] = decoded.value\n      } else if (field.repeated) {\n        value = obj[name] || []\n        value.push(decoded)\n      } else {\n        value = decoded\n      }\n    } else {\n      if (field.repeated) {\n        value = obj[name] || []\n        value.push(e.decode(buf, dataView, offset))\n      } else {\n        value = e.decode(buf, dataView, offset)\n      }\n    }\n\n    addPropertyAccessors(obj, name, value)\n\n    offset += e.decode.bytes\n\n    return offset\n  }\n\n  return function decode (buf, view, offset, end) {\n    if (offset == null) {\n      offset = 0\n    }\n\n    if (end == null) {\n      end = buf.length\n    }\n\n    if (!(end <= buf.length && offset <= buf.length)) {\n      throw new Error('Decoded message is not valid')\n    }\n\n    if (!view) {\n      view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength)\n    }\n\n    var oldOffset = offset\n    var obj = {}\n    var field\n\n    while (true) {\n      if (end <= offset) {\n        // finished\n\n        // check required methods\n        var name = ''\n        var j = 0\n        for (j = 0; j < requiredFields.length; j++) {\n          name = requiredFields[j]\n          if (!defined(obj[name])) {\n            throw new Error('Decoded message is not valid, missing required field: ' + name)\n          }\n        }\n\n        // fill out missing defaults\n        var val\n        var def\n        for (j = 0; j < enc.length; j++) {\n          field = m.fields[j]\n          def = vals[j][0]\n          val = vals[j][1]\n          name = field.name\n          let defaultVal\n\n          if (Object.prototype.hasOwnProperty.call(obj, name)) {\n            continue\n          }\n\n          var done = false\n\n          if (field.oneof) {\n            var props = Object.keys(obj)\n\n            for (var k = 0; k < props.length; k++) {\n              if (oneofFields.indexOf(props[k]) > -1) {\n                done = true\n                break\n              }\n            }\n          }\n\n          if (done) {\n            continue\n          }\n\n          if (val) { // is enum\n            if (field.repeated) {\n              def = []\n            } else {\n              def = (def && val[def]) ? val[def].value : val[Object.keys(val)[0]].value\n              def = parseInt(def || 0, 10)\n            }\n          } else {\n            defaultVal = defaultValue(field)\n            def = coerceValue(field, def)\n          }\n\n          addPropertyAccessors(obj, name, def, defaultVal)\n        }\n\n        decode.bytes = offset - oldOffset\n        return obj\n      }\n\n      var prefix = varint.decode(buf, offset)\n      offset += varint.decode.bytes\n      var tag = prefix >> 3\n\n      var i = fields[tag]\n\n      if (i == null) {\n        offset = skip(prefix & 7, buf, view, offset)\n        continue\n      }\n\n      var e = enc[i]\n      field = m.fields[i]\n\n      if (field.packed) {\n        var packedEnd = varint.decode(buf, offset)\n        offset += varint.decode.bytes\n        packedEnd += offset\n\n        while (offset < packedEnd) {\n          offset = decodeField(e, field, obj, buf, view, offset, i)\n        }\n      } else {\n        offset = decodeField(e, field, obj, buf, view, offset, i)\n      }\n    }\n  }\n}\n\nvar skip = function (type, buffer, view, offset) {\n  switch (type) {\n    case 0:\n      varint.decode(buffer, offset)\n      return offset + varint.decode.bytes\n\n    case 1:\n      return offset + 8\n\n    case 2:\n      var len = varint.decode(buffer, offset)\n      return offset + varint.decode.bytes + len\n\n    case 3:\n    case 4:\n      throw new Error('Groups are not supported')\n\n    case 5:\n      return offset + 4\n    default:\n      throw new Error('Unknown wire type: ' + type)\n  }\n}\n\nvar defaultValue = function (f) {\n  if (f.map) return {}\n  if (f.repeated) return []\n\n  switch (f.type) {\n    case 'string':\n      return ''\n    case 'bool':\n      return false\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return 0\n    default:\n      return null\n  }\n}\n\nvar coerceValue = function (f, def) {\n  if (def === undefined) {\n    return def\n  }\n\n  switch (f.type) {\n    case 'bool':\n      return def === 'true'\n    case 'float':\n    case 'double':\n    case 'sfixed32':\n    case 'fixed32':\n    case 'varint':\n    case 'enum':\n    case 'uint64':\n    case 'uint32':\n    case 'int64':\n    case 'int32':\n    case 'sint64':\n    case 'sint32':\n      return parseInt(def, 10)\n    default:\n      return def\n  }\n}\n\nmodule.exports = compileDecode\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}