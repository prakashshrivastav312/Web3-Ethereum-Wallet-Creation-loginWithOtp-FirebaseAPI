{"ast":null,"code":"// This is a legacy function.\n// Use `findNumbers()` instead.\nimport _findPhoneNumbers, { searchPhoneNumbers as _searchPhoneNumbers } from './findPhoneNumbers_.js';\nimport { normalizeArguments } from './parsePhoneNumber.js';\nexport default function findPhoneNumbers() {\n  var _normalizeArguments = normalizeArguments(arguments),\n      text = _normalizeArguments.text,\n      options = _normalizeArguments.options,\n      metadata = _normalizeArguments.metadata;\n\n  return _findPhoneNumbers(text, options, metadata);\n}\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\n\nexport function searchPhoneNumbers() {\n  var _normalizeArguments2 = normalizeArguments(arguments),\n      text = _normalizeArguments2.text,\n      options = _normalizeArguments2.options,\n      metadata = _normalizeArguments2.metadata;\n\n  return _searchPhoneNumbers(text, options, metadata);\n}","map":{"version":3,"mappings":"AAAA;AACA;AAEA,OAAOA,iBAAP,IAA4BC,kBAAkB,IAAIC,mBAAlD,QAA6E,wBAA7E;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AAEA,eAAe,SAASC,gBAAT,GACf;EACC,0BAAoCD,kBAAkB,CAACE,SAAD,CAAtD;EAAA,IAAQC,IAAR,uBAAQA,IAAR;EAAA,IAAcC,OAAd,uBAAcA,OAAd;EAAA,IAAuBC,QAAvB,uBAAuBA,QAAvB;;EACA,OAAOR,iBAAiB,CAACM,IAAD,EAAOC,OAAP,EAAgBC,QAAhB,CAAxB;AACA;AAED;AACA;AACA;;AACA,OAAO,SAASP,kBAAT,GACP;EACC,2BAAoCE,kBAAkB,CAACE,SAAD,CAAtD;EAAA,IAAQC,IAAR,wBAAQA,IAAR;EAAA,IAAcC,OAAd,wBAAcA,OAAd;EAAA,IAAuBC,QAAvB,wBAAuBA,QAAvB;;EACA,OAAON,mBAAmB,CAACI,IAAD,EAAOC,OAAP,EAAgBC,QAAhB,CAA1B;AACA","names":["_findPhoneNumbers","searchPhoneNumbers","_searchPhoneNumbers","normalizeArguments","findPhoneNumbers","arguments","text","options","metadata"],"sources":["../source/findPhoneNumbers.js"],"sourcesContent":["// This is a legacy function.\r\n// Use `findNumbers()` instead.\r\n\r\nimport _findPhoneNumbers, { searchPhoneNumbers as _searchPhoneNumbers } from './findPhoneNumbers_.js'\r\nimport { normalizeArguments } from './parsePhoneNumber.js'\r\n\r\nexport default function findPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _findPhoneNumbers(text, options, metadata)\r\n}\r\n\r\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\r\nexport function searchPhoneNumbers()\r\n{\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn _searchPhoneNumbers(text, options, metadata)\r\n}"]},"metadata":{},"sourceType":"module"}