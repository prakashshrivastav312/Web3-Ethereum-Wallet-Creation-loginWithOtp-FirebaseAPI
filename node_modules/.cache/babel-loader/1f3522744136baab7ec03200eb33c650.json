{"ast":null,"code":"'use strict';\n\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'; // pre-compute lookup table\n\nvar ALPHABET_MAP = {};\n\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z);\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous');\n  ALPHABET_MAP[x] = z;\n}\n\nfunction polymodStep(pre) {\n  var b = pre >> 25;\n  return (pre & 0x1FFFFFF) << 5 ^ -(b >> 0 & 1) & 0x3b6a57b2 ^ -(b >> 1 & 1) & 0x26508e6d ^ -(b >> 2 & 1) & 0x1ea119fa ^ -(b >> 3 & 1) & 0x3d4233dd ^ -(b >> 4 & 1) & 0x2a1462b3;\n}\n\nfunction prefixChk(prefix) {\n  var chk = 1;\n\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i);\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')');\n    chk = polymodStep(chk) ^ c >> 5;\n  }\n\n  chk = polymodStep(chk);\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i);\n    chk = polymodStep(chk) ^ v & 0x1f;\n  }\n\n  return chk;\n}\n\nfunction encode(prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (prefix.length + 7 + words.length > LIMIT) throw new TypeError('Exceeds length limit');\n  prefix = prefix.toLowerCase(); // determine chk mod\n\n  var chk = prefixChk(prefix);\n  var result = prefix + '1';\n\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i];\n    if (x >> 5 !== 0) throw new Error('Non 5-bit word');\n    chk = polymodStep(chk) ^ x;\n    result += ALPHABET.charAt(x);\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk);\n  }\n\n  chk ^= 1;\n\n  for (i = 0; i < 6; ++i) {\n    var v = chk >> (5 - i) * 5 & 0x1f;\n    result += ALPHABET.charAt(v);\n  }\n\n  return result;\n}\n\nfunction decode(str, LIMIT) {\n  LIMIT = LIMIT || 90;\n  if (str.length < 8) throw new TypeError(str + ' too short');\n  if (str.length > LIMIT) throw new TypeError('Exceeds length limit'); // don't allow mixed case\n\n  var lowered = str.toLowerCase();\n  var uppered = str.toUpperCase();\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str);\n  str = lowered;\n  var split = str.lastIndexOf('1');\n  if (split === -1) throw new Error('No separator character for ' + str);\n  if (split === 0) throw new Error('Missing prefix for ' + str);\n  var prefix = str.slice(0, split);\n  var wordChars = str.slice(split + 1);\n  if (wordChars.length < 6) throw new Error('Data too short');\n  var chk = prefixChk(prefix);\n  var words = [];\n\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i);\n    var v = ALPHABET_MAP[c];\n    if (v === undefined) throw new Error('Unknown character ' + c);\n    chk = polymodStep(chk) ^ v; // not in the checksum?\n\n    if (i + 6 >= wordChars.length) continue;\n    words.push(v);\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str);\n  return {\n    prefix: prefix,\n    words: words\n  };\n}\n\nfunction convert(data, inBits, outBits, pad) {\n  var value = 0;\n  var bits = 0;\n  var maxV = (1 << outBits) - 1;\n  var result = [];\n\n  for (var i = 0; i < data.length; ++i) {\n    value = value << inBits | data[i];\n    bits += inBits;\n\n    while (bits >= outBits) {\n      bits -= outBits;\n      result.push(value >> bits & maxV);\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push(value << outBits - bits & maxV);\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding');\n    if (value << outBits - bits & maxV) throw new Error('Non-zero padding');\n  }\n\n  return result;\n}\n\nfunction toWords(bytes) {\n  return convert(bytes, 8, 5, true);\n}\n\nfunction fromWords(words) {\n  return convert(words, 5, 8, false);\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  toWords: toWords,\n  fromWords: fromWords\n};","map":{"version":3,"names":["ALPHABET","ALPHABET_MAP","z","length","x","charAt","undefined","TypeError","polymodStep","pre","b","prefixChk","prefix","chk","i","c","charCodeAt","Error","v","encode","words","LIMIT","toLowerCase","result","decode","str","lowered","uppered","toUpperCase","split","lastIndexOf","slice","wordChars","push","convert","data","inBits","outBits","pad","value","bits","maxV","toWords","bytes","fromWords","module","exports"],"sources":["C:/Users/acer/node_modules/bitcore-lib/node_modules/bech32/index.js"],"sourcesContent":["'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')')\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) throw new TypeError(str + ' too short')\n  if (str.length > LIMIT) throw new TypeError('Exceeds length limit')\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str)\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) throw new Error('No separator character for ' + str)\n  if (split === 0) throw new Error('Missing prefix for ' + str)\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) throw new Error('Data too short')\n\n  var chk = prefixChk(prefix)\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) throw new Error('Unknown character ' + c)\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str)\n  return { prefix: prefix, words: words }\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding')\n    if ((value << (outBits - bits)) & maxV) throw new Error('Non-zero padding')\n  }\n\n  return result\n}\n\nfunction toWords (bytes) {\n  return convert(bytes, 8, 5, true)\n}\n\nfunction fromWords (words) {\n  return convert(words, 5, 8, false)\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  toWords: toWords,\n  fromWords: fromWords\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}