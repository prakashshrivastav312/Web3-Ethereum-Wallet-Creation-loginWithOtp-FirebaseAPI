{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Query = exports.MaxUint64 = void 0;\n\nconst function_1 = require(\"./function\");\n\nconst balance_1 = require(\"../balance\");\n\nconst address_1 = require(\"../address\");\n\nconst utils_1 = require(\"../utils\");\n\nconst argSerializer_1 = require(\"./argSerializer\");\n\nconst bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nexports.MaxUint64 = new bignumber_js_1.default(\"18446744073709551615\");\n\nclass Query {\n  constructor(init) {\n    this.caller = new address_1.Address();\n    this.address = new address_1.Address();\n    this.func = function_1.ContractFunction.none();\n    this.args = [];\n    this.value = balance_1.Balance.Zero();\n    Object.assign(this, init);\n    utils_1.guardValueIsSet(\"address\", this.address);\n    utils_1.guardValueIsSet(\"func\", this.func);\n    this.address.assertNotEmpty();\n    this.args = this.args || [];\n    this.caller = this.caller || new address_1.Address();\n    this.value = this.value || balance_1.Balance.Zero();\n  }\n\n  toHttpRequest() {\n    let request = {\n      \"scAddress\": this.address.bech32(),\n      \"funcName\": this.func.toString(),\n      \"args\": new argSerializer_1.ArgSerializer().valuesToStrings(this.args),\n      \"value\": this.value.toString()\n    };\n\n    if (!this.caller.isEmpty()) {\n      request[\"caller\"] = this.caller.bech32();\n    }\n\n    return request;\n  }\n\n}\n\nexports.Query = Query;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEaA,oBAAY,IAAIC,sBAAJ,CAAc,sBAAd,CAAZ;;AAEb,MAAaC,KAAb,CAAkB;EAOdC,YAAYC,IAAZ,EAAiC;IAC7B,KAAKC,MAAL,GAAc,IAAIC,iBAAJ,EAAd;IACA,KAAKC,OAAL,GAAe,IAAID,iBAAJ,EAAf;IACA,KAAKE,IAAL,GAAYC,4BAAiBC,IAAjB,EAAZ;IACA,KAAKC,IAAL,GAAY,EAAZ;IACA,KAAKC,KAAL,GAAaC,kBAAQC,IAAR,EAAb;IAEAC,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBZ,IAApB;IAEAa,wBAAgB,SAAhB,EAA2B,KAAKV,OAAhC;IACAU,wBAAgB,MAAhB,EAAwB,KAAKT,IAA7B;IAEA,KAAKD,OAAL,CAAaW,cAAb;IACA,KAAKP,IAAL,GAAY,KAAKA,IAAL,IAAa,EAAzB;IACA,KAAKN,MAAL,GAAc,KAAKA,MAAL,IAAe,IAAIC,iBAAJ,EAA7B;IACA,KAAKM,KAAL,GAAa,KAAKA,KAAL,IAAcC,kBAAQC,IAAR,EAA3B;EACH;;EAEDK,aAAa;IACT,IAAIC,OAAO,GAAQ;MACf,aAAa,KAAKb,OAAL,CAAac,MAAb,EADE;MAEf,YAAY,KAAKb,IAAL,CAAUc,QAAV,EAFG;MAGf,QAAQ,IAAIC,6BAAJ,GAAoBC,eAApB,CAAoC,KAAKb,IAAzC,CAHO;MAIf,SAAS,KAAKC,KAAL,CAAWU,QAAX;IAJM,CAAnB;;IAOA,IAAI,CAAC,KAAKjB,MAAL,CAAYoB,OAAZ,EAAL,EAA4B;MACxBL,OAAO,CAAC,QAAD,CAAP,GAAoB,KAAKf,MAAL,CAAYgB,MAAZ,EAApB;IACH;;IAED,OAAOD,OAAP;EACH;;AAtCa;;AAAlBpB","names":["exports","bignumber_js_1","Query","constructor","init","caller","address_1","address","func","function_1","none","args","value","balance_1","Zero","Object","assign","utils_1","assertNotEmpty","toHttpRequest","request","bech32","toString","argSerializer_1","valuesToStrings","isEmpty"],"sourceRoot":"","sources":["../../src/smartcontracts/query.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}