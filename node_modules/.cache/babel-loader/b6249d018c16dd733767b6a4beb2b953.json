{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computePublicKeyHash = exports.hexToBytes = exports.bytesToHex = void 0;\n\nconst assert = require(\"assert\");\n\nconst hashjs = require(\"hash.js\");\n\nconst BN = require(\"bn.js\");\n\nfunction bytesToHex(a) {\n  return Array.from(a, byteValue => {\n    const hex = byteValue.toString(16).toUpperCase();\n    return hex.length > 1 ? hex : `0${hex}`;\n  }).join('');\n}\n\nexports.bytesToHex = bytesToHex;\n\nfunction hexToBytes(a) {\n  assert.ok(a.length % 2 === 0); // Special-case length zero to return [].\n  // BN.toArray intentionally returns [0] rather than [] for length zero,\n  // which may make sense for BigNum data, but not for byte strings.\n\n  return a.length === 0 ? [] : new BN(a, 16).toArray(null, a.length / 2);\n}\n\nexports.hexToBytes = hexToBytes;\n\nfunction computePublicKeyHash(publicKeyBytes) {\n  const hash256 = hashjs.sha256().update(publicKeyBytes).digest();\n  const hash160 = hashjs.ripemd160().update(hash256).digest();\n  return Buffer.from(hash160);\n}\n\nexports.computePublicKeyHash = computePublicKeyHash;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,SAASA,UAAT,CAAoBC,CAApB,EAA2D;EACzD,OAAOC,KAAK,CAACC,IAAN,CAAWF,CAAX,EAAeG,SAAD,IAAc;IACjC,MAAMC,GAAG,GAAGD,SAAS,CAACE,QAAV,CAAmB,EAAnB,EAAuBC,WAAvB,EAAZ;IACA,OAAOF,GAAG,CAACG,MAAJ,GAAa,CAAb,GAAiBH,GAAjB,GAAuB,IAAIA,GAAG,EAArC;EACD,CAHM,EAGJI,IAHI,CAGC,EAHD,CAAP;AAID;;AAiBQC;;AAfT,SAASC,UAAT,CAAoBV,CAApB,EAAqB;EACnBW,MAAM,CAACC,EAAP,CAAUZ,CAAC,CAACO,MAAF,GAAW,CAAX,KAAiB,CAA3B,EADmB,CAEnB;EACA;EACA;;EACA,OAAOP,CAAC,CAACO,MAAF,KAAa,CAAb,GAAiB,EAAjB,GAAsB,IAAIM,EAAJ,CAAOb,CAAP,EAAU,EAAV,EAAcc,OAAd,CAAsB,IAAtB,EAA4Bd,CAAC,CAACO,MAAF,GAAW,CAAvC,CAA7B;AACD;;AASoBE;;AAPrB,SAASM,oBAAT,CAA8BC,cAA9B,EAAoD;EAClD,MAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,GAAgBC,MAAhB,CAAuBJ,cAAvB,EAAuCK,MAAvC,EAAhB;EAEA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,SAAP,GAAmBH,MAAnB,CAA0BH,OAA1B,EAAmCI,MAAnC,EAAhB;EACA,OAAOG,MAAM,CAACtB,IAAP,CAAYoB,OAAZ,CAAP;AACD;;AAEgCb","names":["bytesToHex","a","Array","from","byteValue","hex","toString","toUpperCase","length","join","exports","hexToBytes","assert","ok","BN","toArray","computePublicKeyHash","publicKeyBytes","hash256","hashjs","sha256","update","digest","hash160","ripemd160","Buffer"],"sourceRoot":"","sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}