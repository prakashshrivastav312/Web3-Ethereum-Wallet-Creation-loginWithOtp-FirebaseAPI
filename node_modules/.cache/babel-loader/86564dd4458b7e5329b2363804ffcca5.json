{"ast":null,"code":"var varint = require('varint');\n\nvar svarint = require('signed-varint');\n\nexports.make = encoder;\n\nexports.name = function (enc) {\n  var keys = Object.keys(exports);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (exports[keys[i]] === enc) return keys[i];\n  }\n\n  return null;\n};\n\nexports.skip = function (type, buffer, offset) {\n  switch (type) {\n    case 0:\n      varint.decode(buffer, offset);\n      return offset + varint.decode.bytes;\n\n    case 1:\n      return offset + 8;\n\n    case 2:\n      var len = varint.decode(buffer, offset);\n      return offset + varint.decode.bytes + len;\n\n    case 3:\n    case 4:\n      throw new Error('Groups are not supported');\n\n    case 5:\n      return offset + 4;\n  }\n\n  throw new Error('Unknown wire type: ' + type);\n};\n\nexports.bytes = encoder(2, function encode(val, buffer, offset) {\n  var oldOffset = offset;\n  var len = bufferLength(val);\n  varint.encode(len, buffer, offset);\n  offset += varint.encode.bytes;\n  if (Buffer.isBuffer(val)) val.copy(buffer, offset);else buffer.write(val, offset, len);\n  offset += len;\n  encode.bytes = offset - oldOffset;\n  return buffer;\n}, function decode(buffer, offset) {\n  var oldOffset = offset;\n  var len = varint.decode(buffer, offset);\n  offset += varint.decode.bytes;\n  var val = buffer.slice(offset, offset + len);\n  offset += val.length;\n  decode.bytes = offset - oldOffset;\n  return val;\n}, function encodingLength(val) {\n  var len = bufferLength(val);\n  return varint.encodingLength(len) + len;\n});\nexports.string = encoder(2, function encode(val, buffer, offset) {\n  var oldOffset = offset;\n  var len = Buffer.byteLength(val);\n  varint.encode(len, buffer, offset, 'utf-8');\n  offset += varint.encode.bytes;\n  buffer.write(val, offset, len);\n  offset += len;\n  encode.bytes = offset - oldOffset;\n  return buffer;\n}, function decode(buffer, offset) {\n  var oldOffset = offset;\n  var len = varint.decode(buffer, offset);\n  offset += varint.decode.bytes;\n  var val = buffer.toString('utf-8', offset, offset + len);\n  offset += len;\n  decode.bytes = offset - oldOffset;\n  return val;\n}, function encodingLength(val) {\n  var len = Buffer.byteLength(val);\n  return varint.encodingLength(len) + len;\n});\nexports.bool = encoder(0, function encode(val, buffer, offset) {\n  buffer[offset] = val ? 1 : 0;\n  encode.bytes = 1;\n  return buffer;\n}, function decode(buffer, offset) {\n  var bool = buffer[offset] > 0;\n  decode.bytes = 1;\n  return bool;\n}, function encodingLength() {\n  return 1;\n});\nexports.int32 = encoder(0, function encode(val, buffer, offset) {\n  varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset);\n  encode.bytes = varint.encode.bytes;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = varint.decode(buffer, offset);\n  decode.bytes = varint.decode.bytes;\n  return val > 2147483647 ? val - 4294967296 : val;\n}, function encodingLength(val) {\n  return varint.encodingLength(val < 0 ? val + 4294967296 : val);\n});\nexports.int64 = encoder(0, function encode(val, buffer, offset) {\n  if (val < 0) {\n    var last = offset + 9;\n    varint.encode(val * -1, buffer, offset);\n    offset += varint.encode.bytes - 1;\n    buffer[offset] = buffer[offset] | 0x80;\n\n    while (offset < last - 1) {\n      offset++;\n      buffer[offset] = 0xff;\n    }\n\n    buffer[last] = 0x01;\n    encode.bytes = 10;\n  } else {\n    varint.encode(val, buffer, offset);\n    encode.bytes = varint.encode.bytes;\n  }\n\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = varint.decode(buffer, offset);\n\n  if (val >= Math.pow(2, 63)) {\n    var limit = 9;\n\n    while (buffer[offset + limit - 1] === 0xff) limit--;\n\n    limit = limit || 9;\n    var subset = Buffer.allocUnsafe(limit);\n    buffer.copy(subset, 0, offset, offset + limit);\n    subset[limit - 1] = subset[limit - 1] & 0x7f;\n    val = -1 * varint.decode(subset, 0);\n    decode.bytes = 10;\n  } else {\n    decode.bytes = varint.decode.bytes;\n  }\n\n  return val;\n}, function encodingLength(val) {\n  return val < 0 ? 10 : varint.encodingLength(val);\n});\nexports.sint32 = exports.sint64 = encoder(0, svarint.encode, svarint.decode, svarint.encodingLength);\nexports.uint32 = exports.uint64 = exports.enum = exports.varint = encoder(0, varint.encode, varint.decode, varint.encodingLength); // we cannot represent these in javascript so we just use buffers\n\nexports.fixed64 = exports.sfixed64 = encoder(1, function encode(val, buffer, offset) {\n  val.copy(buffer, offset);\n  encode.bytes = 8;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = buffer.slice(offset, offset + 8);\n  decode.bytes = 8;\n  return val;\n}, function encodingLength() {\n  return 8;\n});\nexports.double = encoder(1, function encode(val, buffer, offset) {\n  buffer.writeDoubleLE(val, offset);\n  encode.bytes = 8;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = buffer.readDoubleLE(offset);\n  decode.bytes = 8;\n  return val;\n}, function encodingLength() {\n  return 8;\n});\nexports.fixed32 = encoder(5, function encode(val, buffer, offset) {\n  buffer.writeUInt32LE(val, offset);\n  encode.bytes = 4;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = buffer.readUInt32LE(offset);\n  decode.bytes = 4;\n  return val;\n}, function encodingLength() {\n  return 4;\n});\nexports.sfixed32 = encoder(5, function encode(val, buffer, offset) {\n  buffer.writeInt32LE(val, offset);\n  encode.bytes = 4;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = buffer.readInt32LE(offset);\n  decode.bytes = 4;\n  return val;\n}, function encodingLength() {\n  return 4;\n});\nexports.float = encoder(5, function encode(val, buffer, offset) {\n  buffer.writeFloatLE(val, offset);\n  encode.bytes = 4;\n  return buffer;\n}, function decode(buffer, offset) {\n  var val = buffer.readFloatLE(offset);\n  decode.bytes = 4;\n  return val;\n}, function encodingLength() {\n  return 4;\n});\n\nfunction encoder(type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0;\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  };\n}\n\nfunction bufferLength(val) {\n  return Buffer.isBuffer(val) ? val.length : Buffer.byteLength(val);\n}","map":{"version":3,"names":["varint","require","svarint","exports","make","encoder","name","enc","keys","Object","i","length","skip","type","buffer","offset","decode","bytes","len","Error","encode","val","oldOffset","bufferLength","Buffer","isBuffer","copy","write","slice","encodingLength","string","byteLength","toString","bool","int32","int64","last","Math","pow","limit","subset","allocUnsafe","sint32","sint64","uint32","uint64","enum","fixed64","sfixed64","double","writeDoubleLE","readDoubleLE","fixed32","writeUInt32LE","readUInt32LE","sfixed32","writeInt32LE","readInt32LE","float","writeFloatLE","readFloatLE"],"sources":["C:/Users/acer/node_modules/protocol-buffers-encodings/index.js"],"sourcesContent":["var varint = require('varint')\nvar svarint = require('signed-varint')\n\nexports.make = encoder\n\nexports.name = function (enc) {\n  var keys = Object.keys(exports)\n  for (var i = 0; i < keys.length; i++) {\n    if (exports[keys[i]] === enc) return keys[i]\n  }\n  return null\n}\n\nexports.skip = function (type, buffer, offset) {\n  switch (type) {\n    case 0:\n      varint.decode(buffer, offset)\n      return offset + varint.decode.bytes\n\n    case 1:\n      return offset + 8\n\n    case 2:\n      var len = varint.decode(buffer, offset)\n      return offset + varint.decode.bytes + len\n\n    case 3:\n    case 4:\n      throw new Error('Groups are not supported')\n\n    case 5:\n      return offset + 4\n  }\n\n  throw new Error('Unknown wire type: ' + type)\n}\n\nexports.bytes = encoder(2,\n  function encode (val, buffer, offset) {\n    var oldOffset = offset\n    var len = bufferLength(val)\n\n    varint.encode(len, buffer, offset)\n    offset += varint.encode.bytes\n\n    if (Buffer.isBuffer(val)) val.copy(buffer, offset)\n    else buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.slice(offset, offset + len)\n    offset += val.length\n\n    decode.bytes = offset - oldOffset\n    return val\n  },\n  function encodingLength (val) {\n    var len = bufferLength(val)\n    return varint.encodingLength(len) + len\n  }\n)\n\nexports.string = encoder(2,\n  function encode (val, buffer, offset) {\n    var oldOffset = offset\n    var len = Buffer.byteLength(val)\n\n    varint.encode(len, buffer, offset, 'utf-8')\n    offset += varint.encode.bytes\n\n    buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.toString('utf-8', offset, offset + len)\n    offset += len\n\n    decode.bytes = offset - oldOffset\n    return val\n  },\n  function encodingLength (val) {\n    var len = Buffer.byteLength(val)\n    return varint.encodingLength(len) + len\n  }\n)\n\nexports.bool = encoder(0,\n  function encode (val, buffer, offset) {\n    buffer[offset] = val ? 1 : 0\n    encode.bytes = 1\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var bool = buffer[offset] > 0\n    decode.bytes = 1\n    return bool\n  },\n  function encodingLength () {\n    return 1\n  }\n)\n\nexports.int32 = encoder(0,\n  function encode (val, buffer, offset) {\n    varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset)\n    encode.bytes = varint.encode.bytes\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    decode.bytes = varint.decode.bytes\n    return val > 2147483647 ? val - 4294967296 : val\n  },\n  function encodingLength (val) {\n    return varint.encodingLength(val < 0 ? val + 4294967296 : val)\n  }\n)\n\nexports.int64 = encoder(0,\n  function encode (val, buffer, offset) {\n    if (val < 0) {\n      var last = offset + 9\n      varint.encode(val * -1, buffer, offset)\n      offset += varint.encode.bytes - 1\n      buffer[offset] = buffer[offset] | 0x80\n      while (offset < last - 1) {\n        offset++\n        buffer[offset] = 0xff\n      }\n      buffer[last] = 0x01\n      encode.bytes = 10\n    } else {\n      varint.encode(val, buffer, offset)\n      encode.bytes = varint.encode.bytes\n    }\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    if (val >= Math.pow(2, 63)) {\n      var limit = 9\n      while (buffer[offset + limit - 1] === 0xff) limit--\n      limit = limit || 9\n      var subset = Buffer.allocUnsafe(limit)\n      buffer.copy(subset, 0, offset, offset + limit)\n      subset[limit - 1] = subset[limit - 1] & 0x7f\n      val = -1 * varint.decode(subset, 0)\n      decode.bytes = 10\n    } else {\n      decode.bytes = varint.decode.bytes\n    }\n    return val\n  },\n  function encodingLength (val) {\n    return val < 0 ? 10 : varint.encodingLength(val)\n  }\n)\n\nexports.sint32 =\nexports.sint64 = encoder(0,\n  svarint.encode,\n  svarint.decode,\n  svarint.encodingLength\n)\n\nexports.uint32 =\nexports.uint64 =\nexports.enum =\nexports.varint = encoder(0,\n  varint.encode,\n  varint.decode,\n  varint.encodingLength\n)\n\n// we cannot represent these in javascript so we just use buffers\nexports.fixed64 =\nexports.sfixed64 = encoder(1,\n  function encode (val, buffer, offset) {\n    val.copy(buffer, offset)\n    encode.bytes = 8\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = buffer.slice(offset, offset + 8)\n    decode.bytes = 8\n    return val\n  },\n  function encodingLength () {\n    return 8\n  }\n)\n\nexports.double = encoder(1,\n  function encode (val, buffer, offset) {\n    buffer.writeDoubleLE(val, offset)\n    encode.bytes = 8\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = buffer.readDoubleLE(offset)\n    decode.bytes = 8\n    return val\n  },\n  function encodingLength () {\n    return 8\n  }\n)\n\nexports.fixed32 = encoder(5,\n  function encode (val, buffer, offset) {\n    buffer.writeUInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = buffer.readUInt32LE(offset)\n    decode.bytes = 4\n    return val\n  },\n  function encodingLength () {\n    return 4\n  }\n)\n\nexports.sfixed32 = encoder(5,\n  function encode (val, buffer, offset) {\n    buffer.writeInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = buffer.readInt32LE(offset)\n    decode.bytes = 4\n    return val\n  },\n  function encodingLength () {\n    return 4\n  }\n)\n\nexports.float = encoder(5,\n  function encode (val, buffer, offset) {\n    buffer.writeFloatLE(val, offset)\n    encode.bytes = 4\n    return buffer\n  },\n  function decode (buffer, offset) {\n    var val = buffer.readFloatLE(offset)\n    decode.bytes = 4\n    return val\n  },\n  function encodingLength () {\n    return 4\n  }\n)\n\nfunction encoder (type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0\n\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  }\n}\n\nfunction bufferLength (val) {\n  return Buffer.isBuffer(val) ? val.length : Buffer.byteLength(val)\n}\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,eAAD,CAArB;;AAEAE,OAAO,CAACC,IAAR,GAAeC,OAAf;;AAEAF,OAAO,CAACG,IAAR,GAAe,UAAUC,GAAV,EAAe;EAC5B,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYL,OAAZ,CAAX;;EACA,KAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;IACpC,IAAIP,OAAO,CAACK,IAAI,CAACE,CAAD,CAAL,CAAP,KAAqBH,GAAzB,EAA8B,OAAOC,IAAI,CAACE,CAAD,CAAX;EAC/B;;EACD,OAAO,IAAP;AACD,CAND;;AAQAP,OAAO,CAACS,IAAR,GAAe,UAAUC,IAAV,EAAgBC,MAAhB,EAAwBC,MAAxB,EAAgC;EAC7C,QAAQF,IAAR;IACE,KAAK,CAAL;MACEb,MAAM,CAACgB,MAAP,CAAcF,MAAd,EAAsBC,MAAtB;MACA,OAAOA,MAAM,GAAGf,MAAM,CAACgB,MAAP,CAAcC,KAA9B;;IAEF,KAAK,CAAL;MACE,OAAOF,MAAM,GAAG,CAAhB;;IAEF,KAAK,CAAL;MACE,IAAIG,GAAG,GAAGlB,MAAM,CAACgB,MAAP,CAAcF,MAAd,EAAsBC,MAAtB,CAAV;MACA,OAAOA,MAAM,GAAGf,MAAM,CAACgB,MAAP,CAAcC,KAAvB,GAA+BC,GAAtC;;IAEF,KAAK,CAAL;IACA,KAAK,CAAL;MACE,MAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;;IAEF,KAAK,CAAL;MACE,OAAOJ,MAAM,GAAG,CAAhB;EAjBJ;;EAoBA,MAAM,IAAII,KAAJ,CAAU,wBAAwBN,IAAlC,CAAN;AACD,CAtBD;;AAwBAV,OAAO,CAACc,KAAR,GAAgBZ,OAAO,CAAC,CAAD,EACrB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpC,IAAIO,SAAS,GAAGP,MAAhB;EACA,IAAIG,GAAG,GAAGK,YAAY,CAACF,GAAD,CAAtB;EAEArB,MAAM,CAACoB,MAAP,CAAcF,GAAd,EAAmBJ,MAAnB,EAA2BC,MAA3B;EACAA,MAAM,IAAIf,MAAM,CAACoB,MAAP,CAAcH,KAAxB;EAEA,IAAIO,MAAM,CAACC,QAAP,CAAgBJ,GAAhB,CAAJ,EAA0BA,GAAG,CAACK,IAAJ,CAASZ,MAAT,EAAiBC,MAAjB,EAA1B,KACKD,MAAM,CAACa,KAAP,CAAaN,GAAb,EAAkBN,MAAlB,EAA0BG,GAA1B;EACLH,MAAM,IAAIG,GAAV;EAEAE,MAAM,CAACH,KAAP,GAAeF,MAAM,GAAGO,SAAxB;EACA,OAAOR,MAAP;AACD,CAdoB,EAerB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIO,SAAS,GAAGP,MAAhB;EAEA,IAAIG,GAAG,GAAGlB,MAAM,CAACgB,MAAP,CAAcF,MAAd,EAAsBC,MAAtB,CAAV;EACAA,MAAM,IAAIf,MAAM,CAACgB,MAAP,CAAcC,KAAxB;EAEA,IAAII,GAAG,GAAGP,MAAM,CAACc,KAAP,CAAab,MAAb,EAAqBA,MAAM,GAAGG,GAA9B,CAAV;EACAH,MAAM,IAAIM,GAAG,CAACV,MAAd;EAEAK,MAAM,CAACC,KAAP,GAAeF,MAAM,GAAGO,SAAxB;EACA,OAAOD,GAAP;AACD,CA1BoB,EA2BrB,SAASQ,cAAT,CAAyBR,GAAzB,EAA8B;EAC5B,IAAIH,GAAG,GAAGK,YAAY,CAACF,GAAD,CAAtB;EACA,OAAOrB,MAAM,CAAC6B,cAAP,CAAsBX,GAAtB,IAA6BA,GAApC;AACD,CA9BoB,CAAvB;AAiCAf,OAAO,CAAC2B,MAAR,GAAiBzB,OAAO,CAAC,CAAD,EACtB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpC,IAAIO,SAAS,GAAGP,MAAhB;EACA,IAAIG,GAAG,GAAGM,MAAM,CAACO,UAAP,CAAkBV,GAAlB,CAAV;EAEArB,MAAM,CAACoB,MAAP,CAAcF,GAAd,EAAmBJ,MAAnB,EAA2BC,MAA3B,EAAmC,OAAnC;EACAA,MAAM,IAAIf,MAAM,CAACoB,MAAP,CAAcH,KAAxB;EAEAH,MAAM,CAACa,KAAP,CAAaN,GAAb,EAAkBN,MAAlB,EAA0BG,GAA1B;EACAH,MAAM,IAAIG,GAAV;EAEAE,MAAM,CAACH,KAAP,GAAeF,MAAM,GAAGO,SAAxB;EACA,OAAOR,MAAP;AACD,CAbqB,EActB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIO,SAAS,GAAGP,MAAhB;EAEA,IAAIG,GAAG,GAAGlB,MAAM,CAACgB,MAAP,CAAcF,MAAd,EAAsBC,MAAtB,CAAV;EACAA,MAAM,IAAIf,MAAM,CAACgB,MAAP,CAAcC,KAAxB;EAEA,IAAII,GAAG,GAAGP,MAAM,CAACkB,QAAP,CAAgB,OAAhB,EAAyBjB,MAAzB,EAAiCA,MAAM,GAAGG,GAA1C,CAAV;EACAH,MAAM,IAAIG,GAAV;EAEAF,MAAM,CAACC,KAAP,GAAeF,MAAM,GAAGO,SAAxB;EACA,OAAOD,GAAP;AACD,CAzBqB,EA0BtB,SAASQ,cAAT,CAAyBR,GAAzB,EAA8B;EAC5B,IAAIH,GAAG,GAAGM,MAAM,CAACO,UAAP,CAAkBV,GAAlB,CAAV;EACA,OAAOrB,MAAM,CAAC6B,cAAP,CAAsBX,GAAtB,IAA6BA,GAApC;AACD,CA7BqB,CAAxB;AAgCAf,OAAO,CAAC8B,IAAR,GAAe5B,OAAO,CAAC,CAAD,EACpB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpCD,MAAM,CAACC,MAAD,CAAN,GAAiBM,GAAG,GAAG,CAAH,GAAO,CAA3B;EACAD,MAAM,CAACH,KAAP,GAAe,CAAf;EACA,OAAOH,MAAP;AACD,CALmB,EAMpB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIkB,IAAI,GAAGnB,MAAM,CAACC,MAAD,CAAN,GAAiB,CAA5B;EACAC,MAAM,CAACC,KAAP,GAAe,CAAf;EACA,OAAOgB,IAAP;AACD,CAVmB,EAWpB,SAASJ,cAAT,GAA2B;EACzB,OAAO,CAAP;AACD,CAbmB,CAAtB;AAgBA1B,OAAO,CAAC+B,KAAR,GAAgB7B,OAAO,CAAC,CAAD,EACrB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpCf,MAAM,CAACoB,MAAP,CAAcC,GAAG,GAAG,CAAN,GAAUA,GAAG,GAAG,UAAhB,GAA6BA,GAA3C,EAAgDP,MAAhD,EAAwDC,MAAxD;EACAK,MAAM,CAACH,KAAP,GAAejB,MAAM,CAACoB,MAAP,CAAcH,KAA7B;EACA,OAAOH,MAAP;AACD,CALoB,EAMrB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIM,GAAG,GAAGrB,MAAM,CAACgB,MAAP,CAAcF,MAAd,EAAsBC,MAAtB,CAAV;EACAC,MAAM,CAACC,KAAP,GAAejB,MAAM,CAACgB,MAAP,CAAcC,KAA7B;EACA,OAAOI,GAAG,GAAG,UAAN,GAAmBA,GAAG,GAAG,UAAzB,GAAsCA,GAA7C;AACD,CAVoB,EAWrB,SAASQ,cAAT,CAAyBR,GAAzB,EAA8B;EAC5B,OAAOrB,MAAM,CAAC6B,cAAP,CAAsBR,GAAG,GAAG,CAAN,GAAUA,GAAG,GAAG,UAAhB,GAA6BA,GAAnD,CAAP;AACD,CAboB,CAAvB;AAgBAlB,OAAO,CAACgC,KAAR,GAAgB9B,OAAO,CAAC,CAAD,EACrB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpC,IAAIM,GAAG,GAAG,CAAV,EAAa;IACX,IAAIe,IAAI,GAAGrB,MAAM,GAAG,CAApB;IACAf,MAAM,CAACoB,MAAP,CAAcC,GAAG,GAAG,CAAC,CAArB,EAAwBP,MAAxB,EAAgCC,MAAhC;IACAA,MAAM,IAAIf,MAAM,CAACoB,MAAP,CAAcH,KAAd,GAAsB,CAAhC;IACAH,MAAM,CAACC,MAAD,CAAN,GAAiBD,MAAM,CAACC,MAAD,CAAN,GAAiB,IAAlC;;IACA,OAAOA,MAAM,GAAGqB,IAAI,GAAG,CAAvB,EAA0B;MACxBrB,MAAM;MACND,MAAM,CAACC,MAAD,CAAN,GAAiB,IAAjB;IACD;;IACDD,MAAM,CAACsB,IAAD,CAAN,GAAe,IAAf;IACAhB,MAAM,CAACH,KAAP,GAAe,EAAf;EACD,CAXD,MAWO;IACLjB,MAAM,CAACoB,MAAP,CAAcC,GAAd,EAAmBP,MAAnB,EAA2BC,MAA3B;IACAK,MAAM,CAACH,KAAP,GAAejB,MAAM,CAACoB,MAAP,CAAcH,KAA7B;EACD;;EACD,OAAOH,MAAP;AACD,CAlBoB,EAmBrB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIM,GAAG,GAAGrB,MAAM,CAACgB,MAAP,CAAcF,MAAd,EAAsBC,MAAtB,CAAV;;EACA,IAAIM,GAAG,IAAIgB,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAX,EAA4B;IAC1B,IAAIC,KAAK,GAAG,CAAZ;;IACA,OAAOzB,MAAM,CAACC,MAAM,GAAGwB,KAAT,GAAiB,CAAlB,CAAN,KAA+B,IAAtC,EAA4CA,KAAK;;IACjDA,KAAK,GAAGA,KAAK,IAAI,CAAjB;IACA,IAAIC,MAAM,GAAGhB,MAAM,CAACiB,WAAP,CAAmBF,KAAnB,CAAb;IACAzB,MAAM,CAACY,IAAP,CAAYc,MAAZ,EAAoB,CAApB,EAAuBzB,MAAvB,EAA+BA,MAAM,GAAGwB,KAAxC;IACAC,MAAM,CAACD,KAAK,GAAG,CAAT,CAAN,GAAoBC,MAAM,CAACD,KAAK,GAAG,CAAT,CAAN,GAAoB,IAAxC;IACAlB,GAAG,GAAG,CAAC,CAAD,GAAKrB,MAAM,CAACgB,MAAP,CAAcwB,MAAd,EAAsB,CAAtB,CAAX;IACAxB,MAAM,CAACC,KAAP,GAAe,EAAf;EACD,CATD,MASO;IACLD,MAAM,CAACC,KAAP,GAAejB,MAAM,CAACgB,MAAP,CAAcC,KAA7B;EACD;;EACD,OAAOI,GAAP;AACD,CAlCoB,EAmCrB,SAASQ,cAAT,CAAyBR,GAAzB,EAA8B;EAC5B,OAAOA,GAAG,GAAG,CAAN,GAAU,EAAV,GAAerB,MAAM,CAAC6B,cAAP,CAAsBR,GAAtB,CAAtB;AACD,CArCoB,CAAvB;AAwCAlB,OAAO,CAACuC,MAAR,GACAvC,OAAO,CAACwC,MAAR,GAAiBtC,OAAO,CAAC,CAAD,EACtBH,OAAO,CAACkB,MADc,EAEtBlB,OAAO,CAACc,MAFc,EAGtBd,OAAO,CAAC2B,cAHc,CADxB;AAOA1B,OAAO,CAACyC,MAAR,GACAzC,OAAO,CAAC0C,MAAR,GACA1C,OAAO,CAAC2C,IAAR,GACA3C,OAAO,CAACH,MAAR,GAAiBK,OAAO,CAAC,CAAD,EACtBL,MAAM,CAACoB,MADe,EAEtBpB,MAAM,CAACgB,MAFe,EAGtBhB,MAAM,CAAC6B,cAHe,CAHxB,C,CASA;;AACA1B,OAAO,CAAC4C,OAAR,GACA5C,OAAO,CAAC6C,QAAR,GAAmB3C,OAAO,CAAC,CAAD,EACxB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpCM,GAAG,CAACK,IAAJ,CAASZ,MAAT,EAAiBC,MAAjB;EACAK,MAAM,CAACH,KAAP,GAAe,CAAf;EACA,OAAOH,MAAP;AACD,CALuB,EAMxB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIM,GAAG,GAAGP,MAAM,CAACc,KAAP,CAAab,MAAb,EAAqBA,MAAM,GAAG,CAA9B,CAAV;EACAC,MAAM,CAACC,KAAP,GAAe,CAAf;EACA,OAAOI,GAAP;AACD,CAVuB,EAWxB,SAASQ,cAAT,GAA2B;EACzB,OAAO,CAAP;AACD,CAbuB,CAD1B;AAiBA1B,OAAO,CAAC8C,MAAR,GAAiB5C,OAAO,CAAC,CAAD,EACtB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpCD,MAAM,CAACoC,aAAP,CAAqB7B,GAArB,EAA0BN,MAA1B;EACAK,MAAM,CAACH,KAAP,GAAe,CAAf;EACA,OAAOH,MAAP;AACD,CALqB,EAMtB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIM,GAAG,GAAGP,MAAM,CAACqC,YAAP,CAAoBpC,MAApB,CAAV;EACAC,MAAM,CAACC,KAAP,GAAe,CAAf;EACA,OAAOI,GAAP;AACD,CAVqB,EAWtB,SAASQ,cAAT,GAA2B;EACzB,OAAO,CAAP;AACD,CAbqB,CAAxB;AAgBA1B,OAAO,CAACiD,OAAR,GAAkB/C,OAAO,CAAC,CAAD,EACvB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpCD,MAAM,CAACuC,aAAP,CAAqBhC,GAArB,EAA0BN,MAA1B;EACAK,MAAM,CAACH,KAAP,GAAe,CAAf;EACA,OAAOH,MAAP;AACD,CALsB,EAMvB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIM,GAAG,GAAGP,MAAM,CAACwC,YAAP,CAAoBvC,MAApB,CAAV;EACAC,MAAM,CAACC,KAAP,GAAe,CAAf;EACA,OAAOI,GAAP;AACD,CAVsB,EAWvB,SAASQ,cAAT,GAA2B;EACzB,OAAO,CAAP;AACD,CAbsB,CAAzB;AAgBA1B,OAAO,CAACoD,QAAR,GAAmBlD,OAAO,CAAC,CAAD,EACxB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpCD,MAAM,CAAC0C,YAAP,CAAoBnC,GAApB,EAAyBN,MAAzB;EACAK,MAAM,CAACH,KAAP,GAAe,CAAf;EACA,OAAOH,MAAP;AACD,CALuB,EAMxB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIM,GAAG,GAAGP,MAAM,CAAC2C,WAAP,CAAmB1C,MAAnB,CAAV;EACAC,MAAM,CAACC,KAAP,GAAe,CAAf;EACA,OAAOI,GAAP;AACD,CAVuB,EAWxB,SAASQ,cAAT,GAA2B;EACzB,OAAO,CAAP;AACD,CAbuB,CAA1B;AAgBA1B,OAAO,CAACuD,KAAR,GAAgBrD,OAAO,CAAC,CAAD,EACrB,SAASe,MAAT,CAAiBC,GAAjB,EAAsBP,MAAtB,EAA8BC,MAA9B,EAAsC;EACpCD,MAAM,CAAC6C,YAAP,CAAoBtC,GAApB,EAAyBN,MAAzB;EACAK,MAAM,CAACH,KAAP,GAAe,CAAf;EACA,OAAOH,MAAP;AACD,CALoB,EAMrB,SAASE,MAAT,CAAiBF,MAAjB,EAAyBC,MAAzB,EAAiC;EAC/B,IAAIM,GAAG,GAAGP,MAAM,CAAC8C,WAAP,CAAmB7C,MAAnB,CAAV;EACAC,MAAM,CAACC,KAAP,GAAe,CAAf;EACA,OAAOI,GAAP;AACD,CAVoB,EAWrB,SAASQ,cAAT,GAA2B;EACzB,OAAO,CAAP;AACD,CAboB,CAAvB;;AAgBA,SAASxB,OAAT,CAAkBQ,IAAlB,EAAwBO,MAAxB,EAAgCJ,MAAhC,EAAwCa,cAAxC,EAAwD;EACtDT,MAAM,CAACH,KAAP,GAAeD,MAAM,CAACC,KAAP,GAAe,CAA9B;EAEA,OAAO;IACLJ,IAAI,EAAEA,IADD;IAELO,MAAM,EAAEA,MAFH;IAGLJ,MAAM,EAAEA,MAHH;IAILa,cAAc,EAAEA;EAJX,CAAP;AAMD;;AAED,SAASN,YAAT,CAAuBF,GAAvB,EAA4B;EAC1B,OAAOG,MAAM,CAACC,QAAP,CAAgBJ,GAAhB,IAAuBA,GAAG,CAACV,MAA3B,GAAoCa,MAAM,CAACO,UAAP,CAAkBV,GAAlB,CAA3C;AACD"},"metadata":{},"sourceType":"script"}