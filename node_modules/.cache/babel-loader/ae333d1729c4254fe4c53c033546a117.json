{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHexadecimalValidator from 'validator/lib/isHexadecimal';\nexport var IS_HEXADECIMAL = 'isHexadecimal';\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\n\nexport function isHexadecimal(value) {\n  return typeof value === 'string' && isHexadecimalValidator(value);\n}\n/**\n * Checks if the string is a hexadecimal number.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsHexadecimal(validationOptions) {\n  return ValidateBy({\n    name: IS_HEXADECIMAL,\n    validator: {\n      validate: function (value, args) {\n        return isHexadecimal(value);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + '$property must be a hexadecimal number';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,sBAAP,MAAmC,6BAAnC;AAEA,OAAO,IAAMC,cAAc,GAAG,eAAvB;AAEP;;;;;AAIA,OAAM,SAAUC,aAAV,CAAwBC,KAAxB,EAAsC;EAC1C,OAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6BH,sBAAsB,CAACG,KAAD,CAA1D;AACD;AAED;;;;;AAIA,OAAM,SAAUC,aAAV,CAAwBC,iBAAxB,EAA6D;EACjE,OAAON,UAAU,CACf;IACEO,IAAI,EAAEL,cADR;IAEEM,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACL,KAAD,EAAQM,IAAR,EAAY;QAAc,oBAAa,CAACN,KAAD,CAAb;MAAoB,CAD/C;MAETO,cAAc,EAAEZ,YAAY,CAC1B,sBAAU;QAAI,iBAAU,GAAG,wCAAb;MAAqD,CADzC,EAE1BO,iBAF0B;IAFnB;EAFb,CADe,EAWfA,iBAXe,CAAjB;AAaD","names":["buildMessage","ValidateBy","isHexadecimalValidator","IS_HEXADECIMAL","isHexadecimal","value","IsHexadecimal","validationOptions","name","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsHexadecimal.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}