{"ast":null,"code":"const {\n  validateBuffer\n} = require(\"../utils/validation\");\n\nconst Module = require('../lib.js');\n\nfunction sign(msg, keypair) {\n  validateBuffer(msg);\n  validateBuffer(keypair, 128);\n  const msgLen = msg.length;\n\n  const msgArrPtr = Module._malloc(msgLen);\n\n  const msgArr = new Uint8Array(Module.HEAPU8.buffer, msgArrPtr, msgLen);\n\n  const keypairArrPtr = Module._malloc(128);\n\n  const keypairArr = new Uint8Array(Module.HEAPU8.buffer, keypairArrPtr, 128);\n\n  const sigPtr = Module._malloc(64);\n\n  const sigArr = new Uint8Array(Module.HEAPU8.buffer, sigPtr, 64);\n  msgArr.set(msg);\n  keypairArr.set(keypair);\n\n  Module._emscripten_sign(keypairArrPtr, msgArrPtr, msgLen, sigPtr);\n\n  Module._free(msgArrPtr);\n\n  Module._free(keypairArrPtr);\n\n  Module._free(sigPtr);\n\n  return Buffer.from(sigArr);\n}\n\nfunction verify(msg, publicKey, sig) {\n  validateBuffer(msg);\n  validateBuffer(publicKey, 32);\n  validateBuffer(sig, 64);\n  const msgLen = msg.length;\n\n  const msgArrPtr = Module._malloc(msgLen);\n\n  const msgArr = new Uint8Array(Module.HEAPU8.buffer, msgArrPtr, msgLen);\n\n  const publicKeyArrPtr = Module._malloc(32);\n\n  const publicKeyArr = new Uint8Array(Module.HEAPU8.buffer, publicKeyArrPtr, 32);\n\n  const sigPtr = Module._malloc(64);\n\n  const sigArr = new Uint8Array(Module.HEAPU8.buffer, sigPtr, 64);\n  msgArr.set(msg);\n  publicKeyArr.set(publicKey);\n  sigArr.set(sig);\n  const result = Module._emscripten_verify(msgArrPtr, msgLen, publicKeyArrPtr, sigPtr) === 0;\n\n  Module._free(msgArrPtr);\n\n  Module._free(publicKeyArrPtr);\n\n  Module._free(sigPtr);\n\n  return result;\n}\n\nmodule.exports = {\n  sign,\n  verify\n};","map":{"version":3,"names":["validateBuffer","require","Module","sign","msg","keypair","msgLen","length","msgArrPtr","_malloc","msgArr","Uint8Array","HEAPU8","buffer","keypairArrPtr","keypairArr","sigPtr","sigArr","set","_emscripten_sign","_free","Buffer","from","verify","publicKey","sig","publicKeyArrPtr","publicKeyArr","result","_emscripten_verify","module","exports"],"sources":["C:/Users/acer/node_modules/cardano-crypto.js/features/signing.js"],"sourcesContent":["\nconst {validateBuffer} = require(\"../utils/validation\")\nconst Module = require('../lib.js')\n\nfunction sign(msg, keypair) {\n  validateBuffer(msg)\n  validateBuffer(keypair, 128)\n\n  const msgLen = msg.length\n  const msgArrPtr = Module._malloc(msgLen)\n  const msgArr = new Uint8Array(Module.HEAPU8.buffer, msgArrPtr, msgLen)\n  const keypairArrPtr = Module._malloc(128)\n  const keypairArr = new Uint8Array(Module.HEAPU8.buffer, keypairArrPtr, 128)\n  const sigPtr = Module._malloc(64)\n  const sigArr = new Uint8Array(Module.HEAPU8.buffer, sigPtr, 64)\n\n  msgArr.set(msg)\n  keypairArr.set(keypair)\n\n  Module._emscripten_sign(keypairArrPtr, msgArrPtr, msgLen, sigPtr)\n  Module._free(msgArrPtr)\n  Module._free(keypairArrPtr)\n  Module._free(sigPtr)\n\n  return Buffer.from(sigArr)\n}\n\nfunction verify(msg, publicKey, sig) {\n  validateBuffer(msg)\n  validateBuffer(publicKey, 32)\n  validateBuffer(sig, 64)\n\n  const msgLen = msg.length\n  const msgArrPtr = Module._malloc(msgLen)\n  const msgArr = new Uint8Array(Module.HEAPU8.buffer, msgArrPtr, msgLen)\n  const publicKeyArrPtr = Module._malloc(32)\n  const publicKeyArr = new Uint8Array(Module.HEAPU8.buffer, publicKeyArrPtr, 32)\n  const sigPtr = Module._malloc(64)\n  const sigArr = new Uint8Array(Module.HEAPU8.buffer, sigPtr, 64)\n\n  msgArr.set(msg)\n  publicKeyArr.set(publicKey)\n  sigArr.set(sig)\n\n  const result = Module._emscripten_verify(msgArrPtr, msgLen, publicKeyArrPtr, sigPtr) === 0\n\n  Module._free(msgArrPtr)\n  Module._free(publicKeyArrPtr)\n  Module._free(sigPtr)\n\n  return result\n}\n\nmodule.exports = {\n  sign,\n  verify,\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}