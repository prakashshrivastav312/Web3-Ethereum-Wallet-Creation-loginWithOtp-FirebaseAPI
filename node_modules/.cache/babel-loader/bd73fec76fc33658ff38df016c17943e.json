{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nconst varuint = require('./varint');\n\nexports.range = n => [...Array(n).keys()];\n\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n\n  return buffer;\n}\n\nexports.reverseBuffer = reverseBuffer;\n\nfunction keyValsToBuffer(keyVals) {\n  const buffers = keyVals.map(keyValToBuffer);\n  buffers.push(Buffer.from([0]));\n  return Buffer.concat(buffers);\n}\n\nexports.keyValsToBuffer = keyValsToBuffer;\n\nfunction keyValToBuffer(keyVal) {\n  const keyLen = keyVal.key.length;\n  const valLen = keyVal.value.length;\n  const keyVarIntLen = varuint.encodingLength(keyLen);\n  const valVarIntLen = varuint.encodingLength(valLen);\n  const buffer = Buffer.allocUnsafe(keyVarIntLen + keyLen + valVarIntLen + valLen);\n  varuint.encode(keyLen, buffer, 0);\n  keyVal.key.copy(buffer, keyVarIntLen);\n  varuint.encode(valLen, buffer, keyVarIntLen + keyLen);\n  keyVal.value.copy(buffer, keyVarIntLen + keyLen + valVarIntLen);\n  return buffer;\n}\n\nexports.keyValToBuffer = keyValToBuffer; // https://github.com/feross/buffer/blob/master/index.js#L1127\n\nfunction verifuint(value, max) {\n  if (typeof value !== 'number') throw new Error('cannot write a non-number as a number');\n  if (value < 0) throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value) throw new Error('value has a fractional component');\n}\n\nfunction readUInt64LE(buffer, offset) {\n  const a = buffer.readUInt32LE(offset);\n  let b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\n\nexports.readUInt64LE = readUInt64LE;\n\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n}\n\nexports.writeUInt64LE = writeUInt64LE;","map":{"version":3,"names":["Object","defineProperty","exports","value","varuint","require","range","n","Array","keys","reverseBuffer","buffer","length","j","tmp","i","keyValsToBuffer","keyVals","buffers","map","keyValToBuffer","push","Buffer","from","concat","keyVal","keyLen","key","valLen","keyVarIntLen","encodingLength","valVarIntLen","allocUnsafe","encode","copy","verifuint","max","Error","Math","floor","readUInt64LE","offset","a","readUInt32LE","b","writeUInt64LE","writeInt32LE","writeUInt32LE"],"sources":["C:/Users/acer/node_modules/bip174/src/lib/converter/tools.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nconst varuint = require('./varint');\nexports.range = n => [...Array(n).keys()];\nfunction reverseBuffer(buffer) {\n  if (buffer.length < 1) return buffer;\n  let j = buffer.length - 1;\n  let tmp = 0;\n  for (let i = 0; i < buffer.length / 2; i++) {\n    tmp = buffer[i];\n    buffer[i] = buffer[j];\n    buffer[j] = tmp;\n    j--;\n  }\n  return buffer;\n}\nexports.reverseBuffer = reverseBuffer;\nfunction keyValsToBuffer(keyVals) {\n  const buffers = keyVals.map(keyValToBuffer);\n  buffers.push(Buffer.from([0]));\n  return Buffer.concat(buffers);\n}\nexports.keyValsToBuffer = keyValsToBuffer;\nfunction keyValToBuffer(keyVal) {\n  const keyLen = keyVal.key.length;\n  const valLen = keyVal.value.length;\n  const keyVarIntLen = varuint.encodingLength(keyLen);\n  const valVarIntLen = varuint.encodingLength(valLen);\n  const buffer = Buffer.allocUnsafe(\n    keyVarIntLen + keyLen + valVarIntLen + valLen,\n  );\n  varuint.encode(keyLen, buffer, 0);\n  keyVal.key.copy(buffer, keyVarIntLen);\n  varuint.encode(valLen, buffer, keyVarIntLen + keyLen);\n  keyVal.value.copy(buffer, keyVarIntLen + keyLen + valVarIntLen);\n  return buffer;\n}\nexports.keyValToBuffer = keyValToBuffer;\n// https://github.com/feross/buffer/blob/master/index.js#L1127\nfunction verifuint(value, max) {\n  if (typeof value !== 'number')\n    throw new Error('cannot write a non-number as a number');\n  if (value < 0)\n    throw new Error('specified a negative value for writing an unsigned value');\n  if (value > max) throw new Error('RangeError: value out of range');\n  if (Math.floor(value) !== value)\n    throw new Error('value has a fractional component');\n}\nfunction readUInt64LE(buffer, offset) {\n  const a = buffer.readUInt32LE(offset);\n  let b = buffer.readUInt32LE(offset + 4);\n  b *= 0x100000000;\n  verifuint(b + a, 0x001fffffffffffff);\n  return b + a;\n}\nexports.readUInt64LE = readUInt64LE;\nfunction writeUInt64LE(buffer, value, offset) {\n  verifuint(value, 0x001fffffffffffff);\n  buffer.writeInt32LE(value & -1, offset);\n  buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n  return offset + 8;\n}\nexports.writeUInt64LE = writeUInt64LE;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}