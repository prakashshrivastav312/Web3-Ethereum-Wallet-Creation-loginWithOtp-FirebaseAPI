{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isByteLengthValidator from 'validator/lib/isByteLength';\nexport var IS_BYTE_LENGTH = 'isByteLength';\n/**\n * Checks if the string's length (in bytes) falls in a range.\n * If given value is not a string, then it returns false.\n */\n\nexport function isByteLength(value, min, max) {\n  return typeof value === 'string' && isByteLengthValidator(value, {\n    min: min,\n    max: max\n  });\n}\n/**\n * Checks if the string's length (in bytes) falls in a range.\n * If given value is not a string, then it returns false.\n */\n\nexport function IsByteLength(min, max, validationOptions) {\n  return ValidateBy({\n    name: IS_BYTE_LENGTH,\n    constraints: [min, max],\n    validator: {\n      validate: function (value, args) {\n        return isByteLength(value, args.constraints[0], args.constraints[1]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix) {\n        return eachPrefix + \"$property's byte length must fall into ($constraint1, $constraint2) range\";\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,qBAAP,MAAkC,4BAAlC;AAEA,OAAO,IAAMC,cAAc,GAAG,cAAvB;AAEP;;;;;AAIA,OAAM,SAAUC,YAAV,CAAuBC,KAAvB,EAAuCC,GAAvC,EAAoDC,GAApD,EAAgE;EACpE,OAAO,OAAOF,KAAP,KAAiB,QAAjB,IAA6BH,qBAAqB,CAACG,KAAD,EAAQ;IAAEC,GAAG,KAAL;IAAOC,GAAG;EAAV,CAAR,CAAzD;AACD;AAED;;;;;AAIA,OAAM,SAAUC,YAAV,CAAuBF,GAAvB,EAAoCC,GAApC,EAAkDE,iBAAlD,EAAuF;EAC3F,OAAOR,UAAU,CACf;IACES,IAAI,EAAEP,cADR;IAEEQ,WAAW,EAAE,CAACL,GAAD,EAAMC,GAAN,CAFf;IAGEK,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACR,KAAD,EAAQS,IAAR,EAAY;QAAc,mBAAY,CAACT,KAAD,EAAQS,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAR,EAA6BG,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAA7B,CAAZ;MAA6D,CADxF;MAETI,cAAc,EAAEf,YAAY,CAC1B,sBAAU;QAAI,iBAAU,GAAG,2EAAb;MAAwF,CAD5E,EAE1BS,iBAF0B;IAFnB;EAHb,CADe,EAYfA,iBAZe,CAAjB;AAcD","names":["buildMessage","ValidateBy","isByteLengthValidator","IS_BYTE_LENGTH","isByteLength","value","min","max","IsByteLength","validationOptions","name","constraints","validator","validate","args","defaultMessage"],"sourceRoot":"","sources":["../../../../src/decorator/string/IsByteLength.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}