{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE || keyVal.key.length !== 1) {\n      throw new Error('Decode Error: could not decode tapInternalKey with key 0x' + keyVal.key.toString('hex'));\n    }\n\n    if (keyVal.value.length !== 32) {\n      throw new Error('Decode Error: tapInternalKey not a 32-byte x-only pubkey');\n    }\n\n    return keyVal.value;\n  }\n\n  function encode(value) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return {\n      key,\n      value\n    };\n  }\n\n  const expected = 'Buffer';\n\n  function check(data) {\n    return Buffer.isBuffer(data) && data.length === 32;\n  }\n\n  function canAdd(currentData, newData) {\n    return !!currentData && !!newData && currentData.tapInternalKey === undefined;\n  }\n\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd\n  };\n}\n\nexports.makeConverter = makeConverter;","map":{"version":3,"names":["Object","defineProperty","exports","value","makeConverter","TYPE_BYTE","decode","keyVal","key","length","Error","toString","encode","Buffer","from","expected","check","data","isBuffer","canAdd","currentData","newData","tapInternalKey","undefined"],"sources":["C:/Users/acer/node_modules/bip174/src/lib/converter/shared/tapInternalKey.js"],"sourcesContent":["'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE || keyVal.key.length !== 1) {\n      throw new Error(\n        'Decode Error: could not decode tapInternalKey with key 0x' +\n          keyVal.key.toString('hex'),\n      );\n    }\n    if (keyVal.value.length !== 32) {\n      throw new Error(\n        'Decode Error: tapInternalKey not a 32-byte x-only pubkey',\n      );\n    }\n    return keyVal.value;\n  }\n  function encode(value) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return { key, value };\n  }\n  const expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data) && data.length === 32;\n  }\n  function canAdd(currentData, newData) {\n    return (\n      !!currentData && !!newData && currentData.tapInternalKey === undefined\n    );\n  }\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd,\n  };\n}\nexports.makeConverter = makeConverter;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;;AACA,SAASC,aAAT,CAAuBC,SAAvB,EAAkC;EAChC,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;IACtB,IAAIA,MAAM,CAACC,GAAP,CAAW,CAAX,MAAkBH,SAAlB,IAA+BE,MAAM,CAACC,GAAP,CAAWC,MAAX,KAAsB,CAAzD,EAA4D;MAC1D,MAAM,IAAIC,KAAJ,CACJ,8DACEH,MAAM,CAACC,GAAP,CAAWG,QAAX,CAAoB,KAApB,CAFE,CAAN;IAID;;IACD,IAAIJ,MAAM,CAACJ,KAAP,CAAaM,MAAb,KAAwB,EAA5B,EAAgC;MAC9B,MAAM,IAAIC,KAAJ,CACJ,0DADI,CAAN;IAGD;;IACD,OAAOH,MAAM,CAACJ,KAAd;EACD;;EACD,SAASS,MAAT,CAAgBT,KAAhB,EAAuB;IACrB,MAAMK,GAAG,GAAGK,MAAM,CAACC,IAAP,CAAY,CAACT,SAAD,CAAZ,CAAZ;IACA,OAAO;MAAEG,GAAF;MAAOL;IAAP,CAAP;EACD;;EACD,MAAMY,QAAQ,GAAG,QAAjB;;EACA,SAASC,KAAT,CAAeC,IAAf,EAAqB;IACnB,OAAOJ,MAAM,CAACK,QAAP,CAAgBD,IAAhB,KAAyBA,IAAI,CAACR,MAAL,KAAgB,EAAhD;EACD;;EACD,SAASU,MAAT,CAAgBC,WAAhB,EAA6BC,OAA7B,EAAsC;IACpC,OACE,CAAC,CAACD,WAAF,IAAiB,CAAC,CAACC,OAAnB,IAA8BD,WAAW,CAACE,cAAZ,KAA+BC,SAD/D;EAGD;;EACD,OAAO;IACLjB,MADK;IAELM,MAFK;IAGLI,KAHK;IAILD,QAJK;IAKLI;EALK,CAAP;AAOD;;AACDjB,OAAO,CAACE,aAAR,GAAwBA,aAAxB"},"metadata":{},"sourceType":"script"}