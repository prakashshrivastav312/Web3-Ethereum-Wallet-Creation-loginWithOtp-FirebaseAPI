{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concatArgs = exports.seqEqual = void 0;\n/**\n * Check whether two sequences (e.g. Arrays of numbers) are equal.\n *\n * @param arr1 - One of the arrays to compare.\n * @param arr2 - The other array to compare.\n */\n\nfunction seqEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.seqEqual = seqEqual;\n/**\n * Check whether a value is a sequence (e.g. Array of numbers).\n *\n * @param val - The value to check.\n */\n\nfunction isSequence(val) {\n  return typeof val !== 'number';\n}\n/**\n * Concatenate all `arguments` into a single array. Each argument can be either\n * a single element or a sequence, which has a `length` property and supports\n * element retrieval via sequence[ix].\n *\n * > concatArgs(1, [2, 3], Buffer.from([4,5]), new Uint8Array([6, 7]));\n * [1,2,3,4,5,6,7]\n *\n * @param args - Concatenate of these args into a single array.\n * @returns Array of concatenated arguments\n */\n\n\nfunction concatArgs() {\n  const ret = [];\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  args.forEach(arg => {\n    if (isSequence(arg)) {\n      for (const j of arg) {\n        ret.push(j);\n      }\n    } else {\n      ret.push(arg);\n    }\n  });\n  return ret;\n}\n\nexports.concatArgs = concatArgs;","map":{"version":3,"mappings":";;;;;;AAEA;;;;;;;AAMA,SAAgBA,QAAhB,CAAyBC,IAAzB,EAAyCC,IAAzC,EAAuD;EACrD,IAAID,IAAI,CAACE,MAAL,KAAgBD,IAAI,CAACC,MAAzB,EAAiC;IAC/B,OAAO,KAAP;EACD;;EAED,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACE,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;IACpC,IAAIH,IAAI,CAACG,CAAD,CAAJ,KAAYF,IAAI,CAACE,CAAD,CAApB,EAAyB;MACvB,OAAO,KAAP;IACD;EACF;;EACD,OAAO,IAAP;AACD;;AAXDC;AAaA;;;;;;AAKA,SAASC,UAAT,CAAoBC,GAApB,EAA0C;EACxC,OAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;AAED;;;;;;;;;;;;;AAWA,SAAgBC,UAAhB,GAA4D;EAC1D,MAAMC,GAAG,GAAa,EAAtB;;EAD0D,kCAA9BC,IAA8B;IAA9BA,IAA8B;EAAA;;EAG1DA,IAAI,CAACC,OAAL,CAAcC,GAAD,IAAQ;IACnB,IAAIN,UAAU,CAACM,GAAD,CAAd,EAAqB;MACnB,KAAK,MAAMC,CAAX,IAAgBD,GAAhB,EAAqB;QACnBH,GAAG,CAACK,IAAJ,CAASD,CAAT;MACD;IACF,CAJD,MAIO;MACLJ,GAAG,CAACK,IAAJ,CAASF,GAAT;IACD;EACF,CARD;EASA,OAAOH,GAAP;AACD;;AAbDJ","names":["seqEqual","arr1","arr2","length","i","exports","isSequence","val","concatArgs","ret","args","forEach","arg","j","push"],"sourceRoot":"","sources":["../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}