{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExtensionProvider = void 0;\n\nclass ExtensionProvider {\n  constructor() {\n    this.popupName = \"connectPopup\";\n    this.popupOptions = \"directories=no,titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=no,width=375,height=569\";\n    this.extensionId = \"\";\n    this.extensionURL = \"\";\n    this.initialized = false;\n    this.extensionPopupWindow = null;\n    this.init().then();\n  }\n\n  init() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (window && window.elrondWallet) {\n        this.extensionId = window.elrondWallet.extensionId;\n        this.extensionURL = `chrome-extension://${this.extensionId}/index.html`;\n        this.initialized = true;\n      }\n\n      return this.initialized;\n    });\n  }\n\n  login() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.initialized) {\n        throw new Error(\"Wallet provider is not initialised, call init() first\");\n      }\n\n      this.openExtensionPopup();\n      const {\n        token\n      } = options;\n      const data = token ? token : \"\";\n      yield this.startExtMsgChannel(\"connect\", data);\n      return this.account.address;\n    });\n  }\n\n  logout() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.initialized) {\n        throw new Error(\"Wallet provider is not initialised, call init() first\");\n      }\n\n      return yield this.startBgrMsgChannel(\"logout\", this.account.address);\n    });\n  }\n\n  getAddress() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.initialized) {\n        throw new Error(\"Wallet provider is not initialised, call init() first\");\n      }\n\n      return this.account.address;\n    });\n  }\n\n  isInitialized() {\n    return this.initialized;\n  }\n\n  isConnected() {\n    return __awaiter(this, void 0, void 0, function* () {\n      return !!this.account;\n    });\n  }\n\n  sendTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.startExtMsgChannel(\"sendTransactions\", {\n        from: this.account.index,\n        transactions: [transaction]\n      })[0];\n    });\n  }\n\n  signTransaction(transaction) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.startExtMsgChannel(\"signTransactions\", {\n        from: this.account.index,\n        transactions: [transaction]\n      })[0];\n    });\n  }\n\n  signTransactions(transactions) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.startExtMsgChannel(\"sendTransactions\", {\n        from: this.account.index,\n        transactions: transactions\n      });\n    });\n  }\n\n  signMessage(message) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.openExtensionPopup();\n      const data = {\n        account: this.account.index,\n        message: message.message\n      };\n      return yield this.startExtMsgChannel(\"signMessage\", data);\n    });\n  }\n\n  openExtensionPopup() {\n    if (!this.initialized) {\n      throw new Error(\"Wallet provider is not initialised, call init() first\");\n    }\n\n    this.extensionPopupWindow = window.open(this.extensionURL, this.popupName, this.popupOptions);\n  }\n\n  startBgrMsgChannel(operation, connectData) {\n    return new Promise((resolve, reject) => {\n      window.postMessage({\n        target: \"erdw-inpage\",\n        type: operation,\n        data: connectData\n      }, window.origin);\n\n      const eventHandler = event => {\n        if (event.isTrusted && event.data.type && event.data.target === \"erdw-contentScript\") {\n          switch (event.data.type) {\n            case \"logoutResponse\":\n              window.removeEventListener(\"message\", eventHandler);\n              resolve(true);\n              break;\n          }\n        }\n      };\n\n      setTimeout(() => {\n        reject(\"Extension logout response timeout. No response from extension.\");\n      }, 3000);\n      window.addEventListener(\"message\", eventHandler, false);\n    });\n  }\n\n  startExtMsgChannel(operation, connectData) {\n    return new Promise((resolve, reject) => {\n      let isResolved = false;\n\n      const eventHandler = event => {\n        var _a, _b;\n\n        if (event.isTrusted && event.data.type && event.data.target === \"erdw-extension\") {\n          switch (event.data.type) {\n            case \"popupReady\":\n              event.ports[0].postMessage({\n                target: \"erdw-inpage\",\n                type: operation,\n                data: connectData\n              });\n              break;\n\n            case \"connectResult\":\n              (_a = this.extensionPopupWindow) === null || _a === void 0 ? void 0 : _a.close();\n              this.account = event.data.data;\n              window.removeEventListener(\"message\", eventHandler);\n              isResolved = true;\n              resolve(event.data.data);\n              break;\n\n            default:\n              this.handleExtResponseErr(event);\n              (_b = this.extensionPopupWindow) === null || _b === void 0 ? void 0 : _b.close();\n              window.removeEventListener(\"message\", eventHandler);\n              isResolved = true;\n              resolve(event.data.data);\n              break;\n          }\n        }\n      };\n\n      const windowCloseInterval = setInterval(() => {\n        var _a;\n\n        if ((_a = this.extensionPopupWindow) === null || _a === void 0 ? void 0 : _a.closed) {\n          window.removeEventListener(\"message\", eventHandler);\n          clearInterval(windowCloseInterval);\n          if (!isResolved) reject(\"Extension window was closed without response.\");\n        }\n      }, 500);\n      window.addEventListener(\"message\", eventHandler, false);\n    });\n  }\n\n  handleExtResponseErr(event) {\n    if (!event.data && !event.data.data) {\n      throw new Error(\"Extension response is empty.\");\n    }\n\n    if (event.data.type === \"transactionComplete\" && event.data.data.length === 0) {\n      throw new Error(\"Transactions list response is empty.\");\n    }\n  }\n\n}\n\nexports.ExtensionProvider = ExtensionProvider;","map":{"version":3,"mappings":"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","names":["ExtensionProvider","constructor","extensionPopupWindow","init","then","window","elrondWallet","extensionId","extensionURL","initialized","login","options","Error","openExtensionPopup","token","data","startExtMsgChannel","account","address","logout","startBgrMsgChannel","getAddress","isInitialized","isConnected","sendTransaction","transaction","from","index","transactions","signTransaction","signTransactions","signMessage","message","open","popupName","popupOptions","operation","connectData","Promise","resolve","reject","postMessage","target","type","origin","eventHandler","event","isTrusted","removeEventListener","setTimeout","addEventListener","isResolved","ports","_a","close","handleExtResponseErr","_b","windowCloseInterval","setInterval","closed","clearInterval","length","exports"],"sourceRoot":"","sources":["../../src/dapp/extensionProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}