{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst assert = __importStar(require(\"assert\"));\n\nconst utils_1 = require(\"./utils\");\n\nconst common_1 = require(\"../../common\");\n\nconst amount_1 = __importDefault(require(\"./amount\"));\n\nfunction parsePaymentChannelCreate(tx) {\n  assert.ok(tx.TransactionType === 'PaymentChannelCreate');\n  return common_1.removeUndefined({\n    memos: utils_1.parseMemos(tx),\n    amount: amount_1.default(tx.Amount).value,\n    destination: tx.Destination,\n    settleDelay: tx.SettleDelay,\n    publicKey: tx.PublicKey,\n    cancelAfter: tx.CancelAfter && utils_1.parseTimestamp(tx.CancelAfter),\n    sourceTag: tx.SourceTag,\n    destinationTag: tx.DestinationTag\n  });\n}\n\nexports.default = parsePaymentChannelCreate;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,SAASA,yBAAT,CAAmCC,EAAnC,EAA0C;EACxCC,MAAM,CAACC,EAAP,CAAUF,EAAE,CAACG,eAAH,KAAuB,sBAAjC;EAEA,OAAOC,yBAAgB;IACrBC,KAAK,EAAEC,mBAAWN,EAAX,CADc;IAErBO,MAAM,EAAEC,iBAAYR,EAAE,CAACS,MAAf,EAAuBC,KAFV;IAGrBC,WAAW,EAAEX,EAAE,CAACY,WAHK;IAIrBC,WAAW,EAAEb,EAAE,CAACc,WAJK;IAKrBC,SAAS,EAAEf,EAAE,CAACgB,SALO;IAMrBC,WAAW,EAAEjB,EAAE,CAACkB,WAAH,IAAkBZ,uBAAeN,EAAE,CAACkB,WAAlB,CANV;IAOrBC,SAAS,EAAEnB,EAAE,CAACoB,SAPO;IAQrBC,cAAc,EAAErB,EAAE,CAACsB;EARE,CAAhB,CAAP;AAUD;;AAEDC,kBAAexB,yBAAf","names":["parsePaymentChannelCreate","tx","assert","ok","TransactionType","common_1","memos","utils_1","amount","amount_1","Amount","value","destination","Destination","settleDelay","SettleDelay","publicKey","PublicKey","cancelAfter","CancelAfter","sourceTag","SourceTag","destinationTag","DestinationTag","exports"],"sourceRoot":"","sources":["../../../../src/ledger/parse/payment-channel-create.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}