{"ast":null,"code":"// {signature} {pubKey}\nvar bscript = require('../../script');\n\nvar typeforce = require('typeforce');\n\nfunction isCompressedCanonicalPubKey(pubKey) {\n  return bscript.isCanonicalPubKey(pubKey) && pubKey.length === 33;\n}\n\nfunction check(script) {\n  var chunks = bscript.decompile(script);\n  return chunks.length === 2 && bscript.isCanonicalSignature(chunks[0]) && isCompressedCanonicalPubKey(chunks[1]);\n}\n\ncheck.toJSON = function () {\n  return 'witnessPubKeyHash input';\n};\n\nfunction encodeStack(signature, pubKey) {\n  typeforce({\n    signature: bscript.isCanonicalSignature,\n    pubKey: isCompressedCanonicalPubKey\n  }, {\n    signature: signature,\n    pubKey: pubKey\n  });\n  return [signature, pubKey];\n}\n\nfunction decodeStack(stack) {\n  typeforce(typeforce.Array, stack);\n  typeforce(check, stack);\n  return {\n    signature: stack[0],\n    pubKey: stack[1]\n  };\n}\n\nmodule.exports = {\n  check: check,\n  decodeStack: decodeStack,\n  encodeStack: encodeStack\n};","map":{"version":3,"names":["bscript","require","typeforce","isCompressedCanonicalPubKey","pubKey","isCanonicalPubKey","length","check","script","chunks","decompile","isCanonicalSignature","toJSON","encodeStack","signature","decodeStack","stack","Array","module","exports"],"sources":["C:/Users/acer/node_modules/@tatumio/bitcoincashjs2-lib/src/templates/witnesspubkeyhash/input.js"],"sourcesContent":["// {signature} {pubKey}\n\nvar bscript = require('../../script')\nvar typeforce = require('typeforce')\n\nfunction isCompressedCanonicalPubKey (pubKey) {\n  return bscript.isCanonicalPubKey(pubKey) && pubKey.length === 33\n}\n\nfunction check (script) {\n  var chunks = bscript.decompile(script)\n\n  return chunks.length === 2 &&\n    bscript.isCanonicalSignature(chunks[0]) &&\n    isCompressedCanonicalPubKey(chunks[1])\n}\ncheck.toJSON = function () { return 'witnessPubKeyHash input' }\n\nfunction encodeStack (signature, pubKey) {\n  typeforce({\n    signature: bscript.isCanonicalSignature,\n    pubKey: isCompressedCanonicalPubKey\n  }, {\n    signature: signature,\n    pubKey: pubKey\n  })\n\n  return [signature, pubKey]\n}\n\nfunction decodeStack (stack) {\n  typeforce(typeforce.Array, stack)\n  typeforce(check, stack)\n\n  return {\n    signature: stack[0],\n    pubKey: stack[1]\n  }\n}\n\nmodule.exports = {\n  check: check,\n  decodeStack: decodeStack,\n  encodeStack: encodeStack\n}\n"],"mappings":"AAAA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,cAAD,CAArB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,WAAD,CAAvB;;AAEA,SAASE,2BAAT,CAAsCC,MAAtC,EAA8C;EAC5C,OAAOJ,OAAO,CAACK,iBAAR,CAA0BD,MAA1B,KAAqCA,MAAM,CAACE,MAAP,KAAkB,EAA9D;AACD;;AAED,SAASC,KAAT,CAAgBC,MAAhB,EAAwB;EACtB,IAAIC,MAAM,GAAGT,OAAO,CAACU,SAAR,CAAkBF,MAAlB,CAAb;EAEA,OAAOC,MAAM,CAACH,MAAP,KAAkB,CAAlB,IACLN,OAAO,CAACW,oBAAR,CAA6BF,MAAM,CAAC,CAAD,CAAnC,CADK,IAELN,2BAA2B,CAACM,MAAM,CAAC,CAAD,CAAP,CAF7B;AAGD;;AACDF,KAAK,CAACK,MAAN,GAAe,YAAY;EAAE,OAAO,yBAAP;AAAkC,CAA/D;;AAEA,SAASC,WAAT,CAAsBC,SAAtB,EAAiCV,MAAjC,EAAyC;EACvCF,SAAS,CAAC;IACRY,SAAS,EAAEd,OAAO,CAACW,oBADX;IAERP,MAAM,EAAED;EAFA,CAAD,EAGN;IACDW,SAAS,EAAEA,SADV;IAEDV,MAAM,EAAEA;EAFP,CAHM,CAAT;EAQA,OAAO,CAACU,SAAD,EAAYV,MAAZ,CAAP;AACD;;AAED,SAASW,WAAT,CAAsBC,KAAtB,EAA6B;EAC3Bd,SAAS,CAACA,SAAS,CAACe,KAAX,EAAkBD,KAAlB,CAAT;EACAd,SAAS,CAACK,KAAD,EAAQS,KAAR,CAAT;EAEA,OAAO;IACLF,SAAS,EAAEE,KAAK,CAAC,CAAD,CADX;IAELZ,MAAM,EAAEY,KAAK,CAAC,CAAD;EAFR,CAAP;AAID;;AAEDE,MAAM,CAACC,OAAP,GAAiB;EACfZ,KAAK,EAAEA,KADQ;EAEfQ,WAAW,EAAEA,WAFE;EAGfF,WAAW,EAAEA;AAHE,CAAjB"},"metadata":{},"sourceType":"script"}