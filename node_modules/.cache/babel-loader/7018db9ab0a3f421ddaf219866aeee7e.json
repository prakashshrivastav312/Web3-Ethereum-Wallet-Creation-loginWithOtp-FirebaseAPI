{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Connection = void 0;\n\nconst _ = __importStar(require(\"lodash\"));\n\nconst events_1 = require(\"events\");\n\nconst url_1 = require(\"url\");\n\nconst ws_1 = __importDefault(require(\"ws\"));\n\nconst rangeset_1 = __importDefault(require(\"./rangeset\"));\n\nconst errors_1 = require(\"./errors\");\n\nconst backoff_1 = require(\"./backoff\");\n\nconst INTENTIONAL_DISCONNECT_CODE = 4000;\n\nfunction createWebSocket(url, config) {\n  const options = {};\n\n  if (config.proxy != null) {\n    const parsedURL = url_1.parse(url);\n    const parsedProxyURL = url_1.parse(config.proxy);\n\n    const proxyOverrides = _.omitBy({\n      secureEndpoint: parsedURL.protocol === 'wss:',\n      secureProxy: parsedProxyURL.protocol === 'https:',\n      auth: config.proxyAuthorization,\n      ca: config.trustedCertificates,\n      key: config.key,\n      passphrase: config.passphrase,\n      cert: config.certificate\n    }, value => value == null);\n\n    const proxyOptions = Object.assign({}, parsedProxyURL, proxyOverrides);\n    let HttpsProxyAgent;\n\n    try {\n      HttpsProxyAgent = require('https-proxy-agent');\n    } catch (error) {\n      throw new Error('\"proxy\" option is not supported in the browser');\n    }\n\n    options.agent = new HttpsProxyAgent(proxyOptions);\n  }\n\n  if (config.authorization != null) {\n    const base64 = Buffer.from(config.authorization).toString('base64');\n    options.headers = {\n      Authorization: `Basic ${base64}`\n    };\n  }\n\n  const optionsOverrides = _.omitBy({\n    ca: config.trustedCertificates,\n    key: config.key,\n    passphrase: config.passphrase,\n    cert: config.certificate\n  }, value => value == null);\n\n  const websocketOptions = Object.assign({}, options, optionsOverrides);\n  const websocket = new ws_1.default(url, null, websocketOptions);\n\n  if (typeof websocket.setMaxListeners === 'function') {\n    websocket.setMaxListeners(Infinity);\n  }\n\n  return websocket;\n}\n\nfunction websocketSendAsync(ws, message) {\n  return new Promise((resolve, reject) => {\n    ws.send(message, undefined, error => {\n      if (error) {\n        reject(new errors_1.DisconnectedError(error.message, error));\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nclass LedgerHistory {\n  constructor() {\n    this.feeBase = null;\n    this.feeRef = null;\n    this.latestVersion = null;\n    this.reserveBase = null;\n    this.availableVersions = new rangeset_1.default();\n  }\n\n  hasVersion(version) {\n    return this.availableVersions.containsValue(version);\n  }\n\n  hasVersions(lowVersion, highVersion) {\n    return this.availableVersions.containsRange(lowVersion, highVersion);\n  }\n\n  update(ledgerMessage) {\n    this.feeBase = ledgerMessage.fee_base;\n    this.feeRef = ledgerMessage.fee_ref;\n    this.latestVersion = ledgerMessage.ledger_index;\n    this.reserveBase = ledgerMessage.reserve_base;\n\n    if (ledgerMessage.validated_ledgers) {\n      this.availableVersions.reset();\n      this.availableVersions.parseAndAddRanges(ledgerMessage.validated_ledgers);\n    } else {\n      this.availableVersions.addValue(this.latestVersion);\n    }\n  }\n\n}\n\nclass ConnectionManager {\n  constructor() {\n    this.promisesAwaitingConnection = [];\n  }\n\n  resolveAllAwaiting() {\n    this.promisesAwaitingConnection.map(_ref => {\n      let {\n        resolve\n      } = _ref;\n      return resolve();\n    });\n    this.promisesAwaitingConnection = [];\n  }\n\n  rejectAllAwaiting(error) {\n    this.promisesAwaitingConnection.map(_ref2 => {\n      let {\n        reject\n      } = _ref2;\n      return reject(error);\n    });\n    this.promisesAwaitingConnection = [];\n  }\n\n  awaitConnection() {\n    return new Promise((resolve, reject) => {\n      this.promisesAwaitingConnection.push({\n        resolve,\n        reject\n      });\n    });\n  }\n\n}\n\nclass RequestManager {\n  constructor() {\n    this.nextId = 0;\n    this.promisesAwaitingResponse = [];\n  }\n\n  cancel(id) {\n    const {\n      timer\n    } = this.promisesAwaitingResponse[id];\n    clearTimeout(timer);\n    delete this.promisesAwaitingResponse[id];\n  }\n\n  resolve(id, data) {\n    const {\n      timer,\n      resolve\n    } = this.promisesAwaitingResponse[id];\n    clearTimeout(timer);\n    resolve(data);\n    delete this.promisesAwaitingResponse[id];\n  }\n\n  reject(id, error) {\n    const {\n      timer,\n      reject\n    } = this.promisesAwaitingResponse[id];\n    clearTimeout(timer);\n    reject(error);\n    delete this.promisesAwaitingResponse[id];\n  }\n\n  rejectAll(error) {\n    this.promisesAwaitingResponse.forEach((_, id) => {\n      this.reject(id, error);\n    });\n  }\n\n  createRequest(data, timeout) {\n    const newId = this.nextId++;\n    const newData = JSON.stringify(Object.assign(Object.assign({}, data), {\n      id: newId\n    }));\n    const timer = setTimeout(() => this.reject(newId, new errors_1.TimeoutError()), timeout);\n\n    if (timer.unref) {\n      timer.unref();\n    }\n\n    const newPromise = new Promise((resolve, reject) => {\n      this.promisesAwaitingResponse[newId] = {\n        resolve,\n        reject,\n        timer\n      };\n    });\n    return [newId, newData, newPromise];\n  }\n\n  handleResponse(data) {\n    if (!Number.isInteger(data.id) || data.id < 0) {\n      throw new errors_1.ResponseFormatError('valid id not found in response', data);\n    }\n\n    if (!this.promisesAwaitingResponse[data.id]) {\n      return;\n    }\n\n    if (data.status === 'error') {\n      const error = new errors_1.RippledError(data.error_message || data.error, data);\n      this.reject(data.id, error);\n      return;\n    }\n\n    if (data.status !== 'success') {\n      const error = new errors_1.ResponseFormatError(`unrecognized status: ${data.status}`, data);\n      this.reject(data.id, error);\n      return;\n    }\n\n    this.resolve(data.id, data.result);\n  }\n\n}\n\nclass Connection extends events_1.EventEmitter {\n  constructor(url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    this._ws = null;\n    this._reconnectTimeoutID = null;\n    this._heartbeatIntervalID = null;\n    this._retryConnectionBackoff = new backoff_1.ExponentialBackoff({\n      min: 100,\n      max: 60 * 1000\n    });\n\n    this._trace = () => {};\n\n    this._ledger = new LedgerHistory();\n    this._requestManager = new RequestManager();\n    this._connectionManager = new ConnectionManager();\n\n    this._clearHeartbeatInterval = () => {\n      clearInterval(this._heartbeatIntervalID);\n    };\n\n    this._startHeartbeatInterval = () => {\n      this._clearHeartbeatInterval();\n\n      this._heartbeatIntervalID = setInterval(() => this._heartbeat(), this._config.timeout);\n    };\n\n    this._heartbeat = () => {\n      return this.request({\n        command: 'ping'\n      }).catch(() => {\n        return this.reconnect().catch(error => {\n          this.emit('error', 'reconnect', error.message, error);\n        });\n      });\n    };\n\n    this._onConnectionFailed = errorOrCode => {\n      if (this._ws) {\n        this._ws.removeAllListeners();\n\n        this._ws.on('error', () => {});\n\n        this._ws.close();\n\n        this._ws = null;\n      }\n\n      if (typeof errorOrCode === 'number') {\n        this._connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError(`Connection failed with code ${errorOrCode}.`, {\n          code: errorOrCode\n        }));\n      } else if (errorOrCode && errorOrCode.message) {\n        this._connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError(errorOrCode.message, errorOrCode));\n      } else {\n        this._connectionManager.rejectAllAwaiting(new errors_1.NotConnectedError('Connection failed.'));\n      }\n    };\n\n    this.setMaxListeners(Infinity);\n    this._url = url;\n    this._config = Object.assign({\n      timeout: 20 * 1000,\n      connectionTimeout: 5 * 1000\n    }, options);\n\n    if (typeof options.trace === 'function') {\n      this._trace = options.trace;\n    } else if (options.trace === true) {\n      this._trace = console.log;\n    }\n  }\n\n  _onMessage(message) {\n    this._trace('receive', message);\n\n    let data;\n\n    try {\n      data = JSON.parse(message);\n    } catch (error) {\n      this.emit('error', 'badMessage', error.message, message);\n      return;\n    }\n\n    if (data.type == null && data.error) {\n      this.emit('error', data.error, data.error_message, data);\n      return;\n    }\n\n    if (data.type) {\n      this.emit(data.type, data);\n    }\n\n    if (data.type === 'ledgerClosed') {\n      this._ledger.update(data);\n    }\n\n    if (data.type === 'response') {\n      try {\n        this._requestManager.handleResponse(data);\n      } catch (error) {\n        this.emit('error', 'badMessage', error.message, message);\n      }\n    }\n  }\n\n  get _state() {\n    return this._ws ? this._ws.readyState : ws_1.default.CLOSED;\n  }\n\n  get _shouldBeConnected() {\n    return this._ws !== null;\n  }\n\n  _waitForReady() {\n    return new Promise((resolve, reject) => {\n      if (!this._shouldBeConnected) {\n        reject(new errors_1.NotConnectedError());\n      } else if (this._state === ws_1.default.OPEN) {\n        resolve();\n      } else {\n        this.once('connected', () => resolve());\n      }\n    });\n  }\n\n  _subscribeToLedger() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const data = yield this.request({\n        command: 'subscribe',\n        streams: ['ledger']\n      });\n\n      if (_.isEmpty(data) || !data.ledger_index) {\n        try {\n          yield this.disconnect();\n        } catch (error) {} finally {\n          throw new errors_1.RippledNotInitializedError('Rippled not initialized');\n        }\n      }\n\n      this._ledger.update(data);\n    });\n  }\n\n  isConnected() {\n    return this._state === ws_1.default.OPEN;\n  }\n\n  connect() {\n    if (this.isConnected()) {\n      return Promise.resolve();\n    }\n\n    if (this._state === ws_1.default.CONNECTING) {\n      return this._connectionManager.awaitConnection();\n    }\n\n    if (!this._url) {\n      return Promise.reject(new errors_1.ConnectionError('Cannot connect because no server was specified'));\n    }\n\n    if (this._ws) {\n      return Promise.reject(new errors_1.RippleError('Websocket connection never cleaned up.', {\n        state: this._state\n      }));\n    }\n\n    const connectionTimeoutID = setTimeout(() => {\n      this._onConnectionFailed(new errors_1.ConnectionError(`Error: connect() timed out after ${this._config.connectionTimeout} ms. ` + `If your internet connection is working, the rippled server may be blocked or inaccessible. ` + `You can also try setting the 'connectionTimeout' option in the RippleAPI constructor.`));\n    }, this._config.connectionTimeout);\n    this._ws = createWebSocket(this._url, this._config);\n\n    this._ws.on('error', this._onConnectionFailed);\n\n    this._ws.on('error', () => clearTimeout(connectionTimeoutID));\n\n    this._ws.on('close', this._onConnectionFailed);\n\n    this._ws.on('close', () => clearTimeout(connectionTimeoutID));\n\n    this._ws.once('open', () => __awaiter(this, void 0, void 0, function* () {\n      this._ws.removeAllListeners();\n\n      clearTimeout(connectionTimeoutID);\n\n      this._ws.on('message', message => this._onMessage(message));\n\n      this._ws.on('error', error => this.emit('error', 'websocket', error.message, error));\n\n      this._ws.once('close', code => {\n        this._clearHeartbeatInterval();\n\n        this._requestManager.rejectAll(new errors_1.DisconnectedError('websocket was closed'));\n\n        this._ws.removeAllListeners();\n\n        this._ws = null;\n        this.emit('disconnected', code);\n\n        if (code !== INTENTIONAL_DISCONNECT_CODE) {\n          const retryTimeout = this._retryConnectionBackoff.duration();\n\n          this._trace('reconnect', `Retrying connection in ${retryTimeout}ms.`);\n\n          this.emit('reconnecting', this._retryConnectionBackoff.attempts);\n          this._reconnectTimeoutID = setTimeout(() => {\n            this.reconnect().catch(error => {\n              this.emit('error', 'reconnect', error.message, error);\n            });\n          }, retryTimeout);\n        }\n      });\n\n      try {\n        this._retryConnectionBackoff.reset();\n\n        yield this._subscribeToLedger();\n\n        this._startHeartbeatInterval();\n\n        this._connectionManager.resolveAllAwaiting();\n\n        this.emit('connected');\n      } catch (error) {\n        this._connectionManager.rejectAllAwaiting(error);\n\n        yield this.disconnect().catch(() => {});\n      }\n    }));\n\n    return this._connectionManager.awaitConnection();\n  }\n\n  disconnect() {\n    clearTimeout(this._reconnectTimeoutID);\n    this._reconnectTimeoutID = null;\n\n    if (this._state === ws_1.default.CLOSED || !this._ws) {\n      return Promise.resolve(undefined);\n    }\n\n    return new Promise(resolve => {\n      this._ws.once('close', code => resolve(code));\n\n      if (this._state !== ws_1.default.CLOSING) {\n        this._ws.close(INTENTIONAL_DISCONNECT_CODE);\n      }\n    });\n  }\n\n  reconnect() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.emit('reconnect');\n      yield this.disconnect();\n      yield this.connect();\n    });\n  }\n\n  getFeeBase() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.feeBase;\n    });\n  }\n\n  getFeeRef() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.feeRef;\n    });\n  }\n\n  getLedgerVersion() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.latestVersion;\n    });\n  }\n\n  getReserveBase() {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.reserveBase;\n    });\n  }\n\n  hasLedgerVersions(lowLedgerVersion, highLedgerVersion) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!highLedgerVersion) {\n        return this.hasLedgerVersion(lowLedgerVersion);\n      }\n\n      yield this._waitForReady();\n      return this._ledger.hasVersions(lowLedgerVersion, highLedgerVersion);\n    });\n  }\n\n  hasLedgerVersion(ledgerVersion) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this._waitForReady();\n      return this._ledger.hasVersion(ledgerVersion);\n    });\n  }\n\n  request(request, timeout) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._shouldBeConnected) {\n        throw new errors_1.NotConnectedError();\n      }\n\n      const [id, message, responsePromise] = this._requestManager.createRequest(request, timeout || this._config.timeout);\n\n      this._trace('send', message);\n\n      websocketSendAsync(this._ws, message).catch(error => {\n        this._requestManager.reject(id, error);\n      });\n      return responsePromise;\n    });\n  }\n\n  getUrl() {\n    return this._url;\n  }\n\n}\n\nexports.Connection = Connection;","map":{"version":3,"mappings":"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","names":["INTENTIONAL_DISCONNECT_CODE","createWebSocket","url","config","options","proxy","parsedURL","url_1","parsedProxyURL","proxyOverrides","_","omitBy","secureEndpoint","protocol","secureProxy","auth","proxyAuthorization","ca","trustedCertificates","key","passphrase","cert","certificate","value","proxyOptions","Object","assign","HttpsProxyAgent","require","error","Error","agent","authorization","base64","Buffer","from","toString","headers","Authorization","optionsOverrides","websocketOptions","websocket","ws_1","setMaxListeners","Infinity","websocketSendAsync","ws","message","Promise","resolve","reject","send","undefined","errors_1","LedgerHistory","constructor","rangeset_1","hasVersion","version","availableVersions","containsValue","hasVersions","lowVersion","highVersion","containsRange","update","ledgerMessage","feeBase","fee_base","feeRef","fee_ref","latestVersion","ledger_index","reserveBase","reserve_base","validated_ledgers","reset","parseAndAddRanges","addValue","ConnectionManager","resolveAllAwaiting","promisesAwaitingConnection","map","rejectAllAwaiting","awaitConnection","push","RequestManager","cancel","id","timer","promisesAwaitingResponse","clearTimeout","data","rejectAll","forEach","createRequest","timeout","newId","nextId","newData","JSON","stringify","setTimeout","unref","newPromise","handleResponse","Number","isInteger","status","error_message","result","Connection","events_1","backoff_1","min","max","clearInterval","_heartbeatIntervalID","_clearHeartbeatInterval","setInterval","_heartbeat","_config","request","command","catch","reconnect","emit","errorOrCode","_ws","removeAllListeners","on","close","_connectionManager","code","_url","connectionTimeout","trace","_trace","console","log","_onMessage","parse","type","_ledger","_requestManager","_state","readyState","CLOSED","_shouldBeConnected","_waitForReady","OPEN","once","_subscribeToLedger","streams","isEmpty","disconnect","isConnected","connect","CONNECTING","state","connectionTimeoutID","_onConnectionFailed","__awaiter","retryTimeout","_retryConnectionBackoff","duration","attempts","_reconnectTimeoutID","_startHeartbeatInterval","CLOSING","getFeeBase","getFeeRef","getLedgerVersion","getReserveBase","hasLedgerVersions","lowLedgerVersion","highLedgerVersion","hasLedgerVersion","ledgerVersion","responsePromise","getUrl","exports"],"sourceRoot":"","sources":["../../../src/common/connection.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}