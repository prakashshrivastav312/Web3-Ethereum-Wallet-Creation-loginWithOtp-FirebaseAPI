{"ast":null,"code":"module.exports = function (e) {\n  var t = {};\n\n  function r(n) {\n    if (t[n]) return t[n].exports;\n    var i = t[n] = {\n      i: n,\n      l: !1,\n      exports: {}\n    };\n    return e[n].call(i.exports, i, i.exports, r), i.l = !0, i.exports;\n  }\n\n  return r.m = e, r.c = t, r.d = function (e, t, n) {\n    r.o(e, t) || Object.defineProperty(e, t, {\n      enumerable: !0,\n      get: n\n    });\n  }, r.r = function (e) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n  }, r.t = function (e, t) {\n    if (1 & t && (e = r(e)), 8 & t) return e;\n    if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (r.r(n), Object.defineProperty(n, \"default\", {\n      enumerable: !0,\n      value: e\n    }), 2 & t && \"string\" != typeof e) for (var i in e) r.d(n, i, function (t) {\n      return e[t];\n    }.bind(null, i));\n    return n;\n  }, r.n = function (e) {\n    var t = e && e.__esModule ? function () {\n      return e.default;\n    } : function () {\n      return e;\n    };\n    return r.d(t, \"a\", t), t;\n  }, r.o = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  }, r.p = \"\", r(r.s = 22);\n}([function (e, t) {\n  e.exports = require(\"@babel/runtime/regenerator\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/classCallCheck\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/createClass\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/defineProperty\");\n}, function (e, t) {\n  e.exports = require(\"injectpromise\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/typeof\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/toConsumableArray\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/slicedToArray\");\n}, function (e, t) {\n  e.exports = require(\"ethers\");\n}, function (e, t) {\n  e.exports = require(\"bignumber.js\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");\n}, function (e, t) {\n  e.exports = require(\"semver\");\n}, function (e, t) {\n  e.exports = require(\"elliptic\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/inherits\");\n}, function (e, t) {\n  e.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n}, function (e, t) {\n  e.exports = require(\"axios\");\n}, function (e, t) {\n  e.exports = require(\"validator\");\n}, function (e, t) {\n  e.exports = require(\"eventemitter3\");\n}, function (e) {\n  e.exports = JSON.parse('{\"a\":\"3.2.7\"}');\n}, function (e, t) {\n  e.exports = require(\"querystring\");\n}, function (e, t, r) {\n  \"use strict\";\n\n  r.r(t), r.d(t, \"default\", function () {\n    return Pt;\n  });\n  var n = {};\n  r.r(n), r.d(n, \"byte2hexStr\", function () {\n    return O;\n  }), r.d(n, \"bytesToString\", function () {\n    return C;\n  }), r.d(n, \"hextoString\", function () {\n    return B;\n  }), r.d(n, \"byteArray2hexStr\", function () {\n    return E;\n  }), r.d(n, \"base64DecodeFromString\", function () {\n    return q;\n  }), r.d(n, \"base64EncodeToString\", function () {\n    return D;\n  });\n  var i = {};\n  r.r(i), r.d(i, \"bin2String\", function () {\n    return V;\n  }), r.d(i, \"arrayEquals\", function () {\n    return L;\n  }), r.d(i, \"stringToBytes\", function () {\n    return U;\n  }), r.d(i, \"byte2hexStr\", function () {\n    return O;\n  }), r.d(i, \"bytesToString\", function () {\n    return C;\n  }), r.d(i, \"hextoString\", function () {\n    return B;\n  }), r.d(i, \"byteArray2hexStr\", function () {\n    return E;\n  }), r.d(i, \"base64DecodeFromString\", function () {\n    return q;\n  }), r.d(i, \"base64EncodeToString\", function () {\n    return D;\n  }), r.d(i, \"hexChar2byte\", function () {\n    return z;\n  }), r.d(i, \"isHexChar\", function () {\n    return M;\n  }), r.d(i, \"hexStr2byteArray\", function () {\n    return G;\n  }), r.d(i, \"strToDate\", function () {\n    return J;\n  }), r.d(i, \"isNumber\", function () {\n    return Y;\n  }), r.d(i, \"getStringType\", function () {\n    return $;\n  });\n  var a = {};\n  r.r(a), r.d(a, \"encode58\", function () {\n    return ee;\n  }), r.d(a, \"decode58\", function () {\n    return te;\n  });\n  var s = {};\n  r.r(s), r.d(s, \"keccak256\", function () {\n    return ie;\n  }), r.d(s, \"sha256\", function () {\n    return ae;\n  }), r.d(s, \"toUtf8Bytes\", function () {\n    return se;\n  }), r.d(s, \"toUtf8String\", function () {\n    return oe;\n  }), r.d(s, \"recoverAddress\", function () {\n    return ue;\n  }), r.d(s, \"SigningKey\", function () {\n    return ce;\n  }), r.d(s, \"AbiCoder\", function () {\n    return de;\n  });\n  var o = {};\n  r.r(o), r.d(o, \"getBase58CheckAddress\", function () {\n    return le;\n  }), r.d(o, \"decodeBase58Address\", function () {\n    return he;\n  }), r.d(o, \"signTransaction\", function () {\n    return fe;\n  }), r.d(o, \"arrayToBase64String\", function () {\n    return ve;\n  }), r.d(o, \"signBytes\", function () {\n    return pe;\n  }), r.d(o, \"getRowBytesFromTransactionBase64\", function () {\n    return ge;\n  }), r.d(o, \"genPriKey\", function () {\n    return be;\n  }), r.d(o, \"computeAddress\", function () {\n    return me;\n  }), r.d(o, \"getAddressFromPriKey\", function () {\n    return ye;\n  }), r.d(o, \"decode58Check\", function () {\n    return ke;\n  }), r.d(o, \"isAddressValid\", function () {\n    return xe;\n  }), r.d(o, \"getBase58CheckAddressFromPriKeyBase64String\", function () {\n    return we;\n  }), r.d(o, \"getHexStrAddressFromPriKeyBase64String\", function () {\n    return Ie;\n  }), r.d(o, \"getAddressFromPriKeyBase64String\", function () {\n    return Ae;\n  }), r.d(o, \"getPubKeyFromPriKey\", function () {\n    return Pe;\n  }), r.d(o, \"ECKeySign\", function () {\n    return We;\n  }), r.d(o, \"SHA256\", function () {\n    return Se;\n  }), r.d(o, \"passwordToAddress\", function () {\n    return _e;\n  }), r.d(o, \"pkToAddress\", function () {\n    return Ne;\n  });\n  var u = {};\n  r.r(u), r.d(u, \"generateAccount\", function () {\n    return Te;\n  });\n  var c = {};\n  r.r(c), r.d(c, \"decodeParams\", function () {\n    return Fe;\n  }), r.d(c, \"encodeParams\", function () {\n    return Oe;\n  });\n\n  var d = r(0),\n      l = r.n(d),\n      h = r(1),\n      f = r.n(h),\n      v = r(6),\n      p = r.n(v),\n      g = r(2),\n      b = r.n(g),\n      m = r(3),\n      y = r.n(m),\n      k = r(11),\n      x = r.n(k),\n      w = r(15),\n      I = r.n(w),\n      A = r(16),\n      P = r.n(A),\n      W = r(14),\n      S = r.n(W),\n      _ = r(4),\n      N = r.n(_),\n      T = r(17),\n      j = r.n(T);\n\n  function F() {\n    var e = this;\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\", this.encode = function (t) {\n      for (var r, n, i, a, s, o, u, c = \"\", d = 0; d < t.length;) a = (r = t.charCodeAt(d++)) >> 2, s = (3 & r) << 4 | (n = t.charCodeAt(d++)) >> 4, o = (15 & n) << 2 | (i = t.charCodeAt(d++)) >> 6, u = 63 & i, isNaN(n) ? o = u = 64 : isNaN(i) && (u = 64), c = c + e._keyStr.charAt(a) + e._keyStr.charAt(s) + e._keyStr.charAt(o) + e._keyStr.charAt(u);\n\n      return c;\n    }, this.encodeIgnoreUtf8 = function (t) {\n      for (var r, n, i, a, s, o, u, c = \"\", d = 0; d < t.length;) a = (r = t[d++]) >> 2, s = (3 & r) << 4 | (n = t[d++]) >> 4, o = (15 & n) << 2 | (i = t[d++]) >> 6, u = 63 & i, isNaN(n) ? o = u = 64 : isNaN(i) && (u = 64), c = c + e._keyStr.charAt(a) + e._keyStr.charAt(s) + e._keyStr.charAt(o) + e._keyStr.charAt(u);\n\n      return c;\n    }, this.decode = function (t) {\n      var r,\n          n,\n          i,\n          a,\n          s,\n          o,\n          u = \"\",\n          c = 0;\n\n      for (t = t.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); c < t.length;) r = e._keyStr.indexOf(t.charAt(c++)) << 2 | (a = e._keyStr.indexOf(t.charAt(c++))) >> 4, n = (15 & a) << 4 | (s = e._keyStr.indexOf(t.charAt(c++))) >> 2, i = (3 & s) << 6 | (o = e._keyStr.indexOf(t.charAt(c++))), u += String.fromCharCode(r), 64 != s && (u += String.fromCharCode(n)), 64 != o && (u += String.fromCharCode(i));\n\n      return e._utf8_decode(u);\n    }, this.decodeToByteArray = function (t) {\n      var r,\n          n,\n          i,\n          a,\n          s,\n          o,\n          u = \"\",\n          c = 0;\n\n      for (t = t.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\"); c < t.length;) r = e._keyStr.indexOf(t.charAt(c++)) << 2 | (a = e._keyStr.indexOf(t.charAt(c++))) >> 4, n = (15 & a) << 4 | (s = e._keyStr.indexOf(t.charAt(c++))) >> 2, i = (3 & s) << 6 | (o = e._keyStr.indexOf(t.charAt(c++))), u += String.fromCharCode(r), 64 != s && (u += String.fromCharCode(n)), 64 != o && (u += String.fromCharCode(i));\n\n      return e._out2ByteArray(u);\n    }, this._out2ByteArray = function (e) {\n      for (var t = new Array(e.length), r = 0, n = 0; r < e.length;) n = e.charCodeAt(r), t[r] = n, r++;\n\n      return t;\n    }, this._utf8_encode = function (e) {\n      e = e.replace(/\\r\\n/g, \"\\n\");\n\n      for (var t = \"\", r = 0; r < e.length; r++) {\n        var n = e.charCodeAt(r);\n        n < 128 ? t += String.fromCharCode(n) : n > 127 && n < 2048 ? (t += String.fromCharCode(n >> 6 | 192), t += String.fromCharCode(63 & n | 128)) : (t += String.fromCharCode(n >> 12 | 224), t += String.fromCharCode(n >> 6 & 63 | 128), t += String.fromCharCode(63 & n | 128));\n      }\n\n      return t;\n    }, this._utf8_decode = function (e) {\n      for (var t = \"\", r = 0, n = 0, i = 0, a = 0; r < e.length;) (n = e.charCodeAt(r)) < 128 ? (t += String.fromCharCode(n), r++) : n > 191 && n < 224 ? (i = e.charCodeAt(r + 1), t += String.fromCharCode((31 & n) << 6 | 63 & i), r += 2) : (i = e.charCodeAt(r + 1), a = e.charCodeAt(r + 2), t += String.fromCharCode((15 & n) << 12 | (63 & i) << 6 | 63 & a), r += 3);\n\n      return t;\n    };\n  }\n\n  function O(e) {\n    if (\"number\" != typeof e) throw new Error(\"Input must be a number\");\n    if (e < 0 || e > 255) throw new Error(\"Input must be a byte\");\n    var t = \"\";\n    return t += \"0123456789ABCDEF\".charAt(e >> 4), t += \"0123456789ABCDEF\".charAt(15 & e);\n  }\n\n  function C(e) {\n    if (\"string\" == typeof e) return e;\n\n    for (var t = \"\", r = 0; r < e.length; r++) {\n      var n = e[r].toString(2),\n          i = n.match(/^1+?(?=0)/);\n\n      if (i && 8 === n.length) {\n        for (var a = i[0].length, s = e[r].toString(2).slice(7 - a), o = 1; o < a; o++) s += e[o + r].toString(2).slice(2);\n\n        t += String.fromCharCode(parseInt(s, 2)), r += a - 1;\n      } else t += String.fromCharCode(e[r]);\n    }\n\n    return t;\n  }\n\n  function B(e) {\n    for (var t = e.replace(/^0x/, \"\").split(\"\"), r = \"\", n = 0; n < t.length / 2; n++) {\n      var i = \"0x\".concat(t[2 * n]).concat(t[2 * n + 1]);\n      r += String.fromCharCode(i);\n    }\n\n    return r;\n  }\n\n  function E(e) {\n    for (var t = \"\", r = 0; r < e.length; r++) t += O(e[r]);\n\n    return t;\n  }\n\n  function q(e) {\n    return new F().decodeToByteArray(e);\n  }\n\n  function D(e) {\n    return new F().encodeIgnoreUtf8(e);\n  }\n\n  var K = r(7),\n      R = r.n(K),\n      H = /^(41)/;\n\n  function V(e) {\n    return C(e);\n  }\n\n  function L(e, t, r) {\n    if (e.length != t.length) return !1;\n    var n;\n\n    for (n = 0; n < e.length; n++) if (r) {\n      if (e[n] != t[n]) return !1;\n    } else if (JSON.stringify(e[n]) != JSON.stringify(t[n])) return !1;\n\n    return !0;\n  }\n\n  function U(e) {\n    if (\"string\" != typeof e) throw new Error(\"The passed string is not a string\");\n    var t,\n        r,\n        n = new Array();\n    t = e.length;\n\n    for (var i = 0; i < t; i++) (r = e.charCodeAt(i)) >= 65536 && r <= 1114111 ? (n.push(r >> 18 & 7 | 240), n.push(r >> 12 & 63 | 128), n.push(r >> 6 & 63 | 128), n.push(63 & r | 128)) : r >= 2048 && r <= 65535 ? (n.push(r >> 12 & 15 | 224), n.push(r >> 6 & 63 | 128), n.push(63 & r | 128)) : r >= 128 && r <= 2047 ? (n.push(r >> 6 & 31 | 192), n.push(63 & r | 128)) : n.push(255 & r);\n\n    return n;\n  }\n\n  function z(e) {\n    var t;\n    if (e >= \"A\" && e <= \"F\" ? t = e.charCodeAt(0) - \"A\".charCodeAt(0) + 10 : e >= \"a\" && e <= \"f\" ? t = e.charCodeAt(0) - \"a\".charCodeAt(0) + 10 : e >= \"0\" && e <= \"9\" && (t = e.charCodeAt(0) - \"0\".charCodeAt(0)), \"number\" == typeof t) return t;\n    throw new Error(\"The passed hex char is not a valid hex char\");\n  }\n\n  function M(e) {\n    return e >= \"A\" && e <= \"F\" || e >= \"a\" && e <= \"f\" || e >= \"0\" && e <= \"9\" ? 1 : 0;\n  }\n\n  function G(e) {\n    if (\"string\" != typeof e) throw new Error(\"The passed string is not a string\");\n\n    for (var t = Array(), r = 0, n = 0, i = 0, a = 0; a < e.length; a++) {\n      var s = e.charAt(a);\n      if (!M(s)) throw new Error(\"The passed hex char is not a valid hex string\");\n      r <<= 4, r += z(s), 0 == ++n % 2 && (t[i++] = r, r = 0);\n    }\n\n    return t;\n  }\n\n  function J(e) {\n    if (!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(e)) throw new Error(\"The passed date string is not valid\");\n    var t = e.split(\" \"),\n        r = t[0].split(\"-\"),\n        n = parseInt(r[0], 10),\n        i = parseInt(r[1], 10) - 1,\n        a = parseInt(r[2], 10);\n\n    if (t.length > 1) {\n      var s = t[1].split(\"-\"),\n          o = parseInt(s[0], 10),\n          u = parseInt(s[1], 10),\n          c = parseInt(s[2], 10);\n      return new Date(n, i, a, o, u, c);\n    }\n\n    return new Date(n, i, a);\n  }\n\n  function Y(e) {\n    return e >= \"0\" && e <= \"9\" ? 1 : 0;\n  }\n\n  function $(e) {\n    if (null == e) return -1;\n    if (\"string\" != typeof e) return -1;\n    if (0 == e.length || \"\" == e) return -1;\n    var t = 0;\n    if (40 == e.length) for (; t < 40; t++) {\n      if (!M(e.charAt(t))) break;\n    }\n    if (40 == t) return 1;\n\n    for (t = 0; t < e.length; t++) {\n      if (!Y(e.charAt(t))) break;\n    }\n\n    if (t == e.length) return 2;\n\n    for (t = 0; t < e.length; t++) {\n      if (e.charAt(t) > \" \") return 3;\n    }\n\n    return -1;\n  }\n\n  for (var X = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\", Z = {}, Q = 0; Q < X.length; Q++) Z[X.charAt(Q)] = Q;\n\n  function ee(e) {\n    if (0 === e.length) return \"\";\n    var t,\n        r,\n        n = [0];\n\n    for (t = 0; t < e.length; t++) {\n      for (r = 0; r < n.length; r++) n[r] <<= 8;\n\n      n[0] += e[t];\n      var i = 0;\n\n      for (r = 0; r < n.length; ++r) n[r] += i, i = n[r] / 58 | 0, n[r] %= 58;\n\n      for (; i;) n.push(i % 58), i = i / 58 | 0;\n    }\n\n    for (t = 0; 0 === e[t] && t < e.length - 1; t++) n.push(0);\n\n    return n.reverse().map(function (e) {\n      return X[e];\n    }).join(\"\");\n  }\n\n  function te(e) {\n    if (0 === e.length) return [];\n    var t,\n        r,\n        n = [0];\n\n    for (t = 0; t < e.length; t++) {\n      var i = e[t];\n      if (!(i in Z)) throw new Error(\"Non-base58 character\");\n\n      for (r = 0; r < n.length; r++) n[r] *= 58;\n\n      n[0] += Z[i];\n      var a = 0;\n\n      for (r = 0; r < n.length; ++r) n[r] += a, a = n[r] >> 8, n[r] &= 255;\n\n      for (; a;) n.push(255 & a), a >>= 8;\n    }\n\n    for (t = 0; \"1\" === e[t] && t < e.length - 1; t++) n.push(0);\n\n    return n.reverse();\n  }\n\n  var re = r(13),\n      ne = r(9),\n      ie = ne.utils.keccak256,\n      ae = ne.utils.sha256,\n      se = ne.utils.toUtf8Bytes,\n      oe = ne.utils.toUtf8String,\n      ue = ne.utils.recoverAddress,\n      ce = ne.utils.SigningKey,\n      de = ne.utils.AbiCoder;\n\n  function le(e) {\n    var t = Se(e),\n        r = Se(t).slice(0, 4);\n    return ee(r = e.concat(r));\n  }\n\n  function he(e) {\n    if (\"string\" != typeof e) return !1;\n    if (e.length <= 4) return !1;\n    var t = te(e);\n    if (e.length <= 4) return !1;\n    var r = t.length - 4,\n        n = t.slice(r),\n        i = Se(t = t.slice(0, r)),\n        a = Se(i).slice(0, 4);\n    if (n[0] == a[0] && n[1] == a[1] && n[2] == a[2] && n[3] == a[3]) return t;\n    throw new Error(\"Invalid address provided\");\n  }\n\n  function fe(e, t) {\n    \"string\" == typeof e && (e = G(e));\n    var r = We(G(t.txID), e);\n    return Array.isArray(t.signature) ? t.signature.includes(r) || t.signature.push(r) : t.signature = [r], t;\n  }\n\n  function ve(e) {\n    return btoa(String.fromCharCode.apply(String, R()(e)));\n  }\n\n  function pe(e, t) {\n    return \"string\" == typeof e && (e = G(e)), We(Se(t), e);\n  }\n\n  function ge(e) {\n    var t = q(e);\n    return proto.protocol.Transaction.deserializeBinary(t).getRawData().serializeBinary();\n  }\n\n  function be() {\n    for (var e = new re.ec(\"secp256k1\").genKeyPair().getPrivate().toString(\"hex\"); e.length < 64;) e = \"0\".concat(e);\n\n    return G(e);\n  }\n\n  function me(e) {\n    return 65 === e.length && (e = e.slice(1)), G(\"41\" + ie(e).toString().substring(2).substring(24));\n  }\n\n  function ye(e) {\n    return me(Pe(e));\n  }\n\n  function ke(e) {\n    var t = te(e);\n    if (t.length <= 4) return !1;\n    var r = t.slice(0, t.length - 4),\n        n = Se(r),\n        i = Se(n);\n    return i[0] === t[r.length] && i[1] === t[r.length + 1] && i[2] === t[r.length + 2] && i[3] === t[r.length + 3] && r;\n  }\n\n  function xe(e) {\n    if (\"string\" != typeof e) return !1;\n    if (34 !== e.length) return !1;\n    var t = te(e);\n    if (25 !== t.length) return !1;\n    if (65 !== t[0]) return !1;\n    var r = t.slice(21),\n        n = Se(t = t.slice(0, 21)),\n        i = Se(n).slice(0, 4);\n    return r[0] == i[0] && r[1] == i[1] && r[2] == i[2] && r[3] == i[3];\n  }\n\n  function we(e) {\n    return le(me(Pe(q(e))));\n  }\n\n  function Ie(e) {\n    return E(me(Pe(q(e))));\n  }\n\n  function Ae(e) {\n    return D(me(Pe(q(e))));\n  }\n\n  function Pe(e) {\n    for (var t = new re.ec(\"secp256k1\").keyFromPrivate(e, \"bytes\").getPublic(), r = t.x, n = t.y, i = r.toString(\"hex\"); i.length < 64;) i = \"0\".concat(i);\n\n    for (var a = n.toString(\"hex\"); a.length < 64;) a = \"0\".concat(a);\n\n    return G(\"04\".concat(i).concat(a));\n  }\n\n  function We(e, t) {\n    for (var r = new re.ec(\"secp256k1\").keyFromPrivate(t, \"bytes\").sign(e), n = r.r, i = r.s, a = r.recoveryParam, s = n.toString(\"hex\"); s.length < 64;) s = \"0\".concat(s);\n\n    for (var o = i.toString(\"hex\"); o.length < 64;) o = \"0\".concat(o);\n\n    return s + o + O(a);\n  }\n\n  function Se(e) {\n    var t = E(e);\n    return G(ae(\"0x\" + t).replace(/^0x/, \"\"));\n  }\n\n  function _e(e) {\n    return le(ye(q(e)));\n  }\n\n  function Ne(e) {\n    return le(ye(G(e)));\n  }\n\n  function Te() {\n    var e = be(),\n        t = Pe(e),\n        r = ye(e);\n    return {\n      privateKey: E(e),\n      publicKey: E(t),\n      address: {\n        base58: le(r),\n        hex: E(r)\n      }\n    };\n  }\n\n  var je = new de();\n\n  function Fe(e, t, r, n) {\n    if (r && \"boolean\" != typeof r || (n = r, r = t, t = e, e = []), n && r.replace(/^0x/, \"\").length % 64 == 8 && (r = \"0x\" + r.replace(/^0x/, \"\").substring(8)), r.replace(/^0x/, \"\").length % 64) throw new Error(\"The encoded string is not valid. Its length must be a multiple of 64.\");\n    return t = t.map(function (e) {\n      return /trcToken/.test(e) && (e = e.replace(/trcToken/, \"uint256\")), e;\n    }), je.decode(t, r).reduce(function (r, n, i) {\n      return \"address\" == t[i] && (n = \"41\" + n.substr(2).toLowerCase()), e.length ? r[e[i]] = n : r.push(n), r;\n    }, e.length ? {} : []);\n  }\n\n  function Oe(e, t) {\n    for (var r = 0; r < e.length; r++) \"address\" === e[r] && (t[r] = Pt.address.toHex(t[r]).replace(H, \"0x\"));\n\n    return je.encode(e, t);\n  }\n\n  var Ce = r(18),\n      Be = r.n(Ce),\n      Ee = r(10),\n      qe = r.n(Ee);\n\n  function De(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function Ke(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? De(Object(r), !0).forEach(function (t) {\n        N()(e, t, r[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : De(Object(r)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n      });\n    }\n\n    return e;\n  }\n\n  var Re = Ke(Ke({}, {\n    isValidURL: function (e) {\n      return \"string\" == typeof e && Be.a.isURL(e.toString(), {\n        protocols: [\"http\", \"https\"],\n        require_tld: !1\n      });\n    },\n    isObject: function (e) {\n      return e === Object(e) && \"[object Array]\" !== Object.prototype.toString.call(e);\n    },\n    isArray: function (e) {\n      return Array.isArray(e);\n    },\n    isJson: function (e) {\n      try {\n        return !!JSON.parse(e);\n      } catch (e) {\n        return !1;\n      }\n    },\n    isBoolean: function (e) {\n      return \"boolean\" == typeof e;\n    },\n    isBigNumber: function (e) {\n      return e && (e instanceof qe.a || e.constructor && \"BigNumber\" === e.constructor.name);\n    },\n    isString: function (e) {\n      return \"string\" == typeof e || e && e.constructor && \"String\" === e.constructor.name;\n    },\n    isFunction: function (e) {\n      return \"function\" == typeof e;\n    },\n    isHex: function (e) {\n      return \"string\" == typeof e && !isNaN(parseInt(e, 16)) && /^(0x|)[a-fA-F0-9]+$/.test(e);\n    },\n    isInteger: function (e) {\n      return null !== e && Number.isInteger(Number(e));\n    },\n    hasProperty: function (e, t) {\n      return Object.prototype.hasOwnProperty.call(e, t);\n    },\n    hasProperties: function (e) {\n      for (var t = this, r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) n[i - 1] = arguments[i];\n\n      return n.length && !n.map(function (r) {\n        return t.hasProperty(e, r);\n      }).includes(!1);\n    },\n    mapEvent: function (e) {\n      var t = {\n        block: e.block_number,\n        timestamp: e.block_timestamp,\n        contract: e.contract_address,\n        name: e.event_name,\n        transaction: e.transaction_id,\n        result: e.result,\n        resourceNode: e.resource_Node || (e._unconfirmed ? \"fullNode\" : \"solidityNode\")\n      };\n      return e._unconfirmed && (t.unconfirmed = e._unconfirmed), e._fingerprint && (t.fingerprint = e._fingerprint), t;\n    },\n    parseEvent: function (e, t) {\n      var r = t.inputs;\n      if (!e.result) return e;\n      if (this.isObject(e.result)) for (var n = 0; n < r.length; n++) {\n        var i = r[n];\n        \"address\" == i.type && i.name in e.result && (e.result[i.name] = \"41\" + e.result[i.name].substr(2).toLowerCase());\n      } else this.isArray(e.result) && (e.result = e.result.reduce(function (e, t, n) {\n        var i = r[n],\n            a = i.name;\n        return \"address\" == i.type && (t = \"41\" + t.substr(2).toLowerCase()), e[a] = t, e;\n      }, {}));\n      return e;\n    },\n    padLeft: function (e, t, r) {\n      for (var n = e.toString(); n.length < r;) n = t + n;\n\n      return n;\n    },\n    isNotNullOrUndefined: function (e) {\n      return null != e;\n    },\n    sleep: function () {\n      var e = arguments;\n      return f()(l.a.mark(function t() {\n        var r;\n        return l.a.wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              return r = e.length > 0 && void 0 !== e[0] ? e[0] : 1e3, t.abrupt(\"return\", new Promise(function (e) {\n                return setTimeout(e, r);\n              }));\n\n            case 2:\n            case \"end\":\n              return t.stop();\n          }\n        }, t);\n      }))();\n    }\n  }), {}, {\n    code: i,\n    accounts: u,\n    base58: a,\n    bytes: n,\n    crypto: o,\n    abi: c,\n    ethersUtils: s\n  }),\n      He = {\n    HttpProvider: function () {\n      function e(t) {\n        var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3e4,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n            a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {},\n            s = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : \"/\";\n        if (b()(this, e), !Re.isValidURL(t)) throw new Error(\"Invalid URL provided to HttpProvider\");\n        if (isNaN(r) || r < 0) throw new Error(\"Invalid timeout duration provided\");\n        if (!Re.isObject(a)) throw new Error(\"Invalid headers object provided\");\n        t = t.replace(/\\/+$/, \"\"), this.host = t, this.timeout = r, this.user = n, this.password = i, this.headers = a, this.statusPage = s, this.instance = j.a.create({\n          baseURL: t,\n          timeout: r,\n          headers: a,\n          auth: n && {\n            user: n,\n            password: i\n          }\n        });\n      }\n\n      var t;\n      return y()(e, [{\n        key: \"setStatusPage\",\n        value: function () {\n          var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"/\";\n          this.statusPage = e;\n        }\n      }, {\n        key: \"isConnected\",\n        value: (t = f()(l.a.mark(function e() {\n          var t,\n              r = arguments;\n          return l.a.wrap(function (e) {\n            for (;;) switch (e.prev = e.next) {\n              case 0:\n                return t = r.length > 0 && void 0 !== r[0] ? r[0] : this.statusPage, e.abrupt(\"return\", this.request(t).then(function (e) {\n                  return Re.hasProperties(e, \"blockID\", \"block_header\");\n                }).catch(function () {\n                  return !1;\n                }));\n\n              case 2:\n              case \"end\":\n                return e.stop();\n            }\n          }, e, this);\n        })), function () {\n          return t.apply(this, arguments);\n        })\n      }, {\n        key: \"request\",\n        value: function (e) {\n          var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n              r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"get\";\n          return r = r.toLowerCase(), this.instance.request({\n            data: \"post\" == r && Object.keys(t).length ? t : null,\n            params: \"get\" == r && t,\n            url: e,\n            method: r\n          }).then(function (e) {\n            return e.data;\n          });\n        }\n      }]), e;\n    }()\n  },\n      Ve = r(19),\n      Le = r.n(Ve),\n      Ue = r(20),\n      ze = r(12),\n      Me = r.n(ze),\n      Ge = r(5),\n      Je = r.n(Ge),\n      Ye = r(8),\n      $e = r.n(Ye);\n\n  function Xe(e) {\n    if (\"undefined\" == typeof Symbol || null == e[Symbol.iterator]) {\n      if (Array.isArray(e) || (e = function (e, t) {\n        if (!e) return;\n        if (\"string\" == typeof e) return Ze(e, t);\n        var r = Object.prototype.toString.call(e).slice(8, -1);\n        \"Object\" === r && e.constructor && (r = e.constructor.name);\n        if (\"Map\" === r || \"Set\" === r) return Array.from(e);\n        if (\"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return Ze(e, t);\n      }(e))) {\n        var t = 0,\n            r = function () {};\n\n        return {\n          s: r,\n          n: function () {\n            return t >= e.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: e[t++]\n            };\n          },\n          e: function (e) {\n            throw e;\n          },\n          f: r\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var n,\n        i,\n        a = !0,\n        s = !1;\n    return {\n      s: function () {\n        n = e[Symbol.iterator]();\n      },\n      n: function () {\n        var e = n.next();\n        return a = e.done, e;\n      },\n      e: function (e) {\n        s = !0, i = e;\n      },\n      f: function () {\n        try {\n          a || null == n.return || n.return();\n        } finally {\n          if (s) throw i;\n        }\n      }\n    };\n  }\n\n  function Ze(e, t) {\n    (null == t || t > e.length) && (t = e.length);\n\n    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];\n\n    return n;\n  }\n\n  var Qe,\n      et = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (b()(this, e), !t || !t instanceof Pt) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t;\n    }\n\n    return y()(e, [{\n      key: \"invalid\",\n      value: function (e) {\n        return e.msg || \"Invalid \".concat(e.name).concat(\"address\" === e.type ? \" address\" : \"\", \" provided\");\n      }\n    }, {\n      key: \"notPositive\",\n      value: function (e) {\n        return \"\".concat(e.name, \" must be a positive integer\");\n      }\n    }, {\n      key: \"notEqual\",\n      value: function (e) {\n        return e.msg || \"\".concat(e.names[0], \" can not be equal to \").concat(e.names[1]);\n      }\n    }, {\n      key: \"notValid\",\n      value: function () {\n        var e,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : new Function(),\n            n = {},\n            i = !1,\n            a = Xe(t);\n\n        try {\n          for (a.s(); !(e = a.n()).done;) {\n            var s = e.value,\n                o = s.name,\n                u = s.names,\n                c = s.value,\n                d = s.type,\n                l = s.gt,\n                h = s.lt,\n                f = s.gte,\n                v = s.lte,\n                p = (s.se, s.optional);\n\n            if (!p || Re.isNotNullOrUndefined(c) && (\"boolean\" === d || !1 !== c)) {\n              switch (n[s.name] = s.value, d) {\n                case \"address\":\n                  this.tronWeb.isAddress(c) ? n[o] = this.tronWeb.address.toHex(c) : i = !0;\n                  break;\n\n                case \"integer\":\n                  (!Re.isInteger(c) || \"number\" == typeof l && c <= s.gt || \"number\" == typeof h && c >= s.lt || \"number\" == typeof f && c < s.gte || \"number\" == typeof v && c > s.lte) && (i = !0);\n                  break;\n\n                case \"positive-integer\":\n                  if (!Re.isInteger(c) || c <= 0) return void r(this.notPositive(s));\n                  break;\n\n                case \"tokenId\":\n                  Re.isString(c) && c.length || (i = !0);\n                  break;\n\n                case \"notEmptyObject\":\n                  Re.isObject(c) && Object.keys(c).length || (i = !0);\n                  break;\n\n                case \"notEqual\":\n                  if (n[u[0]] === n[u[1]]) return r(this.notEqual(s)), !0;\n                  break;\n\n                case \"resource\":\n                  [\"BANDWIDTH\", \"ENERGY\"].includes(c) || (i = !0);\n                  break;\n\n                case \"url\":\n                  Re.isValidURL(c) || (i = !0);\n                  break;\n\n                case \"hex\":\n                  Re.isHex(c) || (i = !0);\n                  break;\n\n                case \"array\":\n                  Array.isArray(c) || (i = !0);\n                  break;\n\n                case \"not-empty-string\":\n                  Re.isString(c) && c.length || (i = !0);\n                  break;\n\n                case \"boolean\":\n                  Re.isBoolean(c) || (i = !0);\n                  break;\n\n                case \"string\":\n                  (!Re.isString(c) || \"number\" == typeof l && c.length <= s.gt || \"number\" == typeof h && c.length >= s.lt || \"number\" == typeof f && c.length < s.gte || \"number\" == typeof v && c.length > s.lte) && (i = !0);\n              }\n\n              if (i) return r(this.invalid(s)), !0;\n            }\n          }\n        } catch (e) {\n          a.e(e);\n        } finally {\n          a.f();\n        }\n\n        return !1;\n      }\n    }]), e;\n  }();\n\n  function tt(e) {\n    if (\"undefined\" == typeof Symbol || null == e[Symbol.iterator]) {\n      if (Array.isArray(e) || (e = function (e, t) {\n        if (!e) return;\n        if (\"string\" == typeof e) return rt(e, t);\n        var r = Object.prototype.toString.call(e).slice(8, -1);\n        \"Object\" === r && e.constructor && (r = e.constructor.name);\n        if (\"Map\" === r || \"Set\" === r) return Array.from(e);\n        if (\"Arguments\" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return rt(e, t);\n      }(e))) {\n        var t = 0,\n            r = function () {};\n\n        return {\n          s: r,\n          n: function () {\n            return t >= e.length ? {\n              done: !0\n            } : {\n              done: !1,\n              value: e[t++]\n            };\n          },\n          e: function (e) {\n            throw e;\n          },\n          f: r\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    var n,\n        i,\n        a = !0,\n        s = !1;\n    return {\n      s: function () {\n        n = e[Symbol.iterator]();\n      },\n      n: function () {\n        var e = n.next();\n        return a = e.done, e;\n      },\n      e: function (e) {\n        s = !0, i = e;\n      },\n      f: function () {\n        try {\n          a || null == n.return || n.return();\n        } finally {\n          if (s) throw i;\n        }\n      }\n    };\n  }\n\n  function rt(e, t) {\n    (null == t || t > e.length) && (t = e.length);\n\n    for (var r = 0, n = new Array(t); r < t; r++) n[r] = e[r];\n\n    return n;\n  }\n\n  function nt(e) {\n    return Pt.address.toHex(e);\n  }\n\n  function it(e) {\n    return Qe.tronWeb.fromUtf8(e);\n  }\n\n  function at(e, t) {\n    return e.Error ? t(e.Error) : e.result && e.result.message ? t(Qe.tronWeb.toUtf8(e.result.message)) : t(null, e);\n  }\n\n  var st = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (b()(this, e), !t || !t instanceof Pt) throw new Error(\"Expected instance of TronWeb\");\n      Qe = this, this.tronWeb = t, this.injectPromise = Je()(this), this.validator = new et(t);\n    }\n\n    var t, r, n, i;\n    return y()(e, [{\n      key: \"sendTrx\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Re.isFunction(n) && (i = n, n = {}), Re.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Re.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.sendTrx, e, t, r, n);\n\n        if (t = parseInt(t), !this.validator.notValid([{\n          name: \"recipient\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"origin\",\n          type: \"address\",\n          value: r\n        }, {\n          names: [\"recipient\", \"origin\"],\n          type: \"notEqual\",\n          msg: \"Cannot transfer TRX to the same account\"\n        }, {\n          name: \"amount\",\n          type: \"integer\",\n          gt: 0,\n          value: t\n        }], i)) {\n          var a = {\n            to_address: nt(e),\n            owner_address: nt(r),\n            amount: t\n          };\n          n && n.permissionId && (a.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/createtransaction\", a, \"post\").then(function (e) {\n            return at(e, i);\n          }).catch(function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"sendToken\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            a = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Re.isFunction(i) && (a = i, i = {}), Re.isFunction(n) ? (a = n, n = this.tronWeb.defaultAddress.hex) : Re.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !a) return this.injectPromise(this.sendToken, e, t, r, n, i);\n\n        if (t = parseInt(t), !this.validator.notValid([{\n          name: \"recipient\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"origin\",\n          type: \"address\",\n          value: n\n        }, {\n          names: [\"recipient\", \"origin\"],\n          type: \"notEqual\",\n          msg: \"Cannot transfer tokens to the same account\"\n        }, {\n          name: \"amount\",\n          type: \"integer\",\n          gt: 0,\n          value: t\n        }, {\n          name: \"token ID\",\n          type: \"tokenId\",\n          value: r\n        }], a)) {\n          var s = {\n            to_address: nt(e),\n            owner_address: nt(n),\n            asset_name: it(r),\n            amount: parseInt(t)\n          };\n          i && i.permissionId && (s.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/transferasset\", s, \"post\").then(function (e) {\n            return at(e, a);\n          }).catch(function (e) {\n            return a(e);\n          });\n        }\n      }\n    }, {\n      key: \"purchaseToken\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            a = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Re.isFunction(i) && (a = i, i = {}), Re.isFunction(n) ? (a = n, n = this.tronWeb.defaultAddress.hex) : Re.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !a) return this.injectPromise(this.purchaseToken, e, t, r, n, i);\n\n        if (!this.validator.notValid([{\n          name: \"buyer\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: e\n        }, {\n          names: [\"buyer\", \"issuer\"],\n          type: \"notEqual\",\n          msg: \"Cannot purchase tokens from same account\"\n        }, {\n          name: \"amount\",\n          type: \"integer\",\n          gt: 0,\n          value: r\n        }, {\n          name: \"token ID\",\n          type: \"tokenId\",\n          value: t\n        }], a)) {\n          var s = {\n            to_address: nt(e),\n            owner_address: nt(n),\n            asset_name: it(t),\n            amount: parseInt(r)\n          };\n          i && i.permissionId && (s.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/participateassetissue\", s, \"post\").then(function (e) {\n            return at(e, a);\n          }).catch(function (e) {\n            return a(e);\n          });\n        }\n      }\n    }, {\n      key: \"freezeBalance\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 3,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"BANDWIDTH\",\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : void 0,\n            a = arguments.length > 5 ? arguments[5] : void 0,\n            s = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];\n        if (Re.isFunction(a) && (s = a, a = {}), Re.isFunction(i) ? (s = i, i = void 0) : Re.isObject(i) && (a = i, i = void 0), Re.isFunction(n) ? (s = n, n = this.tronWeb.defaultAddress.hex) : Re.isObject(n) && (a = n, n = this.tronWeb.defaultAddress.hex), Re.isFunction(t) && (s = t, t = 3), Re.isFunction(r) && (s = r, r = \"BANDWIDTH\"), !s) return this.injectPromise(this.freezeBalance, e, t, r, n, i, a);\n\n        if (!this.validator.notValid([{\n          name: \"origin\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"receiver\",\n          type: \"address\",\n          value: i,\n          optional: !0\n        }, {\n          name: \"amount\",\n          type: \"integer\",\n          gt: 0,\n          value: e\n        }, {\n          name: \"duration\",\n          type: \"integer\",\n          gte: 3,\n          value: t\n        }, {\n          name: \"resource\",\n          type: \"resource\",\n          value: r,\n          msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY'\n        }], s)) {\n          var o = {\n            owner_address: nt(n),\n            frozen_balance: parseInt(e),\n            frozen_duration: parseInt(t),\n            resource: r\n          };\n          Re.isNotNullOrUndefined(i) && nt(i) !== nt(n) && (o.receiver_address = nt(i)), a && a.permissionId && (o.Permission_id = a.permissionId), this.tronWeb.fullNode.request(\"wallet/freezebalance\", o, \"post\").then(function (e) {\n            return at(e, s);\n          }).catch(function (e) {\n            return s(e);\n          });\n        }\n      }\n    }, {\n      key: \"unfreezeBalance\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"BANDWIDTH\",\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Re.isFunction(n) && (i = n, n = {}), Re.isFunction(r) ? (i = r, r = void 0) : Re.isObject(r) && (n = r, r = void 0), Re.isFunction(t) ? (i = t, t = this.tronWeb.defaultAddress.hex) : Re.isObject(t) && (n = t, t = this.tronWeb.defaultAddress.hex), Re.isFunction(e) && (i = e, e = \"BANDWIDTH\"), !i) return this.injectPromise(this.unfreezeBalance, e, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"origin\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"receiver\",\n          type: \"address\",\n          value: r,\n          optional: !0\n        }, {\n          name: \"resource\",\n          type: \"resource\",\n          value: e,\n          msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY'\n        }], i)) {\n          var a = {\n            owner_address: nt(t),\n            resource: e\n          };\n          Re.isNotNullOrUndefined(r) && nt(r) !== nt(t) && (a.receiver_address = nt(r)), n && n.permissionId && (a.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/unfreezebalance\", a, \"post\").then(function (e) {\n            return at(e, i);\n          }).catch(function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"withdrawBlockRewards\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 ? arguments[1] : void 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Re.isFunction(t) && (r = t, t = {}), Re.isFunction(e) ? (r = e, e = this.tronWeb.defaultAddress.hex) : Re.isObject(e) && (t = e, e = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.withdrawBlockRewards, e, t);\n\n        if (!this.validator.notValid([{\n          name: \"origin\",\n          type: \"address\",\n          value: e\n        }], r)) {\n          var n = {\n            owner_address: nt(e)\n          };\n          t && t.permissionId && (n.Permission_id = t.permissionId), this.tronWeb.fullNode.request(\"wallet/withdrawbalance\", n, \"post\").then(function (e) {\n            return at(e, r);\n          }).catch(function (e) {\n            return r(e);\n          });\n        }\n      }\n    }, {\n      key: \"applyForSR\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Re.isFunction(r) && (n = r, r = {}), Re.isObject(t) && Re.isValidURL(e) && (r = t, t = e, e = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.applyForSR, e, t, r);\n\n        if (!this.validator.notValid([{\n          name: \"origin\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"url\",\n          type: \"url\",\n          value: t,\n          msg: \"Invalid url provided\"\n        }], n)) {\n          var i = {\n            owner_address: nt(e),\n            url: it(t)\n          };\n          r && r.permissionId && (i.Permission_id = r.permissionId), this.tronWeb.fullNode.request(\"wallet/createwitness\", i, \"post\").then(function (e) {\n            return at(e, n);\n          }).catch(function (e) {\n            return n(e);\n          });\n        }\n      }\n    }, {\n      key: \"vote\",\n      value: function () {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 2 ? arguments[2] : void 0,\n            i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Re.isFunction(n) && (i = n, n = {}), Re.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Re.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.vote, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"voter\",\n          type: \"address\",\n          value: r\n        }, {\n          name: \"votes\",\n          type: \"notEmptyObject\",\n          value: t\n        }], i)) {\n          var a = !1;\n\n          if (t = Object.entries(t).map(function (t) {\n            var r = $e()(t, 2),\n                n = r[0],\n                i = r[1];\n            if (!a) return e.validator.notValid([{\n              name: \"SR\",\n              type: \"address\",\n              value: n\n            }, {\n              name: \"vote count\",\n              type: \"integer\",\n              gt: 0,\n              value: i,\n              msg: \"Invalid vote count provided for SR: \" + n\n            }]) ? a = !0 : {\n              vote_address: nt(n),\n              vote_count: parseInt(i)\n            };\n          }), !a) {\n            var s = {\n              owner_address: nt(r),\n              votes: t\n            };\n            n && n.permissionId && (s.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/votewitnessaccount\", s, \"post\").then(function (e) {\n              return at(e, i);\n            }).catch(function (e) {\n              return i(e);\n            });\n          }\n        }\n      }\n    }, {\n      key: \"createSmartContract\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Re.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.createSmartContract, e, t);\n        var n = e.feeLimit || this.tronWeb.feeLimit,\n            i = e.userFeePercentage;\n        \"number\" == typeof i || i || (i = 100);\n        var a = e.originEnergyLimit || 1e7,\n            s = e.callValue || 0,\n            o = e.tokenValue,\n            u = e.tokenId || e.token_id,\n            c = e.abi,\n            d = void 0 !== c && c,\n            l = e.bytecode,\n            h = void 0 !== l && l,\n            f = e.parameters,\n            v = void 0 === f ? [] : f,\n            p = e.name,\n            g = void 0 === p ? \"\" : p;\n        if (d && Re.isString(d)) try {\n          d = JSON.parse(d);\n        } catch (e) {\n          return r(\"Invalid options.abi provided\");\n        }\n        if (d.entrys && (d = d.entrys), !Re.isArray(d)) return r(\"Invalid options.abi provided\");\n        var b = d.some(function (e) {\n          return \"constructor\" === e.type && \"payable\" === e.stateMutability.toLowerCase();\n        });\n\n        if (!this.validator.notValid([{\n          name: \"bytecode\",\n          type: \"hex\",\n          value: h\n        }, {\n          name: \"feeLimit\",\n          type: \"integer\",\n          value: n,\n          gt: 0,\n          lte: 5e9\n        }, {\n          name: \"callValue\",\n          type: \"integer\",\n          value: s,\n          gte: 0\n        }, {\n          name: \"userFeePercentage\",\n          type: \"integer\",\n          value: i,\n          gte: 0,\n          lte: 100\n        }, {\n          name: \"originEnergyLimit\",\n          type: \"integer\",\n          value: a,\n          gte: 0,\n          lte: 1e7\n        }, {\n          name: \"parameters\",\n          type: \"array\",\n          value: v\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"tokenValue\",\n          type: \"integer\",\n          value: o,\n          gte: 0,\n          optional: !0\n        }, {\n          name: \"tokenId\",\n          type: \"integer\",\n          value: u,\n          gte: 0,\n          optional: !0\n        }], r)) {\n          if (b && 0 == s && 0 == o) return r(\"When contract is payable, options.callValue or options.tokenValue must be a positive integer\");\n          if (!b && (s > 0 || o > 0)) return r(\"When contract is not payable, options.callValue and options.tokenValue must be 0\");\n          if (e.rawParameter && Re.isString(e.rawParameter)) v = e.rawParameter.replace(/^(0x)/, \"\");else {\n            var m = d.find(function (e) {\n              return \"constructor\" === e.type;\n            });\n\n            if (void 0 !== m && m) {\n              var y = new de(),\n                  k = [],\n                  x = [];\n              if (m = m.inputs, v.length != m.length) return r(\"constructor needs \".concat(m.length, \" but \").concat(v.length, \" provided\"));\n\n              for (var w = 0; w < v.length; w++) {\n                var I = m[w].type,\n                    A = v[w];\n                if (!I || !Re.isString(I) || !I.length) return r(\"Invalid parameter type provided: \" + I);\n                \"address\" === I ? A = nt(A).replace(H, \"0x\") : \"address[\" === I.match(/^([^\\x5b]*)(\\x5b|$)/)[0] ? A = A.map(function (e) {\n                  return nt(e).replace(H, \"0x\");\n                }) : /trcToken/.test(I) && (I = I.replace(/trcToken/, \"uint256\")), k.push(I), x.push(A);\n              }\n\n              try {\n                v = y.encode(k, x).replace(/^(0x)/, \"\");\n              } catch (e) {\n                return r(e);\n              }\n            } else v = \"\";\n          }\n          var P = {\n            owner_address: nt(t),\n            fee_limit: parseInt(n),\n            call_value: parseInt(s),\n            consume_user_resource_percent: i,\n            origin_energy_limit: a,\n            abi: JSON.stringify(d),\n            bytecode: h,\n            parameter: v,\n            name: g\n          };\n          Re.isNotNullOrUndefined(o) && (P.call_token_value = parseInt(o)), Re.isNotNullOrUndefined(u) && (P.token_id = parseInt(u)), e && e.permissionId && (P.Permission_id = e.permissionId), this.tronWeb.fullNode.request(\"wallet/deploycontract\", P, \"post\").then(function (e) {\n            return at(e, r);\n          }).catch(function (e) {\n            return r(e);\n          });\n        }\n      }\n    }, {\n      key: \"triggerSmartContract\",\n      value: function () {\n        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];\n\n        return \"object\" !== p()(t[2]) && (t[2] = {\n          feeLimit: t[2],\n          callValue: t[3]\n        }, t.splice(3, 1)), this._triggerSmartContract.apply(this, t);\n      }\n    }, {\n      key: \"triggerConstantContract\",\n      value: function () {\n        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];\n\n        return t[2]._isConstant = !0, this.triggerSmartContract.apply(this, t);\n      }\n    }, {\n      key: \"triggerConfirmedConstantContract\",\n      value: function () {\n        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++) t[r] = arguments[r];\n\n        return t[2]._isConstant = !0, t[2].confirmed = !0, this.triggerSmartContract.apply(this, t);\n      }\n    }, {\n      key: \"_triggerSmartContract\",\n      value: function (e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],\n            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,\n            a = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Re.isFunction(i) && (a = i, i = this.tronWeb.defaultAddress.hex), Re.isFunction(n) && (a = n, n = []), !a) return this.injectPromise(this._triggerSmartContract, e, t, r, n, i);\n        var s = Object.assign({\n          callValue: 0,\n          feeLimit: this.tronWeb.feeLimit\n        }, r),\n            o = s.tokenValue,\n            u = s.tokenId,\n            c = s.callValue,\n            d = s.feeLimit;\n\n        if (!this.validator.notValid([{\n          name: \"feeLimit\",\n          type: \"integer\",\n          value: d,\n          gt: 0,\n          lte: 5e9\n        }, {\n          name: \"callValue\",\n          type: \"integer\",\n          value: c,\n          gte: 0\n        }, {\n          name: \"parameters\",\n          type: \"array\",\n          value: n\n        }, {\n          name: \"contract\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: i,\n          optional: !0\n        }, {\n          name: \"tokenValue\",\n          type: \"integer\",\n          value: o,\n          gte: 0,\n          optional: !0\n        }, {\n          name: \"tokenId\",\n          type: \"integer\",\n          value: u,\n          gte: 0,\n          optional: !0\n        }], a)) {\n          var l = {\n            contract_address: nt(e),\n            owner_address: nt(i)\n          };\n\n          if (t && Re.isString(t)) {\n            if (t = t.replace(\"/s*/g\", \"\"), n.length) {\n              for (var h = new de(), f = [], v = [], p = 0; p < n.length; p++) {\n                var g = n[p],\n                    b = g.type,\n                    m = g.value;\n                if (!b || !Re.isString(b) || !b.length) return a(\"Invalid parameter type provided: \" + b);\n                \"address\" === b ? m = nt(m).replace(H, \"0x\") : \"address[\" === b.match(/^([^\\x5b]*)(\\x5b|$)/)[0] && (m = m.map(function (e) {\n                  return nt(e).replace(H, \"0x\");\n                })), f.push(b), v.push(m);\n              }\n\n              try {\n                f = f.map(function (e) {\n                  return /trcToken/.test(e) && (e = e.replace(/trcToken/, \"uint256\")), e;\n                }), n = h.encode(f, v).replace(/^(0x)/, \"\");\n              } catch (e) {\n                return a(e);\n              }\n            } else n = \"\";\n\n            r.shieldedParameter && Re.isString(r.shieldedParameter) && (n = r.shieldedParameter.replace(/^(0x)/, \"\")), r.rawParameter && Re.isString(r.rawParameter) && (n = r.rawParameter.replace(/^(0x)/, \"\")), l.function_selector = t, l.parameter = n;\n          }\n\n          r._isConstant || (l.call_value = parseInt(c), l.fee_limit = parseInt(d), Re.isNotNullOrUndefined(o) && (l.call_token_value = parseInt(o)), Re.isNotNullOrUndefined(u) && (l.token_id = parseInt(u))), r.permissionId && (l.Permission_id = r.permissionId), this.tronWeb[r.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(r.confirmed ? \"solidity\" : \"\", \"/trigger\").concat(r._isConstant ? \"constant\" : \"smart\", \"contract\"), l, \"post\").then(function (e) {\n            return at(e, a);\n          }).catch(function (e) {\n            return a(e);\n          });\n        }\n      }\n    }, {\n      key: \"clearABI\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (!r) return this.injectPromise(this.clearABI, e, t);\n        if (!this.tronWeb.isAddress(e)) return r(\"Invalid contract address provided\");\n        if (!this.tronWeb.isAddress(t)) return r(\"Invalid owner address provided\");\n        var n = {\n          contract_address: nt(e),\n          owner_address: nt(t)\n        };\n        this.tronWeb.trx.cache.contracts[e] && delete this.tronWeb.trx.cache.contracts[e], this.tronWeb.fullNode.request(\"wallet/clearabi\", n, \"post\").then(function (e) {\n          return at(e, r);\n        }).catch(function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"updateBrokerage\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (!r) return this.injectPromise(this.updateBrokerage, e, t);\n        if (!Re.isNotNullOrUndefined(e)) return r(\"Invalid brokerage provided\");\n        if (!Re.isInteger(e) || e < 0 || e > 100) return r(\"Brokerage must be an integer between 0 and 100\");\n        if (!this.tronWeb.isAddress(t)) return r(\"Invalid owner address provided\");\n        var n = {\n          brokerage: parseInt(e),\n          owner_address: nt(t)\n        };\n        this.tronWeb.fullNode.request(\"wallet/updateBrokerage\", n, \"post\").then(function (e) {\n          return at(e, r);\n        }).catch(function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"createToken\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Re.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.createToken, e, t);\n\n        var n = e.name,\n            i = void 0 !== n && n,\n            a = e.abbreviation,\n            s = void 0 !== a && a,\n            o = e.description,\n            u = void 0 !== o && o,\n            c = e.url,\n            d = void 0 !== c && c,\n            l = e.totalSupply,\n            h = void 0 === l ? 0 : l,\n            f = e.trxRatio,\n            v = void 0 === f ? 1 : f,\n            p = e.tokenRatio,\n            g = void 0 === p ? 1 : p,\n            b = e.saleStart,\n            m = void 0 === b ? Date.now() : b,\n            y = e.saleEnd,\n            k = void 0 !== y && y,\n            x = e.freeBandwidth,\n            w = void 0 === x ? 0 : x,\n            I = e.freeBandwidthLimit,\n            A = void 0 === I ? 0 : I,\n            P = e.frozenAmount,\n            W = void 0 === P ? 0 : P,\n            S = e.frozenDuration,\n            _ = void 0 === S ? 0 : S,\n            N = e.voteScore,\n            T = e.precision;\n\n        if (!this.validator.notValid([{\n          name: \"Supply amount\",\n          type: \"positive-integer\",\n          value: h\n        }, {\n          name: \"TRX ratio\",\n          type: \"positive-integer\",\n          value: v\n        }, {\n          name: \"Token ratio\",\n          type: \"positive-integer\",\n          value: g\n        }, {\n          name: \"token abbreviation\",\n          type: \"not-empty-string\",\n          value: s\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: i\n        }, {\n          name: \"token description\",\n          type: \"not-empty-string\",\n          value: u\n        }, {\n          name: \"token url\",\n          type: \"url\",\n          value: d\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"sale start timestamp\",\n          type: \"integer\",\n          value: m,\n          gte: Date.now()\n        }, {\n          name: \"sale end timestamp\",\n          type: \"integer\",\n          value: k,\n          gt: m\n        }, {\n          name: \"Free bandwidth amount\",\n          type: \"integer\",\n          value: w,\n          gte: 0\n        }, {\n          name: \"Free bandwidth limit\",\n          type: \"integer\",\n          value: A,\n          gte: 0\n        }, {\n          name: \"Frozen supply\",\n          type: \"integer\",\n          value: W,\n          gte: 0\n        }, {\n          name: \"Frozen duration\",\n          type: \"integer\",\n          value: _,\n          gte: 0\n        }], r)) {\n          if (Re.isNotNullOrUndefined(N) && (!Re.isInteger(N) || N <= 0)) return r(\"voteScore must be a positive integer greater than 0\");\n          if (Re.isNotNullOrUndefined(T) && (!Re.isInteger(T) || T < 0 || T > 6)) return r(\"precision must be a positive integer >= 0 and <= 6\");\n          var j = {\n            owner_address: nt(t),\n            name: it(i),\n            abbr: it(s),\n            description: it(u),\n            url: it(d),\n            total_supply: parseInt(h),\n            trx_num: parseInt(v),\n            num: parseInt(g),\n            start_time: parseInt(m),\n            end_time: parseInt(k),\n            free_asset_net_limit: parseInt(w),\n            public_free_asset_net_limit: parseInt(A),\n            frozen_supply: {\n              frozen_amount: parseInt(W),\n              frozen_days: parseInt(_)\n            }\n          };\n          !this.tronWeb.fullnodeSatisfies(\">=3.5.0\") || parseInt(W) > 0 || delete j.frozen_supply, T && !isNaN(parseInt(T)) && (j.precision = parseInt(T)), N && !isNaN(parseInt(N)) && (j.vote_score = parseInt(N)), e && e.permissionId && (j.Permission_id = e.permissionId), this.tronWeb.fullNode.request(\"wallet/createassetissue\", j, \"post\").then(function (e) {\n            return at(e, r);\n          }).catch(function (e) {\n            return r(e);\n          });\n        }\n      }\n    }, {\n      key: \"updateAccount\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Re.isFunction(r) && (n = r, r = {}), Re.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Re.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.updateAccount, e, t, r);\n\n        if (!this.validator.notValid([{\n          name: \"Name\",\n          type: \"not-empty-string\",\n          value: e\n        }, {\n          name: \"origin\",\n          type: \"address\",\n          value: t\n        }], n)) {\n          var i = {\n            account_name: it(e),\n            owner_address: nt(t)\n          };\n          r && r.permissionId && (i.Permission_id = r.permissionId), this.tronWeb.fullNode.request(\"wallet/updateaccount\", i, \"post\").then(function (e) {\n            return at(e, n);\n          }).catch(function (e) {\n            return n(e);\n          });\n        }\n      }\n    }, {\n      key: \"setAccountId\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Re.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.setAccountId, e, t);\n        e && Re.isString(e) && e.startsWith(\"0x\") && (e = e.slice(2)), this.validator.notValid([{\n          name: \"accountId\",\n          type: \"hex\",\n          value: e\n        }, {\n          name: \"accountId\",\n          type: \"string\",\n          lte: 32,\n          gte: 8,\n          value: e\n        }, {\n          name: \"origin\",\n          type: \"address\",\n          value: t\n        }], r) || this.tronWeb.fullNode.request(\"wallet/setaccountid\", {\n          account_id: e,\n          owner_address: nt(t)\n        }, \"post\").then(function (e) {\n          return at(e, r);\n        }).catch(function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"updateToken\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Re.isFunction(t) ? (r = t, t = this.tronWeb.defaultAddress.hex) : Re.isObject(t) && (e = t, t = this.tronWeb.defaultAddress.hex), !r) return this.injectPromise(this.updateToken, e, t);\n        var n = e,\n            i = n.description,\n            a = void 0 !== i && i,\n            s = n.url,\n            o = void 0 !== s && s,\n            u = n.freeBandwidth,\n            c = void 0 === u ? 0 : u,\n            d = n.freeBandwidthLimit,\n            l = void 0 === d ? 0 : d;\n\n        if (!this.validator.notValid([{\n          name: \"token description\",\n          type: \"not-empty-string\",\n          value: a\n        }, {\n          name: \"token url\",\n          type: \"url\",\n          value: o\n        }, {\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"Free bandwidth amount\",\n          type: \"positive-integer\",\n          value: c\n        }, {\n          name: \"Free bandwidth limit\",\n          type: \"positive-integer\",\n          value: l\n        }], r)) {\n          var h = {\n            owner_address: nt(t),\n            description: it(a),\n            url: it(o),\n            new_limit: parseInt(c),\n            new_public_limit: parseInt(l)\n          };\n          e && e.permissionId && (h.Permission_id = e.permissionId), this.tronWeb.fullNode.request(\"wallet/updateasset\", h, \"post\").then(function (e) {\n            return at(e, r);\n          }).catch(function (e) {\n            return r(e);\n          });\n        }\n      }\n    }, {\n      key: \"sendAsset\",\n      value: function () {\n        return this.sendToken.apply(this, arguments);\n      }\n    }, {\n      key: \"purchaseAsset\",\n      value: function () {\n        return this.purchaseToken.apply(this, arguments);\n      }\n    }, {\n      key: \"createAsset\",\n      value: function () {\n        return this.createToken.apply(this, arguments);\n      }\n    }, {\n      key: \"updateAsset\",\n      value: function () {\n        return this.updateToken.apply(this, arguments);\n      }\n    }, {\n      key: \"createProposal\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Re.isFunction(r) && (n = r, r = {}), Re.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Re.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.createProposal, e, t, r);\n\n        if (!this.validator.notValid([{\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }], n)) {\n          var i = \"Invalid proposal parameters provided\";\n          if (!e) return n(i);\n          Re.isArray(e) || (e = [e]);\n          var a,\n              s = tt(e);\n\n          try {\n            for (s.s(); !(a = s.n()).done;) {\n              var o = a.value;\n              if (!Re.isObject(o)) return n(i);\n            }\n          } catch (e) {\n            s.e(e);\n          } finally {\n            s.f();\n          }\n\n          var u = {\n            owner_address: nt(t),\n            parameters: e\n          };\n          r && r.permissionId && (u.Permission_id = r.permissionId), this.tronWeb.fullNode.request(\"wallet/proposalcreate\", u, \"post\").then(function (e) {\n            return at(e, n);\n          }).catch(function (e) {\n            return n(e);\n          });\n        }\n      }\n    }, {\n      key: \"deleteProposal\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 2 ? arguments[2] : void 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        if (Re.isFunction(r) && (n = r, r = {}), Re.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Re.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), !n) return this.injectPromise(this.deleteProposal, e, t, r);\n\n        if (!this.validator.notValid([{\n          name: \"issuer\",\n          type: \"address\",\n          value: t\n        }, {\n          name: \"proposalID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }], n)) {\n          var i = {\n            owner_address: nt(t),\n            proposal_id: parseInt(e)\n          };\n          r && r.permissionId && (i.Permission_id = r.permissionId), this.tronWeb.fullNode.request(\"wallet/proposaldelete\", i, \"post\").then(function (e) {\n            return at(e, n);\n          }).catch(function (e) {\n            return n(e);\n          });\n        }\n      }\n    }, {\n      key: \"voteProposal\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Re.isFunction(n) && (i = n, n = {}), Re.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Re.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.voteProposal, e, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"voter\",\n          type: \"address\",\n          value: r\n        }, {\n          name: \"proposalID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }, {\n          name: \"has approval\",\n          type: \"boolean\",\n          value: t\n        }], i)) {\n          var a = {\n            owner_address: nt(r),\n            proposal_id: parseInt(e),\n            is_add_approval: t\n          };\n          n && n.permissionId && (a.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/proposalapprove\", a, \"post\").then(function (e) {\n            return at(e, i);\n          }).catch(function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"createTRXExchange\",\n      value: function (e, t, r) {\n        var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            a = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Re.isFunction(i) && (a = i, i = {}), Re.isFunction(n) ? (a = n, n = this.tronWeb.defaultAddress.hex) : Re.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !a) return this.injectPromise(this.createTRXExchange, e, t, r, n, i);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: e\n        }, {\n          name: \"token balance\",\n          type: \"positive-integer\",\n          value: t\n        }, {\n          name: \"trx balance\",\n          type: \"positive-integer\",\n          value: r\n        }], a)) {\n          var s = {\n            owner_address: nt(n),\n            first_token_id: it(e),\n            first_token_balance: t,\n            second_token_id: \"5f\",\n            second_token_balance: r\n          };\n          i && i.permissionId && (s.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangecreate\", s, \"post\").then(function (e) {\n            a(null, e);\n          }).catch(function (e) {\n            return a(e);\n          });\n        }\n      }\n    }, {\n      key: \"createTokenExchange\",\n      value: function (e, t, r, n) {\n        var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,\n            a = arguments.length > 5 ? arguments[5] : void 0,\n            s = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];\n        if (Re.isFunction(a) && (s = a, a = {}), Re.isFunction(i) ? (s = i, i = this.tronWeb.defaultAddress.hex) : Re.isObject(i) && (a = i, i = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.createTokenExchange, e, t, r, n, i, a);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: i\n        }, {\n          name: \"first token name\",\n          type: \"not-empty-string\",\n          value: e\n        }, {\n          name: \"second token name\",\n          type: \"not-empty-string\",\n          value: r\n        }, {\n          name: \"first token balance\",\n          type: \"positive-integer\",\n          value: t\n        }, {\n          name: \"second token balance\",\n          type: \"positive-integer\",\n          value: n\n        }], s)) {\n          var o = {\n            owner_address: nt(i),\n            first_token_id: it(e),\n            first_token_balance: t,\n            second_token_id: it(r),\n            second_token_balance: n\n          };\n          a && a.permissionId && (o.Permission_id = a.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangecreate\", o, \"post\").then(function (e) {\n            s(null, e);\n          }).catch(function (e) {\n            return s(e);\n          });\n        }\n      }\n    }, {\n      key: \"injectExchangeTokens\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            a = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Re.isFunction(i) && (a = i, i = {}), Re.isFunction(n) ? (a = n, n = this.tronWeb.defaultAddress.hex) : Re.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !a) return this.injectPromise(this.injectExchangeTokens, e, t, r, n, i);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: t\n        }, {\n          name: \"token amount\",\n          type: \"integer\",\n          value: r,\n          gte: 1\n        }, {\n          name: \"exchangeID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }], a)) {\n          var s = {\n            owner_address: nt(n),\n            exchange_id: parseInt(e),\n            token_id: it(t),\n            quant: parseInt(r)\n          };\n          i && i.permissionId && (s.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangeinject\", s, \"post\").then(function (e) {\n            return at(e, a);\n          }).catch(function (e) {\n            return a(e);\n          });\n        }\n      }\n    }, {\n      key: \"withdrawExchangeTokens\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.tronWeb.defaultAddress.hex,\n            i = arguments.length > 4 ? arguments[4] : void 0,\n            a = arguments.length > 5 && void 0 !== arguments[5] && arguments[5];\n        if (Re.isFunction(i) && (a = i, i = {}), Re.isFunction(n) ? (a = n, n = this.tronWeb.defaultAddress.hex) : Re.isObject(n) && (i = n, n = this.tronWeb.defaultAddress.hex), !a) return this.injectPromise(this.withdrawExchangeTokens, e, t, r, n, i);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: n\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: t\n        }, {\n          name: \"token amount\",\n          type: \"integer\",\n          value: r,\n          gte: 1\n        }, {\n          name: \"exchangeID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }], a)) {\n          var s = {\n            owner_address: nt(n),\n            exchange_id: parseInt(e),\n            token_id: it(t),\n            quant: parseInt(r)\n          };\n          i && i.permissionId && (s.Permission_id = i.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangewithdraw\", s, \"post\").then(function (e) {\n            return at(e, a);\n          }).catch(function (e) {\n            return a(e);\n          });\n        }\n      }\n    }, {\n      key: \"tradeExchangeTokens\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : this.tronWeb.defaultAddress.hex,\n            a = arguments.length > 5 ? arguments[5] : void 0,\n            s = arguments.length > 6 && void 0 !== arguments[6] && arguments[6];\n        if (Re.isFunction(a) && (s = a, a = {}), Re.isFunction(i) ? (s = i, i = this.tronWeb.defaultAddress.hex) : Re.isObject(i) && (a = i, i = this.tronWeb.defaultAddress.hex), !s) return this.injectPromise(this.tradeExchangeTokens, e, t, r, n, i, a);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: i\n        }, {\n          name: \"token name\",\n          type: \"not-empty-string\",\n          value: t\n        }, {\n          name: \"tokenAmountSold\",\n          type: \"integer\",\n          value: r,\n          gte: 1\n        }, {\n          name: \"tokenAmountExpected\",\n          type: \"integer\",\n          value: n,\n          gte: 1\n        }, {\n          name: \"exchangeID\",\n          type: \"integer\",\n          value: e,\n          gte: 0\n        }], s)) {\n          var o = {\n            owner_address: nt(i),\n            exchange_id: parseInt(e),\n            token_id: this.tronWeb.fromAscii(t),\n            quant: parseInt(r),\n            expected: parseInt(n)\n          };\n          a && a.permissionId && (o.Permission_id = a.permissionId), this.tronWeb.fullNode.request(\"wallet/exchangetransaction\", o, \"post\").then(function (e) {\n            return at(e, s);\n          }).catch(function (e) {\n            return s(e);\n          });\n        }\n      }\n    }, {\n      key: \"updateSetting\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Re.isFunction(n) && (i = n, n = {}), Re.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Re.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.updateSetting, e, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: r\n        }, {\n          name: \"contract\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"userFeePercentage\",\n          type: \"integer\",\n          value: t,\n          gte: 0,\n          lte: 100\n        }], i)) {\n          var a = {\n            owner_address: nt(r),\n            contract_address: nt(e),\n            consume_user_resource_percent: t\n          };\n          n && n.permissionId && (a.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/updatesetting\", a, \"post\").then(function (e) {\n            return at(e, i);\n          }).catch(function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"updateEnergyLimit\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.tronWeb.defaultAddress.hex,\n            n = arguments.length > 3 ? arguments[3] : void 0,\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Re.isFunction(n) && (i = n, n = {}), Re.isFunction(r) ? (i = r, r = this.tronWeb.defaultAddress.hex) : Re.isObject(r) && (n = r, r = this.tronWeb.defaultAddress.hex), !i) return this.injectPromise(this.updateEnergyLimit, e, t, r, n);\n\n        if (!this.validator.notValid([{\n          name: \"owner\",\n          type: \"address\",\n          value: r\n        }, {\n          name: \"contract\",\n          type: \"address\",\n          value: e\n        }, {\n          name: \"originEnergyLimit\",\n          type: \"integer\",\n          value: t,\n          gte: 0,\n          lte: 1e7\n        }], i)) {\n          var a = {\n            owner_address: nt(r),\n            contract_address: nt(e),\n            origin_energy_limit: t\n          };\n          n && n.permissionId && (a.Permission_id = n.permissionId), this.tronWeb.fullNode.request(\"wallet/updateenergylimit\", a, \"post\").then(function (e) {\n            return at(e, i);\n          }).catch(function (e) {\n            return i(e);\n          });\n        }\n      }\n    }, {\n      key: \"checkPermissions\",\n      value: function (e, t) {\n        if (e) {\n          if (e.type !== t || !e.permission_name || !Re.isString(e.permission_name) || !Re.isInteger(e.threshold) || e.threshold < 1 || !e.keys) return !1;\n          var r,\n              n = tt(e.keys);\n\n          try {\n            for (n.s(); !(r = n.n()).done;) {\n              var i = r.value;\n              if (!this.tronWeb.isAddress(i.address) || !Re.isInteger(i.weight) || i.weight > e.threshold || i.weight < 1 || 2 === t && !e.operations) return !1;\n            }\n          } catch (e) {\n            n.e(e);\n          } finally {\n            n.f();\n          }\n        }\n\n        return !0;\n      }\n    }, {\n      key: \"updateAccountPermissions\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n            i = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n        if (Re.isFunction(n) && (i = n, n = !1), Re.isFunction(r) && (i = r, r = n = !1), Re.isFunction(t) && (i = t, t = r = n = !1), !i) return this.injectPromise(this.updateAccountPermissions, e, t, r, n);\n        if (!this.tronWeb.isAddress(e)) return i(\"Invalid ownerAddress provided\");\n        if (!this.checkPermissions(t, 0)) return i(\"Invalid ownerPermissions provided\");\n        if (!this.checkPermissions(r, 1)) return i(\"Invalid witnessPermissions provided\");\n        Array.isArray(n) || (n = [n]);\n        var a,\n            s = tt(n);\n\n        try {\n          for (s.s(); !(a = s.n()).done;) {\n            var o = a.value;\n            if (!this.checkPermissions(o, 2)) return i(\"Invalid activesPermissions provided\");\n          }\n        } catch (e) {\n          s.e(e);\n        } finally {\n          s.f();\n        }\n\n        var u = {\n          owner_address: e\n        };\n        t && (u.owner = t), r && (u.witness = r), n && (u.actives = 1 === n.length ? n[0] : n), this.tronWeb.fullNode.request(\"wallet/accountpermissionupdate\", u, \"post\").then(function (e) {\n          return at(e, i);\n        }).catch(function (e) {\n          return i(e);\n        });\n      }\n    }, {\n      key: \"newTxID\",\n      value: (i = f()(l.a.mark(function e(t, r) {\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (r) {\n                e.next = 2;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.newTxID, t));\n\n            case 2:\n              this.tronWeb.fullNode.request(\"wallet/getsignweight\", t, \"post\").then(function (e) {\n                e = e.transaction.transaction, \"boolean\" == typeof t.visible && (e.visible = t.visible), r(null, e);\n              }).catch(function (e) {\n                return r(\"Error generating a new transaction id.\");\n              });\n\n            case 3:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t) {\n        return i.apply(this, arguments);\n      })\n    }, {\n      key: \"alterTransaction\",\n      value: (n = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2]) {\n                e.next = 4;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.alterTransaction, t, r));\n\n            case 4:\n              if (!t.signature) {\n                e.next = 6;\n                break;\n              }\n\n              return e.abrupt(\"return\", n(\"You can not extend the expiration of a signed transaction.\"));\n\n            case 6:\n              if (!r.data) {\n                e.next = 12;\n                break;\n              }\n\n              if (\"hex\" !== r.dataFormat && (r.data = this.tronWeb.toHex(r.data)), r.data = r.data.replace(/^0x/, \"\"), 0 !== r.data.length) {\n                e.next = 11;\n                break;\n              }\n\n              return e.abrupt(\"return\", n(\"Invalid data provided\"));\n\n            case 11:\n              t.raw_data.data = r.data;\n\n            case 12:\n              if (!r.extension) {\n                e.next = 17;\n                break;\n              }\n\n              if (r.extension = parseInt(1e3 * r.extension), !(isNaN(r.extension) || t.raw_data.expiration + r.extension <= Date.now() + 3e3)) {\n                e.next = 16;\n                break;\n              }\n\n              return e.abrupt(\"return\", n(\"Invalid extension provided\"));\n\n            case 16:\n              t.raw_data.expiration += r.extension;\n\n            case 17:\n              this.newTxID(t, n);\n\n            case 18:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e) {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"extendExpiration\",\n      value: (r = f()(l.a.mark(function e(t, r) {\n        var n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (n = i.length > 2 && void 0 !== i[2] && i[2]) {\n                e.next = 3;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.extendExpiration, t, r));\n\n            case 3:\n              this.alterTransaction(t, {\n                extension: r\n              }, n);\n\n            case 4:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t) {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"addUpdateData\",\n      value: (t = f()(l.a.mark(function e(t, r) {\n        var n,\n            i,\n            a = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (n = a.length > 2 && void 0 !== a[2] ? a[2] : \"utf8\", i = a.length > 3 && void 0 !== a[3] && a[3], Re.isFunction(n) && (i = n, n = \"utf8\"), i) {\n                e.next = 5;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.addUpdateData, t, r, n));\n\n            case 5:\n              this.alterTransaction(t, {\n                data: r,\n                dataFormat: n\n              }, i);\n\n            case 6:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, r) {\n        return t.apply(this, arguments);\n      })\n    }]), e;\n  }();\n\n  function ot(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function ut(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? ot(Object(r), !0).forEach(function (t) {\n        N()(e, t, r[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : ot(Object(r)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n      });\n    }\n\n    return e;\n  }\n\n  function ct(e) {\n    return Pt.address.toHex(e);\n  }\n\n  var dt = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (b()(this, e), !t || !t instanceof Pt) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.injectPromise = Je()(this), this.cache = {\n        contracts: {}\n      }, this.validator = new et(t);\n    }\n\n    var t, r, n, i, a, s, o, u, c, d, h, v, p, g, m, k, x;\n    return y()(e, [{\n      key: \"_parseToken\",\n      value: function (e) {\n        return ut(ut({}, e), {}, {\n          name: this.tronWeb.toUtf8(e.name),\n          abbr: e.abbr && this.tronWeb.toUtf8(e.abbr),\n          description: e.description && this.tronWeb.toUtf8(e.description),\n          url: e.url && this.tronWeb.toUtf8(e.url)\n        });\n      }\n    }, {\n      key: \"getCurrentBlock\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getCurrentBlock);\n        this.tronWeb.fullNode.request(\"wallet/getnowblock\").then(function (t) {\n          e(null, t);\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getConfirmedCurrentBlock\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getConfirmedCurrentBlock);\n        this.tronWeb.solidityNode.request(\"walletsolidity/getnowblock\").then(function (t) {\n          e(null, t);\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getBlock\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Re.isFunction(e) && (t = e, e = this.tronWeb.defaultBlock), t ? !1 === e ? t(\"No block identifier provided\") : (\"earliest\" == e && (e = 0), \"latest\" == e ? this.getCurrentBlock(t) : isNaN(e) && Re.isHex(e) ? this.getBlockByHash(e, t) : void this.getBlockByNumber(e, t)) : this.injectPromise(this.getBlock, e);\n      }\n    }, {\n      key: \"getBlockByHash\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getBlockByHash, e);\n        this.tronWeb.fullNode.request(\"wallet/getblockbyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Block not found\");\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getBlockByNumber\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? !Re.isInteger(e) || e < 0 ? t(\"Invalid block number provided\") : void this.tronWeb.fullNode.request(\"wallet/getblockbynum\", {\n          num: parseInt(e)\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Block not found\");\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : this.injectPromise(this.getBlockByNumber, e);\n      }\n    }, {\n      key: \"getBlockTransactionCount\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (Re.isFunction(e) && (t = e, e = this.tronWeb.defaultBlock), !t) return this.injectPromise(this.getBlockTransactionCount, e);\n        this.getBlock(e).then(function (e) {\n          var r = e.transactions;\n          t(null, (void 0 === r ? [] : r).length);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getTransactionFromBlock\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultBlock,\n            t = arguments.length > 1 ? arguments[1] : void 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Re.isFunction(t) && (r = t, t = 0), Re.isFunction(e) && (r = e, e = this.tronWeb.defaultBlock), !r) return this.injectPromise(this.getTransactionFromBlock, e, t);\n        this.getBlock(e).then(function (e) {\n          var n = e.transactions,\n              i = void 0 !== n && n;\n          i ? \"number\" == typeof t ? t >= 0 && t < i.length ? r(null, i[t]) : r(\"Invalid transaction index provided\") : r(null, i) : r(\"Transaction not found in block\");\n        }).catch(function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"getTransaction\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getTransaction, e);\n        this.tronWeb.fullNode.request(\"wallet/gettransactionbyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Transaction not found\");\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getConfirmedTransaction\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getConfirmedTransaction, e);\n        this.tronWeb.solidityNode.request(\"walletsolidity/gettransactionbyid\", {\n          value: e\n        }, \"post\").then(function (e) {\n          if (!Object.keys(e).length) return t(\"Transaction not found\");\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getUnconfirmedTransactionInfo\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return this._getTransactionInfoById(e, {\n          confirmed: !1\n        }, t);\n      }\n    }, {\n      key: \"getTransactionInfo\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return this._getTransactionInfoById(e, {\n          confirmed: !0\n        }, t);\n      }\n    }, {\n      key: \"_getTransactionInfoById\",\n      value: function (e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (!r) return this.injectPromise(this._getTransactionInfoById, e, t);\n        this.tronWeb[t.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(t.confirmed ? \"solidity\" : \"\", \"/gettransactioninfobyid\"), {\n          value: e\n        }, \"post\").then(function (e) {\n          r(null, e);\n        }).catch(function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"getTransactionsToAddress\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        return Re.isFunction(r) && (n = r, r = 0), Re.isFunction(t) && (n = t, t = 30), n ? (e = this.tronWeb.address.toHex(e), this.getTransactionsRelated(e, \"to\", t, r, n)) : this.injectPromise(this.getTransactionsToAddress, e, t, r);\n      }\n    }, {\n      key: \"getTransactionsFromAddress\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,\n            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n            n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n        return Re.isFunction(r) && (n = r, r = 0), Re.isFunction(t) && (n = t, t = 30), n ? (e = this.tronWeb.address.toHex(e), this.getTransactionsRelated(e, \"from\", t, r, n)) : this.injectPromise(this.getTransactionsFromAddress, e, t, r);\n      }\n    }, {\n      key: \"getTransactionsRelated\",\n      value: (x = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = d.length > 0 && void 0 !== d[0] ? d[0] : this.tronWeb.defaultAddress.hex, r = d.length > 1 && void 0 !== d[1] ? d[1] : \"all\", n = d.length > 2 && void 0 !== d[2] ? d[2] : 30, i = d.length > 3 && void 0 !== d[3] ? d[3] : 0, a = d.length > 4 && void 0 !== d[4] && d[4], Re.isFunction(i) && (a = i, i = 0), Re.isFunction(n) && (a = n, n = 30), Re.isFunction(r) && (a = r, r = \"all\"), Re.isFunction(t) && (a = t, t = this.tronWeb.defaultAddress.hex), a) {\n                e.next = 11;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.getTransactionsRelated, t, r, n, i));\n\n            case 11:\n              if ([\"to\", \"from\", \"all\"].includes(r)) {\n                e.next = 13;\n                break;\n              }\n\n              return e.abrupt(\"return\", a('Invalid direction provided: Expected \"to\", \"from\" or \"all\"'));\n\n            case 13:\n              if (\"all\" != r) {\n                e.next = 27;\n                break;\n              }\n\n              return e.prev = 14, e.next = 17, Promise.all([this.getTransactionsRelated(t, \"from\", n, i), this.getTransactionsRelated(t, \"to\", n, i)]);\n\n            case 17:\n              return s = e.sent, o = $e()(s, 2), u = o[0], c = o[1], e.abrupt(\"return\", a(null, [].concat(R()(u.map(function (e) {\n                return e.direction = \"from\", e;\n              })), R()(c.map(function (e) {\n                return e.direction = \"to\", e;\n              }))).sort(function (e, t) {\n                return t.raw_data.timestamp - e.raw_data.timestamp;\n              })));\n\n            case 24:\n              return e.prev = 24, e.t0 = e.catch(14), e.abrupt(\"return\", a(e.t0));\n\n            case 27:\n              if (this.tronWeb.isAddress(t)) {\n                e.next = 29;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Invalid address provided\"));\n\n            case 29:\n              if (!(!Re.isInteger(n) || n < 0 || i && n < 1)) {\n                e.next = 31;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Invalid limit provided\"));\n\n            case 31:\n              if (Re.isInteger(i) && !(i < 0)) {\n                e.next = 33;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Invalid offset provided\"));\n\n            case 33:\n              t = this.tronWeb.address.toHex(t), this.tronWeb.solidityNode.request(\"walletextension/gettransactions\".concat(r, \"this\"), {\n                account: {\n                  address: t\n                },\n                offset: i,\n                limit: n\n              }, \"post\").then(function (e) {\n                var t = e.transaction;\n                a(null, t);\n              }).catch(function (e) {\n                return a(e);\n              });\n\n            case 35:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[14, 24]]);\n      })), function () {\n        return x.apply(this, arguments);\n      })\n    }, {\n      key: \"getAccount\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Re.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), t ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.solidityNode.request(\"walletsolidity/getaccount\", {\n          address: e\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        })) : t(\"Invalid address provided\") : this.injectPromise(this.getAccount, e);\n      }\n    }, {\n      key: \"getAccountById\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getAccountById, e);\n        this.getAccountInfoById(e, {\n          confirmed: !0\n        }, t);\n      }\n    }, {\n      key: \"getAccountInfoById\",\n      value: function (e, t, r) {\n        this.validator.notValid([{\n          name: \"accountId\",\n          type: \"hex\",\n          value: e\n        }, {\n          name: \"accountId\",\n          type: \"string\",\n          lte: 32,\n          gte: 8,\n          value: e\n        }], r) || (e.startsWith(\"0x\") && (e = e.slice(2)), this.tronWeb[t.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(t.confirmed ? \"solidity\" : \"\", \"/getaccountbyid\"), {\n          account_id: e\n        }, \"post\").then(function (e) {\n          r(null, e);\n        }).catch(function (e) {\n          return r(e);\n        }));\n      }\n    }, {\n      key: \"getBalance\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (Re.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), !t) return this.injectPromise(this.getBalance, e);\n        this.getAccount(e).then(function (e) {\n          var r = e.balance;\n          t(null, void 0 === r ? 0 : r);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getUnconfirmedAccount\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Re.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), t ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.fullNode.request(\"wallet/getaccount\", {\n          address: e\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        })) : t(\"Invalid address provided\") : this.injectPromise(this.getUnconfirmedAccount, e);\n      }\n    }, {\n      key: \"getUnconfirmedAccountById\",\n      value: function (e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (!t) return this.injectPromise(this.getUnconfirmedAccountById, e);\n        this.getAccountInfoById(e, {\n          confirmed: !1\n        }, t);\n      }\n    }, {\n      key: \"getUnconfirmedBalance\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (Re.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), !t) return this.injectPromise(this.getUnconfirmedBalance, e);\n        this.getUnconfirmedAccount(e).then(function (e) {\n          var r = e.balance;\n          t(null, void 0 === r ? 0 : r);\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getBandwidth\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Re.isFunction(e) && (t = e, e = this.tronWeb.defaultAddress.hex), t ? this.tronWeb.isAddress(e) ? (e = this.tronWeb.address.toHex(e), void this.tronWeb.fullNode.request(\"wallet/getaccountnet\", {\n          address: e\n        }, \"post\").then(function (e) {\n          var r = e.freeNetUsed,\n              n = void 0 === r ? 0 : r,\n              i = e.freeNetLimit,\n              a = void 0 === i ? 0 : i,\n              s = e.NetUsed,\n              o = void 0 === s ? 0 : s,\n              u = e.NetLimit;\n          t(null, a - n + ((void 0 === u ? 0 : u) - o));\n        }).catch(function (e) {\n          return t(e);\n        })) : t(\"Invalid address provided\") : this.injectPromise(this.getBandwidth, e);\n      }\n    }, {\n      key: \"getTokensIssuedByAddress\",\n      value: function () {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return Re.isFunction(t) && (r = t, t = this.tronWeb.defaultAddress.hex), r ? this.tronWeb.isAddress(t) ? (t = this.tronWeb.address.toHex(t), void this.tronWeb.fullNode.request(\"wallet/getassetissuebyaccount\", {\n          address: t\n        }, \"post\").then(function (t) {\n          var n = t.assetIssue,\n              i = void 0 !== n && n;\n          if (!i) return r(null, {});\n          var a = i.map(function (t) {\n            return e._parseToken(t);\n          }).reduce(function (e, t) {\n            return e[t.name] = t, e;\n          }, {});\n          r(null, a);\n        }).catch(function (e) {\n          return r(e);\n        })) : r(\"Invalid address provided\") : this.injectPromise(this.getTokensIssuedByAddress, t);\n      }\n    }, {\n      key: \"getTokenFromID\",\n      value: function () {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return r ? (Re.isInteger(t) && (t = t.toString()), Re.isString(t) && t.length ? void this.tronWeb.fullNode.request(\"wallet/getassetissuebyname\", {\n          value: this.tronWeb.fromUtf8(t)\n        }, \"post\").then(function (t) {\n          if (!t.name) return r(\"Token does not exist\");\n          r(null, e._parseToken(t));\n        }).catch(function (e) {\n          return r(e);\n        }) : r(\"Invalid token ID provided\")) : this.injectPromise(this.getTokenFromID, t);\n      }\n    }, {\n      key: \"listNodes\",\n      value: function () {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!t) return this.injectPromise(this.listNodes);\n        this.tronWeb.fullNode.request(\"wallet/listnodes\").then(function (r) {\n          var n = r.nodes;\n          t(null, (void 0 === n ? [] : n).map(function (t) {\n            var r = t.address,\n                n = r.host,\n                i = r.port;\n            return \"\".concat(e.tronWeb.toUtf8(n), \":\").concat(i);\n          }));\n        }).catch(function (e) {\n          return t(e);\n        });\n      }\n    }, {\n      key: \"getBlockRange\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 30,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return Re.isFunction(t) && (r = t, t = 30), Re.isFunction(e) && (r = e, e = 0), r ? !Re.isInteger(e) || e < 0 ? r(\"Invalid start of range provided\") : !Re.isInteger(t) || t <= e ? r(\"Invalid end of range provided\") : void this.tronWeb.fullNode.request(\"wallet/getblockbylimitnext\", {\n          startNum: parseInt(e),\n          endNum: parseInt(t) + 1\n        }, \"post\").then(function (e) {\n          var t = e.block;\n          r(null, void 0 === t ? [] : t);\n        }).catch(function (e) {\n          return r(e);\n        }) : this.injectPromise(this.getBlockRange, e, t);\n      }\n    }, {\n      key: \"listSuperRepresentatives\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.listSuperRepresentatives);\n        this.tronWeb.fullNode.request(\"wallet/listwitnesses\").then(function (t) {\n          var r = t.witnesses;\n          e(null, void 0 === r ? [] : r);\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"listTokens\",\n      value: function () {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return Re.isFunction(r) && (n = r, r = 0), Re.isFunction(t) && (n = t, t = 0), n ? !Re.isInteger(t) || t < 0 || r && t < 1 ? n(\"Invalid limit provided\") : !Re.isInteger(r) || r < 0 ? n(\"Invalid offset provided\") : t ? void this.tronWeb.fullNode.request(\"wallet/getpaginatedassetissuelist\", {\n          offset: parseInt(r),\n          limit: parseInt(t)\n        }, \"post\").then(function (t) {\n          var r = t.assetIssue;\n          n(null, (void 0 === r ? [] : r).map(function (t) {\n            return e._parseToken(t);\n          }));\n        }).catch(function (e) {\n          return n(e);\n        }) : this.tronWeb.fullNode.request(\"wallet/getassetissuelist\").then(function (t) {\n          var r = t.assetIssue;\n          n(null, (void 0 === r ? [] : r).map(function (t) {\n            return e._parseToken(t);\n          }));\n        }).catch(function (e) {\n          return n(e);\n        }) : this.injectPromise(this.listTokens, t, r);\n      }\n    }, {\n      key: \"timeUntilNextVoteCycle\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.timeUntilNextVoteCycle);\n        this.tronWeb.fullNode.request(\"wallet/getnextmaintenancetime\").then(function (t) {\n          var r = t.num,\n              n = void 0 === r ? -1 : r;\n          if (-1 == n) return e(\"Failed to get time until next vote cycle\");\n          e(null, Math.floor(n / 1e3));\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getContract\",\n      value: function (e) {\n        var t = this,\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return r ? this.tronWeb.isAddress(e) ? void (this.cache.contracts[e] ? r(null, this.cache.contracts[e]) : (e = this.tronWeb.address.toHex(e), this.tronWeb.fullNode.request(\"wallet/getcontract\", {\n          value: e\n        }).then(function (n) {\n          if (n.Error) return r(\"Contract does not exist\");\n          t.cache.contracts[e] = n, r(null, n);\n        }).catch(function (e) {\n          return r(e);\n        }))) : r(\"Invalid contract address provided\") : this.injectPromise(this.getContract, e);\n      }\n    }, {\n      key: \"verifyMessage\",\n      value: (k = f()(l.a.mark(function t() {\n        var r,\n            n,\n            i,\n            a,\n            s,\n            o = arguments;\n        return l.a.wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              if (r = o.length > 0 && void 0 !== o[0] && o[0], n = o.length > 1 && void 0 !== o[1] && o[1], i = o.length > 2 && void 0 !== o[2] ? o[2] : this.tronWeb.defaultAddress.base58, a = !(o.length > 3 && void 0 !== o[3]) || o[3], s = o.length > 4 && void 0 !== o[4] && o[4], Re.isFunction(i) && (s = i, i = this.tronWeb.defaultAddress.base58, a = !0), Re.isFunction(a) && (s = a, a = !0), s) {\n                t.next = 9;\n                break;\n              }\n\n              return t.abrupt(\"return\", this.injectPromise(this.verifyMessage, r, n, i, a));\n\n            case 9:\n              if (Re.isHex(r)) {\n                t.next = 11;\n                break;\n              }\n\n              return t.abrupt(\"return\", s(\"Expected hex message input\"));\n\n            case 11:\n              if (!e.verifySignature(r, i, n, a)) {\n                t.next = 13;\n                break;\n              }\n\n              return t.abrupt(\"return\", s(null, !0));\n\n            case 13:\n              s(\"Signature does not match\");\n\n            case 14:\n            case \"end\":\n              return t.stop();\n          }\n        }, t, this);\n      })), function () {\n        return k.apply(this, arguments);\n      })\n    }, {\n      key: \"sign\",\n      value: (m = f()(l.a.mark(function t() {\n        var r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (t) {\n          for (;;) switch (t.prev = t.next) {\n            case 0:\n              if (r = u.length > 0 && void 0 !== u[0] && u[0], n = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, i = !(u.length > 2 && void 0 !== u[2]) || u[2], a = u.length > 3 && void 0 !== u[3] && u[3], s = u.length > 4 && void 0 !== u[4] && u[4], Re.isFunction(a) && (s = a, a = !1), Re.isFunction(i) && (s = i, i = !0, a = !1), Re.isFunction(n) && (s = n, n = this.tronWeb.defaultPrivateKey, i = !0, a = !1), s) {\n                t.next = 10;\n                break;\n              }\n\n              return t.abrupt(\"return\", this.injectPromise(this.sign, r, n, i, a));\n\n            case 10:\n              if (!Re.isString(r)) {\n                t.next = 21;\n                break;\n              }\n\n              if (Re.isHex(r)) {\n                t.next = 13;\n                break;\n              }\n\n              return t.abrupt(\"return\", s(\"Expected hex message input\"));\n\n            case 13:\n              return t.prev = 13, o = e.signString(r, n, i), t.abrupt(\"return\", s(null, o));\n\n            case 18:\n              t.prev = 18, t.t0 = t.catch(13), s(t.t0);\n\n            case 21:\n              if (Re.isObject(r)) {\n                t.next = 23;\n                break;\n              }\n\n              return t.abrupt(\"return\", s(\"Invalid transaction provided\"));\n\n            case 23:\n              if (a || !r.signature) {\n                t.next = 25;\n                break;\n              }\n\n              return t.abrupt(\"return\", s(\"Transaction is already signed\"));\n\n            case 25:\n              if (t.prev = 25, a) {\n                t.next = 30;\n                break;\n              }\n\n              if (this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(n)).toLowerCase() === this.tronWeb.address.toHex(r.raw_data.contract[0].parameter.value.owner_address)) {\n                t.next = 30;\n                break;\n              }\n\n              return t.abrupt(\"return\", s(\"Private key does not match address in transaction\"));\n\n            case 30:\n              return t.abrupt(\"return\", s(null, Re.crypto.signTransaction(n, r)));\n\n            case 33:\n              t.prev = 33, t.t1 = t.catch(25), s(t.t1);\n\n            case 36:\n            case \"end\":\n              return t.stop();\n          }\n        }, t, this, [[13, 18], [25, 33]]);\n      })), function () {\n        return m.apply(this, arguments);\n      })\n    }, {\n      key: \"multiSign\",\n      value: (g = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], i = u.length > 3 && void 0 !== u[3] && u[3], Re.isFunction(n) && (i = n, n = 0), Re.isFunction(r) && (i = r, r = this.tronWeb.defaultPrivateKey, n = 0), i) {\n                e.next = 8;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.multiSign, t, r, n));\n\n            case 8:\n              if (Re.isObject(t) && t.raw_data && t.raw_data.contract) {\n                e.next = 10;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(\"Invalid transaction provided\"));\n\n            case 10:\n              if (t.raw_data.contract[0].Permission_id || !(n > 0)) {\n                e.next = 30;\n                break;\n              }\n\n              return t.raw_data.contract[0].Permission_id = n, a = this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(r)).toLowerCase(), e.next = 15, this.getSignWeight(t, n);\n\n            case 15:\n              if (\"PERMISSION_ERROR\" !== (s = e.sent).result.code) {\n                e.next = 18;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(s.result.message));\n\n            case 18:\n              if (o = !1, s.permission.keys.map(function (e) {\n                e.address === a && (o = !0);\n              }), o) {\n                e.next = 22;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(r + \" has no permission to sign\"));\n\n            case 22:\n              if (!s.approved_list || -1 == s.approved_list.indexOf(a)) {\n                e.next = 24;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(r + \" already sign transaction\"));\n\n            case 24:\n              if (!s.transaction || !s.transaction.transaction) {\n                e.next = 29;\n                break;\n              }\n\n              t = s.transaction.transaction, n > 0 && (t.raw_data.contract[0].Permission_id = n), e.next = 30;\n              break;\n\n            case 29:\n              return e.abrupt(\"return\", i(\"Invalid transaction provided\"));\n\n            case 30:\n              return e.prev = 30, e.abrupt(\"return\", i(null, Re.crypto.signTransaction(r, t)));\n\n            case 34:\n              e.prev = 34, e.t0 = e.catch(30), i(e.t0);\n\n            case 37:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[30, 34]]);\n      })), function () {\n        return g.apply(this, arguments);\n      })\n    }, {\n      key: \"getApprovedList\",\n      value: (p = f()(l.a.mark(function e(t) {\n        var r,\n            n = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (r = n.length > 1 && void 0 !== n[1] && n[1]) {\n                e.next = 3;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.getApprovedList, t));\n\n            case 3:\n              if (Re.isObject(t)) {\n                e.next = 5;\n                break;\n              }\n\n              return e.abrupt(\"return\", r(\"Invalid transaction provided\"));\n\n            case 5:\n              this.tronWeb.fullNode.request(\"wallet/getapprovedlist\", t, \"post\").then(function (e) {\n                r(null, e);\n              }).catch(function (e) {\n                return r(e);\n              });\n\n            case 6:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e) {\n        return p.apply(this, arguments);\n      })\n    }, {\n      key: \"getSignWeight\",\n      value: (v = f()(l.a.mark(function e(t, r) {\n        var n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (n = i.length > 2 && void 0 !== i[2] && i[2], Re.isFunction(r) && (n = r, r = void 0), n) {\n                e.next = 4;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.getSignWeight, t, r));\n\n            case 4:\n              if (Re.isObject(t) && t.raw_data && t.raw_data.contract) {\n                e.next = 6;\n                break;\n              }\n\n              return e.abrupt(\"return\", n(\"Invalid transaction provided\"));\n\n            case 6:\n              if (Re.isInteger(r) ? t.raw_data.contract[0].Permission_id = parseInt(r) : \"number\" != typeof t.raw_data.contract[0].Permission_id && (t.raw_data.contract[0].Permission_id = 0), Re.isObject(t)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\", n(\"Invalid transaction provided\"));\n\n            case 9:\n              this.tronWeb.fullNode.request(\"wallet/getsignweight\", t, \"post\").then(function (e) {\n                n(null, e);\n              }).catch(function (e) {\n                return n(e);\n              });\n\n            case 10:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t) {\n        return v.apply(this, arguments);\n      })\n    }, {\n      key: \"sendRawTransaction\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return Re.isFunction(t) && (r = t, t = {}), r ? Re.isObject(e) ? Re.isObject(t) ? e.signature && Re.isArray(e.signature) ? void this.tronWeb.fullNode.request(\"wallet/broadcasttransaction\", e, \"post\").then(function (t) {\n          t.result && (t.transaction = e), r(null, t);\n        }).catch(function (e) {\n          return r(e);\n        }) : r(\"Transaction is not signed\") : r(\"Invalid options provided\") : r(\"Invalid transaction provided\") : this.injectPromise(this.sendRawTransaction, e, t);\n      }\n    }, {\n      key: \"sendTransaction\",\n      value: (h = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = c.length > 0 && void 0 !== c[0] && c[0], r = c.length > 1 && void 0 !== c[1] && c[1], n = c.length > 2 && void 0 !== c[2] ? c[2] : {}, i = c.length > 3 && void 0 !== c[3] && c[3], Re.isFunction(n) && (i = n, n = {}), \"string\" == typeof n && (n = {\n                privateKey: n\n              }), i) {\n                e.next = 8;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.sendTransaction, t, r, n));\n\n            case 8:\n              if (this.tronWeb.isAddress(t)) {\n                e.next = 10;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(\"Invalid recipient provided\"));\n\n            case 10:\n              if (Re.isInteger(r) && !(r <= 0)) {\n                e.next = 12;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(\"Invalid amount provided\"));\n\n            case 12:\n              if ((n = ut({\n                privateKey: this.tronWeb.defaultPrivateKey,\n                address: this.tronWeb.defaultAddress.hex\n              }, n)).privateKey || n.address) {\n                e.next = 15;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(\"Function requires either a private key or address to be set\"));\n\n            case 15:\n              return e.prev = 15, a = n.privateKey ? this.tronWeb.address.fromPrivateKey(n.privateKey) : n.address, e.next = 19, this.tronWeb.transactionBuilder.sendTrx(t, r, a);\n\n            case 19:\n              return s = e.sent, e.next = 22, this.sign(s, n.privateKey || void 0);\n\n            case 22:\n              return o = e.sent, e.next = 25, this.sendRawTransaction(o);\n\n            case 25:\n              return u = e.sent, e.abrupt(\"return\", i(null, u));\n\n            case 29:\n              return e.prev = 29, e.t0 = e.catch(15), e.abrupt(\"return\", i(e.t0));\n\n            case 32:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[15, 29]]);\n      })), function () {\n        return h.apply(this, arguments);\n      })\n    }, {\n      key: \"sendToken\",\n      value: (d = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = d.length > 0 && void 0 !== d[0] && d[0], r = d.length > 1 && void 0 !== d[1] && d[1], n = d.length > 2 && void 0 !== d[2] && d[2], i = d.length > 3 && void 0 !== d[3] ? d[3] : {}, a = d.length > 4 && void 0 !== d[4] && d[4], Re.isFunction(i) && (a = i, i = {}), \"string\" == typeof i && (i = {\n                privateKey: i\n              }), a) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.sendToken, t, r, n, i));\n\n            case 9:\n              if (this.tronWeb.isAddress(t)) {\n                e.next = 11;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Invalid recipient provided\"));\n\n            case 11:\n              if (Re.isInteger(r) && !(r <= 0)) {\n                e.next = 13;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Invalid amount provided\"));\n\n            case 13:\n              if (Re.isInteger(n) && (n = n.toString()), Re.isString(n)) {\n                e.next = 16;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Invalid token ID provided\"));\n\n            case 16:\n              if ((i = ut({\n                privateKey: this.tronWeb.defaultPrivateKey,\n                address: this.tronWeb.defaultAddress.hex\n              }, i)).privateKey || i.address) {\n                e.next = 19;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Function requires either a private key or address to be set\"));\n\n            case 19:\n              return e.prev = 19, s = i.privateKey ? this.tronWeb.address.fromPrivateKey(i.privateKey) : i.address, e.next = 23, this.tronWeb.transactionBuilder.sendToken(t, r, n, s);\n\n            case 23:\n              return o = e.sent, e.next = 26, this.sign(o, i.privateKey || void 0);\n\n            case 26:\n              return u = e.sent, e.next = 29, this.sendRawTransaction(u);\n\n            case 29:\n              return c = e.sent, e.abrupt(\"return\", a(null, c));\n\n            case 33:\n              return e.prev = 33, e.t0 = e.catch(19), e.abrupt(\"return\", a(e.t0));\n\n            case 36:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[19, 33]]);\n      })), function () {\n        return d.apply(this, arguments);\n      })\n    }, {\n      key: \"freezeBalance\",\n      value: (c = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u,\n            c,\n            d,\n            h = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = h.length > 0 && void 0 !== h[0] ? h[0] : 0, r = h.length > 1 && void 0 !== h[1] ? h[1] : 3, n = h.length > 2 && void 0 !== h[2] ? h[2] : \"BANDWIDTH\", i = h.length > 3 && void 0 !== h[3] ? h[3] : {}, a = h.length > 4 && void 0 !== h[4] ? h[4] : void 0, s = h.length > 5 && void 0 !== h[5] && h[5], Re.isFunction(a) && (s = a, a = void 0), Re.isFunction(r) && (s = r, r = 3), Re.isFunction(n) && (s = n, n = \"BANDWIDTH\"), Re.isFunction(i) && (s = i, i = {}), \"string\" == typeof i && (i = {\n                privateKey: i\n              }), s) {\n                e.next = 13;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.freezeBalance, t, r, n, i, a));\n\n            case 13:\n              if ([\"BANDWIDTH\", \"ENERGY\"].includes(n)) {\n                e.next = 15;\n                break;\n              }\n\n              return e.abrupt(\"return\", s('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'));\n\n            case 15:\n              if (Re.isInteger(t) && !(t <= 0)) {\n                e.next = 17;\n                break;\n              }\n\n              return e.abrupt(\"return\", s(\"Invalid amount provided\"));\n\n            case 17:\n              if (Re.isInteger(r) && !(r < 3)) {\n                e.next = 19;\n                break;\n              }\n\n              return e.abrupt(\"return\", s(\"Invalid duration provided, minimum of 3 days\"));\n\n            case 19:\n              if ((i = ut({\n                privateKey: this.tronWeb.defaultPrivateKey,\n                address: this.tronWeb.defaultAddress.hex\n              }, i)).privateKey || i.address) {\n                e.next = 22;\n                break;\n              }\n\n              return e.abrupt(\"return\", s(\"Function requires either a private key or address to be set\"));\n\n            case 22:\n              return e.prev = 22, o = i.privateKey ? this.tronWeb.address.fromPrivateKey(i.privateKey) : i.address, e.next = 26, this.tronWeb.transactionBuilder.freezeBalance(t, r, n, o, a);\n\n            case 26:\n              return u = e.sent, e.next = 29, this.sign(u, i.privateKey || void 0);\n\n            case 29:\n              return c = e.sent, e.next = 32, this.sendRawTransaction(c);\n\n            case 32:\n              return d = e.sent, e.abrupt(\"return\", s(null, d));\n\n            case 36:\n              return e.prev = 36, e.t0 = e.catch(22), e.abrupt(\"return\", s(e.t0));\n\n            case 39:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[22, 36]]);\n      })), function () {\n        return c.apply(this, arguments);\n      })\n    }, {\n      key: \"unfreezeBalance\",\n      value: (u = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = c.length > 0 && void 0 !== c[0] ? c[0] : \"BANDWIDTH\", r = c.length > 1 && void 0 !== c[1] ? c[1] : {}, n = c.length > 2 && void 0 !== c[2] ? c[2] : void 0, i = c.length > 3 && void 0 !== c[3] && c[3], Re.isFunction(n) && (i = n, n = void 0), Re.isFunction(t) && (i = t, t = \"BANDWIDTH\"), Re.isFunction(r) && (i = r, r = {}), \"string\" == typeof r && (r = {\n                privateKey: r\n              }), i) {\n                e.next = 10;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.unfreezeBalance, t, r, n));\n\n            case 10:\n              if ([\"BANDWIDTH\", \"ENERGY\"].includes(t)) {\n                e.next = 12;\n                break;\n              }\n\n              return e.abrupt(\"return\", i('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"'));\n\n            case 12:\n              if ((r = ut({\n                privateKey: this.tronWeb.defaultPrivateKey,\n                address: this.tronWeb.defaultAddress.hex\n              }, r)).privateKey || r.address) {\n                e.next = 15;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(\"Function requires either a private key or address to be set\"));\n\n            case 15:\n              return e.prev = 15, a = r.privateKey ? this.tronWeb.address.fromPrivateKey(r.privateKey) : r.address, e.next = 19, this.tronWeb.transactionBuilder.unfreezeBalance(t, a, n);\n\n            case 19:\n              return s = e.sent, e.next = 22, this.sign(s, r.privateKey || void 0);\n\n            case 22:\n              return o = e.sent, e.next = 25, this.sendRawTransaction(o);\n\n            case 25:\n              return u = e.sent, e.abrupt(\"return\", i(null, u));\n\n            case 29:\n              return e.prev = 29, e.t0 = e.catch(15), e.abrupt(\"return\", i(e.t0));\n\n            case 32:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[15, 29]]);\n      })), function () {\n        return u.apply(this, arguments);\n      })\n    }, {\n      key: \"updateAccount\",\n      value: (o = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : {}, n = u.length > 2 && void 0 !== u[2] && u[2], Re.isFunction(r) && (n = r, r = {}), \"string\" == typeof r && (r = {\n                privateKey: r\n              }), n) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.updateAccount, t, r));\n\n            case 7:\n              if (Re.isString(t) && t.length) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\", n(\"Name must be a string\"));\n\n            case 9:\n              if ((r = ut({\n                privateKey: this.tronWeb.defaultPrivateKey,\n                address: this.tronWeb.defaultAddress.hex\n              }, r)).privateKey || r.address) {\n                e.next = 12;\n                break;\n              }\n\n              return e.abrupt(\"return\", n(\"Function requires either a private key or address to be set\"));\n\n            case 12:\n              return e.prev = 12, i = r.privateKey ? this.tronWeb.address.fromPrivateKey(r.privateKey) : r.address, e.next = 16, this.tronWeb.transactionBuilder.updateAccount(t, i);\n\n            case 16:\n              return a = e.sent, e.next = 19, this.sign(a, r.privateKey || void 0);\n\n            case 19:\n              return s = e.sent, e.next = 22, this.sendRawTransaction(s);\n\n            case 22:\n              return o = e.sent, e.abrupt(\"return\", n(null, o));\n\n            case 26:\n              return e.prev = 26, e.t0 = e.catch(12), e.abrupt(\"return\", n(e.t0));\n\n            case 29:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[12, 26]]);\n      })), function () {\n        return o.apply(this, arguments);\n      })\n    }, {\n      key: \"signMessage\",\n      value: function () {\n        return this.sign.apply(this, arguments);\n      }\n    }, {\n      key: \"sendAsset\",\n      value: function () {\n        return this.sendToken.apply(this, arguments);\n      }\n    }, {\n      key: \"send\",\n      value: function () {\n        return this.sendTransaction.apply(this, arguments);\n      }\n    }, {\n      key: \"sendTrx\",\n      value: function () {\n        return this.sendTransaction.apply(this, arguments);\n      }\n    }, {\n      key: \"broadcast\",\n      value: function () {\n        return this.sendRawTransaction.apply(this, arguments);\n      }\n    }, {\n      key: \"signTransaction\",\n      value: function () {\n        return this.sign.apply(this, arguments);\n      }\n    }, {\n      key: \"getProposal\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? !Re.isInteger(e) || e < 0 ? t(\"Invalid proposalID provided\") : void this.tronWeb.fullNode.request(\"wallet/getproposalbyid\", {\n          id: parseInt(e)\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : this.injectPromise(this.getProposal, e);\n      }\n    }, {\n      key: \"listProposals\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.listProposals);\n        this.tronWeb.fullNode.request(\"wallet/listproposals\", {}, \"post\").then(function (t) {\n          var r = t.proposals;\n          e(null, void 0 === r ? [] : r);\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getChainParameters\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getChainParameters);\n        this.tronWeb.fullNode.request(\"wallet/getchainparameters\", {}, \"post\").then(function (t) {\n          var r = t.chainParameter;\n          e(null, void 0 === r ? [] : r);\n        }).catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getAccountResources\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.tronWeb.defaultAddress.hex,\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? this.tronWeb.isAddress(e) ? void this.tronWeb.fullNode.request(\"wallet/getaccountresource\", {\n          address: this.tronWeb.address.toHex(e)\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : t(\"Invalid address provided\") : this.injectPromise(this.getAccountResources, e);\n      }\n    }, {\n      key: \"getExchangeByID\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return t ? !Re.isInteger(e) || e < 0 ? t(\"Invalid exchangeID provided\") : void this.tronWeb.fullNode.request(\"wallet/getexchangebyid\", {\n          id: e\n        }, \"post\").then(function (e) {\n          t(null, e);\n        }).catch(function (e) {\n          return t(e);\n        }) : this.injectPromise(this.getExchangeByID, e);\n      }\n    }, {\n      key: \"listExchanges\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.listExchanges);\n        this.tronWeb.fullNode.request(\"wallet/listexchanges\", {}, \"post\").then(function (t) {\n          var r = t.exchanges;\n          e(null, void 0 === r ? [] : r);\n        }, \"post\").catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"listExchangesPaginated\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 10,\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (Re.isFunction(t) && (r = t, t = 0), Re.isFunction(e) && (r = e, e = 10), !r) return this.injectPromise(this.listExchangesPaginated, e, t);\n        this.tronWeb.fullNode.request(\"wallet/getpaginatedexchangelist\", {\n          limit: e,\n          offset: t\n        }, \"post\").then(function (e) {\n          var t = e.exchanges;\n          r(null, void 0 === t ? [] : t);\n        }).catch(function (e) {\n          return r(e);\n        });\n      }\n    }, {\n      key: \"getNodeInfo\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!e) return this.injectPromise(this.getNodeInfo);\n        this.tronWeb.fullNode.request(\"wallet/getnodeinfo\", {}, \"post\").then(function (t) {\n          e(null, t);\n        }, \"post\").catch(function (t) {\n          return e(t);\n        });\n      }\n    }, {\n      key: \"getTokenListByName\",\n      value: function () {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return r ? (Re.isInteger(t) && (t = t.toString()), Re.isString(t) && t.length ? void this.tronWeb.fullNode.request(\"wallet/getassetissuelistbyname\", {\n          value: this.tronWeb.fromUtf8(t)\n        }, \"post\").then(function (t) {\n          if (Array.isArray(t.assetIssue)) r(null, t.assetIssue.map(function (t) {\n            return e._parseToken(t);\n          }));else if (!t.name) return r(\"Token does not exist\");\n          r(null, e._parseToken(t));\n        }).catch(function (e) {\n          return r(e);\n        }) : r(\"Invalid token ID provided\")) : this.injectPromise(this.getTokenListByName, t);\n      }\n    }, {\n      key: \"getTokenByID\",\n      value: function () {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return r ? (Re.isInteger(t) && (t = t.toString()), Re.isString(t) && t.length ? void this.tronWeb.fullNode.request(\"wallet/getassetissuebyid\", {\n          value: t\n        }, \"post\").then(function (t) {\n          if (!t.name) return r(\"Token does not exist\");\n          r(null, e._parseToken(t));\n        }).catch(function (e) {\n          return r(e);\n        }) : r(\"Invalid token ID provided\")) : this.injectPromise(this.getTokenByID, t);\n      }\n    }, {\n      key: \"getReward\",\n      value: (s = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !0, e.abrupt(\"return\", this._getReward(t, r, n));\n\n            case 4:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e) {\n        return s.apply(this, arguments);\n      })\n    }, {\n      key: \"getUnconfirmedReward\",\n      value: (a = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !1, e.abrupt(\"return\", this._getReward(t, r, n));\n\n            case 4:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e) {\n        return a.apply(this, arguments);\n      })\n    }, {\n      key: \"getBrokerage\",\n      value: (i = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !0, e.abrupt(\"return\", this._getBrokerage(t, r, n));\n\n            case 4:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e) {\n        return i.apply(this, arguments);\n      })\n    }, {\n      key: \"getUnconfirmedBrokerage\",\n      value: (n = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return r = i.length > 1 && void 0 !== i[1] ? i[1] : {}, n = i.length > 2 && void 0 !== i[2] && i[2], r.confirmed = !1, e.abrupt(\"return\", this._getBrokerage(t, r, n));\n\n            case 4:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e) {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"_getReward\",\n      value: (r = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = a.length > 0 && void 0 !== a[0] ? a[0] : this.tronWeb.defaultAddress.hex, r = a.length > 1 ? a[1] : void 0, n = a.length > 2 && void 0 !== a[2] && a[2], Re.isFunction(r) && (n = r, r = {}), Re.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Re.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), n) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this._getReward, t, r));\n\n            case 7:\n              if (!this.validator.notValid([{\n                name: \"origin\",\n                type: \"address\",\n                value: t\n              }], n)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 9:\n              i = {\n                address: ct(t)\n              }, this.tronWeb[r.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(r.confirmed ? \"solidity\" : \"\", \"/getReward\"), i, \"post\").then(function () {\n                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                if (void 0 === e.reward) return n(\"Not found.\");\n                n(null, e.reward);\n              }).catch(function (e) {\n                return n(e);\n              });\n\n            case 11:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function () {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"_getBrokerage\",\n      value: (t = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = a.length > 0 && void 0 !== a[0] ? a[0] : this.tronWeb.defaultAddress.hex, r = a.length > 1 ? a[1] : void 0, n = a.length > 2 && void 0 !== a[2] && a[2], Re.isFunction(r) && (n = r, r = {}), Re.isFunction(t) ? (n = t, t = this.tronWeb.defaultAddress.hex) : Re.isObject(t) && (r = t, t = this.tronWeb.defaultAddress.hex), n) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this._getBrokerage, t, r));\n\n            case 7:\n              if (!this.validator.notValid([{\n                name: \"origin\",\n                type: \"address\",\n                value: t\n              }], n)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 9:\n              i = {\n                address: ct(t)\n              }, this.tronWeb[r.confirmed ? \"solidityNode\" : \"fullNode\"].request(\"wallet\".concat(r.confirmed ? \"solidity\" : \"\", \"/getBrokerage\"), i, \"post\").then(function () {\n                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                if (void 0 === e.brokerage) return n(\"Not found.\");\n                n(null, e.brokerage);\n              }).catch(function (e) {\n                return n(e);\n              });\n\n            case 11:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function () {\n        return t.apply(this, arguments);\n      })\n    }], [{\n      key: \"verifySignature\",\n      value: function (e, t, r) {\n        var n = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];\n        e = e.replace(/^0x/, \"\"), r = r.replace(/^0x/, \"\");\n        var i = [].concat(R()(se(n ? \"\u0019TRON Signed Message:\\n32\" : \"\u0019Ethereum Signed Message:\\n32\")), R()(Re.code.hexStr2byteArray(e))),\n            a = ie(i),\n            s = ue(a, {\n          recoveryParam: \"1c\" == r.substring(128, 130) ? 1 : 0,\n          r: \"0x\" + r.substring(0, 64),\n          s: \"0x\" + r.substring(64, 128)\n        }),\n            o = \"41\" + s.substr(2),\n            u = Pt.address.fromHex(o);\n        return u == Pt.address.fromHex(t);\n      }\n    }, {\n      key: \"signString\",\n      value: function (e, t) {\n        var r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];\n        e = e.replace(/^0x/, \"\");\n        var n = {\n          toHexString: function () {\n            return \"0x\" + t;\n          },\n          value: t\n        },\n            i = new ce(n),\n            a = [].concat(R()(se(r ? \"\u0019TRON Signed Message:\\n32\" : \"\u0019Ethereum Signed Message:\\n32\")), R()(Re.code.hexStr2byteArray(e))),\n            s = ie(a),\n            o = i.signDigest(s),\n            u = [\"0x\", o.r.substring(2), o.s.substring(2), Number(o.v).toString(16)].join(\"\");\n        return u;\n      }\n    }]), e;\n  }();\n\n  function lt(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function ht(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? lt(Object(r), !0).forEach(function (t) {\n        N()(e, t, r[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : lt(Object(r)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n      });\n    }\n\n    return e;\n  }\n\n  var ft = function (e) {\n    return e.map(function (e) {\n      return e.type;\n    });\n  },\n      vt = function (e, t) {\n    var r = e.map(function (e) {\n      return e.name;\n    }).filter(function (e) {\n      return !!e;\n    }),\n        n = e.map(function (e) {\n      return e.type;\n    });\n    return Re.abi.decodeParams(r, n, t);\n  },\n      pt = function () {\n    function e(t, r) {\n      b()(this, e), this.tronWeb = t.tronWeb, this.contract = t, this.abi = r, this.name = r.name || (r.name = r.type), this.inputs = r.inputs || [], this.outputs = r.outputs || [], this.functionSelector = function (e) {\n        return e.name + \"(\" + ft(e.inputs || []).join(\",\") + \")\";\n      }(r), this.signature = this.tronWeb.sha3(this.functionSelector, !1).slice(0, 8), this.injectPromise = Je()(this), this.defaultOptions = {\n        feeLimit: this.tronWeb.feeLimit,\n        callValue: 0,\n        userFeePercentage: 100,\n        shouldPollResponse: !1\n      };\n    }\n\n    var t, r, n;\n    return y()(e, [{\n      key: \"decodeInput\",\n      value: function (e) {\n        return vt(this.inputs, \"0x\" + e);\n      }\n    }, {\n      key: \"onMethod\",\n      value: function () {\n        for (var e = this, t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];\n\n        var i = ft(this.inputs);\n        return r.forEach(function (t, n) {\n          \"address\" === i[n] && (r[n] = e.tronWeb.address.toHex(t).replace(H, \"0x\")), \"address[\" === i[n].match(/^([^\\x5b]*)(\\x5b|$)/)[0] && (r[n] = r[n].map(function (t) {\n            return e.tronWeb.address.toHex(t).replace(H, \"0x\");\n          }));\n        }), {\n          call: function () {\n            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++) n[a] = arguments[a];\n\n            return e._call.apply(e, [i, r].concat(n));\n          },\n          send: function () {\n            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++) n[a] = arguments[a];\n\n            return e._send.apply(e, [i, r].concat(n));\n          },\n          watch: function () {\n            return e._watch.apply(e, arguments);\n          }\n        };\n      }\n    }, {\n      key: \"_call\",\n      value: (n = f()(l.a.mark(function e(t, r) {\n        var n,\n            i,\n            a,\n            s,\n            o = this,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (n = u.length > 2 && void 0 !== u[2] ? u[2] : {}, i = u.length > 3 && void 0 !== u[3] && u[3], Re.isFunction(n) && (i = n, n = {}), i) {\n                e.next = 5;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this._call, t, r, n));\n\n            case 5:\n              if (t.length === r.length) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(\"Invalid argument count provided\"));\n\n            case 7:\n              if (this.contract.address) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(\"Smart contract is missing address\"));\n\n            case 9:\n              if (this.contract.deployed) {\n                e.next = 11;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(\"Calling smart contracts requires you to load the contract first\"));\n\n            case 11:\n              if (a = this.abi.stateMutability, [\"pure\", \"view\"].includes(a.toLowerCase())) {\n                e.next = 14;\n                break;\n              }\n\n              return e.abrupt(\"return\", i('Methods with state mutability \"'.concat(a, '\" must use send()')));\n\n            case 14:\n              n = ht(ht({}, this.defaultOptions), {}, {\n                from: this.tronWeb.defaultAddress.hex\n              }, n), s = r.map(function (e, r) {\n                return {\n                  type: t[r],\n                  value: e\n                };\n              }), this.tronWeb.transactionBuilder.triggerSmartContract(this.contract.address, this.functionSelector, n, s, !!n.from && this.tronWeb.address.toHex(n.from), function (e, t) {\n                if (e) return i(e);\n                if (!Re.hasProperty(t, \"constant_result\")) return i(\"Failed to execute\");\n\n                try {\n                  var r = t.constant_result[0].length;\n\n                  if (0 === r || r % 64 == 8) {\n                    var n = \"The call has been reverted or has thrown an error.\";\n\n                    if (0 !== r) {\n                      n += \" Error message: \";\n\n                      for (var a = \"\", s = t.constant_result[0].substring(8), u = 0; u < r - 8; u += 64) a += o.tronWeb.toUtf8(s.substring(u, u + 64));\n\n                      n += a.replace(/(\\u0000|\\u000b|\\f)+/g, \" \").replace(/ +/g, \" \").replace(/\\s+$/g, \"\");\n                    }\n\n                    return i(n);\n                  }\n\n                  var c = vt(o.outputs, \"0x\" + t.constant_result[0]);\n                  return 1 === c.length && (c = c[0]), i(null, c);\n                } catch (e) {\n                  return i(e);\n                }\n              });\n\n            case 17:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t) {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"_send\",\n      value: (r = f()(l.a.mark(function e(t, r) {\n        var n,\n            i,\n            a,\n            s,\n            o,\n            u,\n            c,\n            d,\n            h,\n            v,\n            p,\n            g = this,\n            b = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (n = b.length > 2 && void 0 !== b[2] ? b[2] : {}, i = b.length > 3 && void 0 !== b[3] ? b[3] : this.tronWeb.defaultPrivateKey, a = b.length > 4 && void 0 !== b[4] && b[4], Re.isFunction(i) && (a = i, i = this.tronWeb.defaultPrivateKey), Re.isFunction(n) && (a = n, n = {}), a) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this._send, t, r, n, i));\n\n            case 7:\n              if (t.length === r.length) {\n                e.next = 9;\n                break;\n              }\n\n              throw new Error(\"Invalid argument count provided\");\n\n            case 9:\n              if (this.contract.address) {\n                e.next = 11;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Smart contract is missing address\"));\n\n            case 11:\n              if (this.contract.deployed) {\n                e.next = 13;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Calling smart contracts requires you to load the contract first\"));\n\n            case 13:\n              if (s = this.abi.stateMutability, ![\"pure\", \"view\"].includes(s.toLowerCase())) {\n                e.next = 16;\n                break;\n              }\n\n              return e.abrupt(\"return\", a('Methods with state mutability \"'.concat(s, '\" must use call()')));\n\n            case 16:\n              return [\"payable\"].includes(s.toLowerCase()) || (n.callValue = 0), n = ht(ht({}, this.defaultOptions), {}, {\n                from: this.tronWeb.defaultAddress.hex\n              }, n), o = r.map(function (e, r) {\n                return {\n                  type: t[r],\n                  value: e\n                };\n              }), e.prev = 19, u = i ? this.tronWeb.address.fromPrivateKey(i) : this.tronWeb.defaultAddress.base58, e.next = 23, this.tronWeb.transactionBuilder.triggerSmartContract(this.contract.address, this.functionSelector, n, o, this.tronWeb.address.toHex(u));\n\n            case 23:\n              if ((c = e.sent).result && c.result.result) {\n                e.next = 26;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Unknown error: \" + JSON.stringify(c, null, 2)));\n\n            case 26:\n              return e.next = 28, this.tronWeb.trx.sign(c.transaction, i);\n\n            case 28:\n              if ((d = e.sent).signature) {\n                e.next = 33;\n                break;\n              }\n\n              if (i) {\n                e.next = 32;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Transaction was not signed properly\"));\n\n            case 32:\n              return e.abrupt(\"return\", a(\"Invalid private key provided\"));\n\n            case 33:\n              return e.next = 35, this.tronWeb.trx.sendRawTransaction(d);\n\n            case 35:\n              if (!(h = e.sent).code) {\n                e.next = 40;\n                break;\n              }\n\n              return v = {\n                error: h.code,\n                message: h.code\n              }, h.message && (v.message = this.tronWeb.toUtf8(h.message)), e.abrupt(\"return\", a(v));\n\n            case 40:\n              if (n.shouldPollResponse) {\n                e.next = 42;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(null, d.txID));\n\n            case 42:\n              (p = function () {\n                var e = f()(l.a.mark(function e() {\n                  var t,\n                      r,\n                      i,\n                      s = arguments;\n                  return l.a.wrap(function (e) {\n                    for (;;) switch (e.prev = e.next) {\n                      case 0:\n                        if (20 !== (t = s.length > 0 && void 0 !== s[0] ? s[0] : 0)) {\n                          e.next = 3;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", a({\n                          error: \"Cannot find result in solidity node\",\n                          transaction: d\n                        }));\n\n                      case 3:\n                        return e.next = 5, g.tronWeb.trx.getTransactionInfo(d.txID);\n\n                      case 5:\n                        if (r = e.sent, Object.keys(r).length) {\n                          e.next = 8;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", setTimeout(function () {\n                          p(t + 1);\n                        }, 3e3));\n\n                      case 8:\n                        if (!r.result || \"FAILED\" !== r.result) {\n                          e.next = 10;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", a({\n                          error: g.tronWeb.toUtf8(r.resMessage),\n                          transaction: d,\n                          output: r\n                        }));\n\n                      case 10:\n                        if (Re.hasProperty(r, \"contractResult\")) {\n                          e.next = 12;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", a({\n                          error: \"Failed to execute: \" + JSON.stringify(r, null, 2),\n                          transaction: d,\n                          output: r\n                        }));\n\n                      case 12:\n                        if (!n.rawResponse) {\n                          e.next = 14;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", a(null, r));\n\n                      case 14:\n                        if (1 === (i = vt(g.outputs, \"0x\" + r.contractResult[0])).length && (i = i[0]), !n.keepTxID) {\n                          e.next = 18;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", a(null, [d.txID, i]));\n\n                      case 18:\n                        return e.abrupt(\"return\", a(null, i));\n\n                      case 19:\n                      case \"end\":\n                        return e.stop();\n                    }\n                  }, e);\n                }));\n                return function () {\n                  return e.apply(this, arguments);\n                };\n              }())(), e.next = 49;\n              break;\n\n            case 46:\n              return e.prev = 46, e.t0 = e.catch(19), e.abrupt(\"return\", a(e.t0));\n\n            case 49:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[19, 46]]);\n      })), function (e, t) {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"_watch\",\n      value: (t = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u = this,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = c.length > 0 && void 0 !== c[0] ? c[0] : {}, r = c.length > 1 && void 0 !== c[1] && c[1], Re.isFunction(t) && (r = t, t = {}), Re.isFunction(r)) {\n                e.next = 5;\n                break;\n              }\n\n              throw new Error(\"Expected callback to be provided\");\n\n            case 5:\n              if (this.contract.address) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", r(\"Smart contract is missing address\"));\n\n            case 7:\n              if (this.abi.type && /event/i.test(this.abi.type)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\", r(\"Invalid method type for event watching\"));\n\n            case 9:\n              if (this.tronWeb.eventServer) {\n                e.next = 11;\n                break;\n              }\n\n              return e.abrupt(\"return\", r(\"No event server configured\"));\n\n            case 11:\n              return n = !1, i = !1, a = Date.now() - 1e3, s = function () {\n                var e = f()(l.a.mark(function e() {\n                  var r, n, s, o, c, d;\n                  return l.a.wrap(function (e) {\n                    for (;;) switch (e.prev = e.next) {\n                      case 0:\n                        return e.prev = 0, r = {\n                          since: a,\n                          eventName: u.name,\n                          sort: \"block_timestamp\",\n                          blockNumber: \"latest\",\n                          filters: t.filters\n                        }, t.resourceNode && (/full/i.test(t.resourceNode) ? r.onlyUnconfirmed = !0 : r.onlyConfirmed = !0), e.next = 5, u.tronWeb.event.getEventsByContractAddress(u.contract.address, r);\n\n                      case 5:\n                        return n = e.sent, s = n.sort(function (e, t) {\n                          return t.block - e.block;\n                        }), o = $e()(s, 1), c = o[0], d = n.filter(function (e, r) {\n                          return !(t.resourceNode && e.resourceNode && t.resourceNode.toLowerCase() !== e.resourceNode.toLowerCase() || n.slice(0, r).some(function (t) {\n                            return JSON.stringify(t) == JSON.stringify(e);\n                          }) || i && !(e.block > i));\n                        }), c && (i = c.block), e.abrupt(\"return\", d);\n\n                      case 12:\n                        return e.prev = 12, e.t0 = e.catch(0), e.abrupt(\"return\", Promise.reject(e.t0));\n\n                      case 15:\n                      case \"end\":\n                        return e.stop();\n                    }\n                  }, e, null, [[0, 12]]);\n                }));\n                return function () {\n                  return e.apply(this, arguments);\n                };\n              }(), o = function () {\n                n && clearInterval(n), n = setInterval(function () {\n                  s().then(function (e) {\n                    return e.forEach(function (e) {\n                      r(null, Re.parseEvent(e, u.abi));\n                    });\n                  }).catch(function (e) {\n                    return r(e);\n                  });\n                }, 3e3);\n              }, e.next = 18, s();\n\n            case 18:\n              return o(), e.abrupt(\"return\", {\n                start: o,\n                stop: function () {\n                  n && (clearInterval(n), n = !1);\n                }\n              });\n\n            case 20:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function () {\n        return t.apply(this, arguments);\n      })\n    }]), e;\n  }(),\n      gt = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n          r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],\n          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n      if (b()(this, e), !t || !t instanceof Pt) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.injectPromise = Je()(this), this.address = n, this.abi = r, this.eventListener = !1, this.bytecode = !1, this.deployed = !1, this.lastBlock = !1, this.methods = {}, this.methodInstances = {}, this.props = [], this.tronWeb.isAddress(n) ? this.deployed = !0 : this.address = !1, this.loadAbi(r);\n    }\n\n    var t, r, n, i;\n    return y()(e, [{\n      key: \"_getEvents\",\n      value: (i = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o = this,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return t = u.length > 0 && void 0 !== u[0] ? u[0] : {}, e.next = 3, this.tronWeb.event.getEventsByContractAddress(this.address, t);\n\n            case 3:\n              return r = e.sent, n = r.sort(function (e, t) {\n                return t.block - e.block;\n              }), i = $e()(n, 1), a = i[0], s = r.filter(function (e, n) {\n                return !(t.resourceNode && e.resourceNode && t.resourceNode.toLowerCase() !== e.resourceNode.toLowerCase() || r.slice(0, n).some(function (t) {\n                  return JSON.stringify(t) == JSON.stringify(e);\n                }) || o.lastBlock && !(e.block > o.lastBlock));\n              }), a && (this.lastBlock = a.block), e.abrupt(\"return\", s);\n\n            case 8:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function () {\n        return i.apply(this, arguments);\n      })\n    }, {\n      key: \"_startEventListener\",\n      value: (n = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n = this,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = i.length > 0 && void 0 !== i[0] ? i[0] : {}, r = i.length > 1 ? i[1] : void 0, Re.isFunction(t) && (r = t, t = {}), this.eventListener && clearInterval(this.eventListener), this.tronWeb.eventServer) {\n                e.next = 6;\n                break;\n              }\n\n              throw new Error(\"Event server is not configured\");\n\n            case 6:\n              if (this.address) {\n                e.next = 8;\n                break;\n              }\n\n              throw new Error(\"Contract is not configured with an address\");\n\n            case 8:\n              return this.eventCallback = r, e.next = 11, this._getEvents(t);\n\n            case 11:\n              this.eventListener = setInterval(function () {\n                n._getEvents(t).then(function (e) {\n                  return e.forEach(function (e) {\n                    n.eventCallback && n.eventCallback(e);\n                  });\n                }).catch(function (e) {\n                  console.error(\"Failed to get event list\", e);\n                });\n              }, 3e3);\n\n            case 12:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function () {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"_stopEventListener\",\n      value: function () {\n        this.eventListener && (clearInterval(this.eventListener), this.eventListener = !1, this.eventCallback = !1);\n      }\n    }, {\n      key: \"hasProperty\",\n      value: function (e) {\n        return this.hasOwnProperty(e) || this.__proto__.hasOwnProperty(e);\n      }\n    }, {\n      key: \"loadAbi\",\n      value: function (e) {\n        var t = this;\n        this.abi = e, this.methods = {}, this.props.forEach(function (e) {\n          return delete t[e];\n        }), e.forEach(function (e) {\n          if (e.type && !/constructor/i.test(e.type)) {\n            var r = new pt(t, e),\n                n = r.onMethod.bind(r),\n                i = r.name,\n                a = r.functionSelector,\n                s = r.signature;\n            t.methods[i] = n, t.methods[a] = n, t.methods[s] = n, t.methodInstances[i] = r, t.methodInstances[a] = r, t.methodInstances[s] = r, t.hasProperty(i) || (t[i] = n, t.props.push(i)), t.hasProperty(a) || (t[a] = n, t.props.push(a)), t.hasProperty(s) || (t[s] = n, t.props.push(s));\n          }\n        });\n      }\n    }, {\n      key: \"decodeInput\",\n      value: function (e) {\n        var t = e.substring(0, 8),\n            r = e.substring(8);\n        if (!this.methodInstances[t]) throw new Error(\"Contract method \" + t + \" not found\");\n        return {\n          name: this.methodInstances[t].name,\n          params: this.methodInstances[t].decodeInput(r)\n        };\n      }\n    }, {\n      key: \"new\",\n      value: (r = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (r = u.length > 1 && void 0 !== u[1] ? u[1] : this.tronWeb.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], Re.isFunction(r) && (n = r, r = this.tronWeb.defaultPrivateKey), n) {\n                e.next = 5;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.new, t, r));\n\n            case 5:\n              return e.prev = 5, i = this.tronWeb.address.fromPrivateKey(r), e.next = 9, this.tronWeb.transactionBuilder.createSmartContract(t, i);\n\n            case 9:\n              return a = e.sent, e.next = 12, this.tronWeb.trx.sign(a, r);\n\n            case 12:\n              return s = e.sent, e.next = 15, this.tronWeb.trx.sendRawTransaction(s);\n\n            case 15:\n              if (!(o = e.sent).code) {\n                e.next = 18;\n                break;\n              }\n\n              return e.abrupt(\"return\", n({\n                error: o.code,\n                message: this.tronWeb.toUtf8(o.message)\n              }));\n\n            case 18:\n              return e.next = 20, Re.sleep(3e3);\n\n            case 20:\n              return e.abrupt(\"return\", this.at(s.contract_address, n));\n\n            case 23:\n              return e.prev = 23, e.t0 = e.catch(5), e.abrupt(\"return\", n(e.t0));\n\n            case 26:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[5, 23]]);\n      })), function (e) {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"at\",\n      value: (t = f()(l.a.mark(function e(t) {\n        var r,\n            n,\n            i = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (r = i.length > 1 && void 0 !== i[1] && i[1]) {\n                e.next = 3;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.at, t));\n\n            case 3:\n              return e.prev = 3, e.next = 6, this.tronWeb.trx.getContract(t);\n\n            case 6:\n              if ((n = e.sent).contract_address) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\", r(\"Unknown error: \" + JSON.stringify(n, null, 2)));\n\n            case 9:\n              return this.address = n.contract_address, this.bytecode = n.bytecode, this.deployed = !0, this.loadAbi(n.abi && n.abi.entrys ? n.abi.entrys : []), e.abrupt(\"return\", r(null, this));\n\n            case 16:\n              if (e.prev = 16, e.t0 = e.catch(3), !e.t0.toString().includes(\"does not exist\")) {\n                e.next = 20;\n                break;\n              }\n\n              return e.abrupt(\"return\", r(\"Contract has not been deployed on the network\"));\n\n            case 20:\n              return e.abrupt(\"return\", r(e.t0));\n\n            case 21:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[3, 16]]);\n      })), function (e) {\n        return t.apply(this, arguments);\n      })\n    }, {\n      key: \"events\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        if (Re.isFunction(e) && (t = e, e = {}), !Re.isFunction(t)) throw new Error(\"Callback function expected\");\n        var r = this;\n        return {\n          start: function () {\n            var n = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n            return n ? (r._startEventListener(e, t).then(function () {\n              n();\n            }).catch(function (e) {\n              n(e);\n            }), this) : (r._startEventListener(e, t), this);\n          },\n          stop: function () {\n            r._stopEventListener();\n          }\n        };\n      }\n    }]), e;\n  }(),\n      bt = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n          r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n      if (b()(this, e), !t || !t instanceof Pt) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.pluginNoOverride = [\"register\"], this.disablePlugins = r.disablePlugins;\n    }\n\n    return y()(e, [{\n      key: \"register\",\n      value: function (e, t) {\n        var r = {\n          requires: \"0.0.0\",\n          components: {}\n        },\n            n = {\n          libs: [],\n          plugged: [],\n          skipped: []\n        };\n        if (this.disablePlugins) return n.error = \"This instance of TronWeb has plugins disabled.\", n;\n        var i = new e(this.tronWeb);\n        if (Re.isFunction(i.pluginInterface) && (r = i.pluginInterface(t)), !Me.a.satisfies(Pt.version, r.requires)) throw new Error(\"The plugin is not compatible with this version of TronWeb\");\n\n        if (r.fullClass) {\n          var a = i.constructor.name,\n              s = a.substring(0, 1).toLowerCase() + a.substring(1);\n          a !== s && (Pt[a] = e, this.tronWeb[s] = i, n.libs.push(a));\n        } else for (var o in r.components) if (this.tronWeb.hasOwnProperty(o)) {\n          var u = r.components[o],\n              c = this.tronWeb[o].pluginNoOverride || [];\n\n          for (var d in u) \"constructor\" === d || this.tronWeb[o][d] && (c.includes(d) || /^_/.test(d)) ? n.skipped.push(d) : (this.tronWeb[o][d] = u[d].bind(this.tronWeb[o]), n.plugged.push(d));\n        }\n\n        return n;\n      }\n    }]), e;\n  }(),\n      mt = r(21),\n      yt = r.n(mt),\n      kt = function () {\n    function e() {\n      var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n      if (b()(this, e), !(t && t instanceof Pt)) throw new Error(\"Expected instance of TronWeb\");\n      this.tronWeb = t, this.injectPromise = Je()(this);\n    }\n\n    return y()(e, [{\n      key: \"setServer\",\n      value: function () {\n        var e = this,\n            t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"healthcheck\";\n        if (!t) return this.tronWeb.eventServer = !1;\n        if (Re.isString(t) && (t = new He.HttpProvider(t)), !this.tronWeb.isValidProvider(t)) throw new Error(\"Invalid event server provided\");\n        this.tronWeb.eventServer = t, this.tronWeb.eventServer.isConnected = function () {\n          return e.tronWeb.eventServer.request(r).then(function () {\n            return !0;\n          }).catch(function () {\n            return !1;\n          });\n        };\n      }\n    }, {\n      key: \"getEventsByContractAddress\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n            n = Object.assign({\n          sinceTimestamp: 0,\n          eventName: !1,\n          blockNumber: !1,\n          size: 20,\n          page: 1\n        }, t),\n            i = n.sinceTimestamp,\n            a = n.since,\n            s = n.fromTimestamp,\n            o = n.eventName,\n            u = n.blockNumber,\n            c = n.size,\n            d = n.page,\n            l = n.onlyConfirmed,\n            h = n.onlyUnconfirmed,\n            f = n.previousLastEventFingerprint,\n            v = n.previousFingerprint,\n            g = n.fingerprint,\n            b = n.rawResponse,\n            m = n.sort,\n            y = n.filters;\n        if (!r) return this.injectPromise(this.getEventsByContractAddress, e, t);\n        if (s = s || i || a, !this.tronWeb.eventServer) return r(\"No event server configured\");\n        var k = [];\n        if (!this.tronWeb.isAddress(e)) return r(\"Invalid contract address provided\");\n        if (o && !e) return r(\"Usage of event name filtering requires a contract address\");\n        if (void 0 !== s && !Re.isInteger(s)) return r(\"Invalid fromTimestamp provided\");\n        if (!Re.isInteger(c)) return r(\"Invalid size provided\");\n        if (c > 200 && (console.warn(\"Defaulting to maximum accepted size: 200\"), c = 200), !Re.isInteger(d)) return r(\"Invalid page provided\");\n        if (u && !o) return r(\"Usage of block number filtering requires an event name\");\n        e && k.push(this.tronWeb.address.fromHex(e)), o && k.push(o), u && k.push(u);\n        var x = {\n          size: c,\n          page: d\n        };\n        return \"object\" === p()(y) && Object.keys(y).length > 0 && (x.filters = JSON.stringify(y)), s && (x.fromTimestamp = x.since = s), l && (x.only_confirmed = l), h && !l && (x.only_unconfirmed = h), m && (x.sort = m), (g = g || v || f) && (x.fingerprint = g), this.tronWeb.eventServer.request(\"event/contract/\".concat(k.join(\"/\"), \"?\").concat(yt.a.stringify(x))).then(function () {\n          var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n          return e ? Re.isArray(e) ? r(null, !0 === b ? e : e.map(function (e) {\n            return Re.mapEvent(e);\n          })) : r(e) : r(\"Unknown error occurred\");\n        }).catch(function (e) {\n          return r(e.response && e.response.data || e);\n        });\n      }\n    }, {\n      key: \"getEventsByTransactionID\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n            r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        return Re.isFunction(t) && (r = t, t = {}), r ? this.tronWeb.eventServer ? this.tronWeb.eventServer.request(\"event/transaction/\".concat(e)).then(function () {\n          var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n          return e ? Re.isArray(e) ? r(null, !0 === t.rawResponse ? e : e.map(function (e) {\n            return Re.mapEvent(e);\n          })) : r(e) : r(\"Unknown error occurred\");\n        }).catch(function (e) {\n          return r(e.response && e.response.data || e);\n        }) : r(\"No event server configured\") : this.injectPromise(this.getEventsByTransactionID, e, t);\n      }\n    }]), e;\n  }();\n\n  function xt(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function wt(e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var r = null != arguments[t] ? arguments[t] : {};\n      t % 2 ? xt(Object(r), !0).forEach(function (t) {\n        N()(e, t, r[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : xt(Object(r)).forEach(function (t) {\n        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));\n      });\n    }\n\n    return e;\n  }\n\n  var It = function () {\n    function e(t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n          n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n          i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n      b()(this, e), this.mainchain = n;\n      var a = t.fullHost,\n          s = t.fullNode,\n          o = t.solidityNode,\n          u = t.eventServer,\n          c = t.mainGatewayAddress,\n          d = t.sideGatewayAddress,\n          l = t.sideChainId;\n      this.sidechain = new r(a || s, a || o, a || u, i), this.isAddress = this.mainchain.isAddress, this.utils = this.mainchain.utils, this.setMainGatewayAddress(c), this.setSideGatewayAddress(d), this.setChainId(l), this.injectPromise = Je()(this), this.validator = new et(this.sidechain);\n      var h = this;\n      this.sidechain.trx.sign = function () {\n        return h.sign.apply(h, arguments);\n      }, this.sidechain.trx.multiSign = function () {\n        return h.multiSign.apply(h, arguments);\n      };\n    }\n\n    var t, r, n, i, a, s, o, u, c, d, h, v, p, g, m, k, x, w, I, A, P;\n    return y()(e, [{\n      key: \"setMainGatewayAddress\",\n      value: function (e) {\n        if (!this.isAddress(e)) throw new Error(\"Invalid main gateway address provided\");\n        this.mainGatewayAddress = e;\n      }\n    }, {\n      key: \"setSideGatewayAddress\",\n      value: function (e) {\n        if (!this.isAddress(e)) throw new Error(\"Invalid side gateway address provided\");\n        this.sideGatewayAddress = e;\n      }\n    }, {\n      key: \"setChainId\",\n      value: function (e) {\n        if (!this.utils.isString(e) || !e) throw new Error(\"Invalid side chainId provided\");\n        this.chainId = e;\n      }\n    }, {\n      key: \"signTransaction\",\n      value: function (e, t) {\n        \"string\" == typeof e && (e = this.utils.code.hexStr2byteArray(e));\n        var r = this.utils.code.hexStr2byteArray(this.chainId),\n            n = this.utils.code.hexStr2byteArray(t.txID).concat(r),\n            i = this.sidechain.utils.ethersUtils.sha256(n),\n            a = this.utils.crypto.ECKeySign(this.utils.code.hexStr2byteArray(i.replace(/^0x/, \"\")), e);\n        return Array.isArray(t.signature) ? t.signature.includes(a) || t.signature.push(a) : t.signature = [a], t;\n      }\n    }, {\n      key: \"multiSign\",\n      value: (P = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = u.length > 0 && void 0 !== u[0] && u[0], r = u.length > 1 && void 0 !== u[1] ? u[1] : this.sidechain.defaultPrivateKey, n = u.length > 2 && void 0 !== u[2] && u[2], i = u.length > 3 && void 0 !== u[3] && u[3], this.utils.isFunction(n) && (i = n, n = 0), this.utils.isFunction(r) && (i = r, r = this.mainchain.defaultPrivateKey, n = 0), i) {\n                e.next = 8;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.multiSign, t, r, n));\n\n            case 8:\n              if (this.utils.isObject(t) && t.raw_data && t.raw_data.contract) {\n                e.next = 10;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(\"Invalid transaction provided\"));\n\n            case 10:\n              if (t.raw_data.contract[0].Permission_id || !(n > 0)) {\n                e.next = 30;\n                break;\n              }\n\n              return t.raw_data.contract[0].Permission_id = n, a = this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(r)).toLowerCase(), e.next = 15, this.sidechain.trx.getSignWeight(t, n);\n\n            case 15:\n              if (\"PERMISSION_ERROR\" !== (s = e.sent).result.code) {\n                e.next = 18;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(s.result.message));\n\n            case 18:\n              if (o = !1, s.permission.keys.map(function (e) {\n                e.address === a && (o = !0);\n              }), o) {\n                e.next = 22;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(r + \" has no permission to sign\"));\n\n            case 22:\n              if (!s.approved_list || -1 == s.approved_list.indexOf(a)) {\n                e.next = 24;\n                break;\n              }\n\n              return e.abrupt(\"return\", i(r + \" already sign transaction\"));\n\n            case 24:\n              if (!s.transaction || !s.transaction.transaction) {\n                e.next = 29;\n                break;\n              }\n\n              (t = s.transaction.transaction).raw_data.contract[0].Permission_id = n, e.next = 30;\n              break;\n\n            case 29:\n              return e.abrupt(\"return\", i(\"Invalid transaction provided\"));\n\n            case 30:\n              return e.prev = 30, e.abrupt(\"return\", i(null, this.signTransaction(r, t)));\n\n            case 34:\n              e.prev = 34, e.t0 = e.catch(30), i(e.t0);\n\n            case 37:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[30, 34]]);\n      })), function () {\n        return P.apply(this, arguments);\n      })\n    }, {\n      key: \"sign\",\n      value: (A = f()(l.a.mark(function e() {\n        var t,\n            r,\n            n,\n            i,\n            a,\n            s,\n            o = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = o.length > 0 && void 0 !== o[0] && o[0], r = o.length > 1 && void 0 !== o[1] ? o[1] : this.sidechain.defaultPrivateKey, n = !(o.length > 2 && void 0 !== o[2]) || o[2], i = o.length > 3 && void 0 !== o[3] && o[3], a = o.length > 4 && void 0 !== o[4] && o[4], this.utils.isFunction(i) && (a = i, i = !1), this.utils.isFunction(n) && (a = n, n = !0, i = !1), this.utils.isFunction(r) && (a = r, r = this.sidechain.defaultPrivateKey, n = !0, i = !1), a) {\n                e.next = 10;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.sign, t, r, n, i));\n\n            case 10:\n              if (!this.utils.isString(t)) {\n                e.next = 21;\n                break;\n              }\n\n              if (this.utils.isHex(t)) {\n                e.next = 13;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Expected hex message input\"));\n\n            case 13:\n              return e.prev = 13, s = this.sidechain.trx.signString(t, r, n), e.abrupt(\"return\", a(null, s));\n\n            case 18:\n              e.prev = 18, e.t0 = e.catch(13), a(e.t0);\n\n            case 21:\n              if (this.utils.isObject(t)) {\n                e.next = 23;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Invalid transaction provided\"));\n\n            case 23:\n              if (i || !t.signature) {\n                e.next = 25;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Transaction is already signed\"));\n\n            case 25:\n              if (e.prev = 25, i) {\n                e.next = 30;\n                break;\n              }\n\n              if (this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(r)).toLowerCase() === this.sidechain.address.toHex(t.raw_data.contract[0].parameter.value.owner_address)) {\n                e.next = 30;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Private key does not match address in transaction\"));\n\n            case 30:\n              return e.abrupt(\"return\", a(null, this.signTransaction(r, t)));\n\n            case 33:\n              e.prev = 33, e.t1 = e.catch(25), a(e.t1);\n\n            case 36:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[13, 18], [25, 33]]);\n      })), function () {\n        return A.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrx\",\n      value: (I = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (i = c.length > 3 && void 0 !== c[3] ? c[3] : {}, a = c.length > 4 && void 0 !== c[4] ? c[4] : this.mainchain.defaultPrivateKey, s = c.length > 5 && void 0 !== c[5] && c[5], this.utils.isFunction(a) && (s = a, a = this.mainchain.defaultPrivateKey), this.utils.isFunction(i) && (s = i, i = {}), s) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.depositTrx, t, r, n, i, a));\n\n            case 7:\n              if (!this.validator.notValid([{\n                name: \"callValue\",\n                type: \"integer\",\n                value: t,\n                gte: 0\n              }, {\n                name: \"depositFee\",\n                type: \"integer\",\n                value: r,\n                gte: 0\n              }, {\n                name: \"feeLimit\",\n                type: \"integer\",\n                value: n,\n                gte: 0,\n                lte: 5e9\n              }], s)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 9:\n              return i = wt({\n                callValue: Number(t) + Number(r),\n                feeLimit: n\n              }, i), e.prev = 10, e.next = 13, this.mainchain.contract().at(this.mainGatewayAddress);\n\n            case 13:\n              return o = e.sent, e.next = 16, o.depositTRX().send(i, a);\n\n            case 16:\n              return u = e.sent, e.abrupt(\"return\", s(null, u));\n\n            case 20:\n              return e.prev = 20, e.t0 = e.catch(10), e.abrupt(\"return\", s(e.t0));\n\n            case 23:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[10, 20]]);\n      })), function (e, t, r) {\n        return I.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrc10\",\n      value: (w = f()(l.a.mark(function e(t, r, n, i) {\n        var a,\n            s,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (a = d.length > 4 && void 0 !== d[4] ? d[4] : {}, s = d.length > 5 && void 0 !== d[5] ? d[5] : this.mainchain.defaultPrivateKey, o = d.length > 6 && void 0 !== d[6] && d[6], this.utils.isFunction(s) && (o = s, s = this.mainchain.defaultPrivateKey), this.utils.isFunction(a) && (o = a, a = {}), o) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.depositTrc10, t, r, n, i, a, s));\n\n            case 7:\n              if (!this.validator.notValid([{\n                name: \"tokenValue\",\n                type: \"integer\",\n                value: r,\n                gte: 0\n              }, {\n                name: \"depositFee\",\n                type: \"integer\",\n                value: n,\n                gte: 0\n              }, {\n                name: \"feeLimit\",\n                type: \"integer\",\n                value: i,\n                gte: 0,\n                lte: 5e9\n              }, {\n                name: \"tokenId\",\n                type: \"integer\",\n                value: t,\n                gte: 0\n              }], o)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 9:\n              return a = wt(wt({\n                tokenId: t,\n                tokenValue: r,\n                feeLimit: i\n              }, a), {}, {\n                callValue: n\n              }), e.prev = 10, e.next = 13, this.mainchain.contract().at(this.mainGatewayAddress);\n\n            case 13:\n              return u = e.sent, e.next = 16, u.depositTRC10(t, r).send(a, s);\n\n            case 16:\n              c = e.sent, o(null, c), e.next = 23;\n              break;\n\n            case 20:\n              return e.prev = 20, e.t0 = e.catch(10), e.abrupt(\"return\", o(e.t0));\n\n            case 23:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[10, 20]]);\n      })), function (e, t, r, n) {\n        return w.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrc\",\n      value: (x = f()(l.a.mark(function e(t, r, n, i, a) {\n        var s,\n            o,\n            u,\n            c,\n            d,\n            h,\n            f = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (s = f.length > 5 && void 0 !== f[5] ? f[5] : {}, o = f.length > 6 && void 0 !== f[6] ? f[6] : this.mainchain.defaultPrivateKey, u = f.length > 7 && void 0 !== f[7] && f[7], this.utils.isFunction(o) && (u = o, o = this.mainchain.defaultPrivateKey), this.utils.isFunction(s) && (u = s, s = {}), u) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.depositTrc, t, r, n, i, a, s, o));\n\n            case 7:\n              if (!this.validator.notValid([{\n                name: \"functionSelector\",\n                type: \"not-empty-string\",\n                value: t\n              }, {\n                name: \"num\",\n                type: \"integer\",\n                value: r,\n                gte: 0\n              }, {\n                name: \"fee\",\n                type: \"integer\",\n                value: n,\n                gte: 0\n              }, {\n                name: \"feeLimit\",\n                type: \"integer\",\n                value: i,\n                gte: 0,\n                lte: 5e9\n              }, {\n                name: \"contractAddress\",\n                type: \"address\",\n                value: a\n              }], u)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 9:\n              if (s = wt(wt({\n                feeLimit: i\n              }, s), {}, {\n                callValue: n,\n                tokenId: \"\",\n                tokenValue: 0\n              }), e.prev = 10, c = null, \"approve\" !== t) {\n                e.next = 21;\n                break;\n              }\n\n              return e.next = 15, this.mainchain.contract().at(a);\n\n            case 15:\n              return d = e.sent, e.next = 18, d.approve(this.mainGatewayAddress, r).send(s, o);\n\n            case 18:\n              c = e.sent, e.next = 44;\n              break;\n\n            case 21:\n              return e.next = 23, this.mainchain.contract().at(this.mainGatewayAddress);\n\n            case 23:\n              h = e.sent, e.t0 = t, e.next = \"depositTRC20\" === e.t0 ? 27 : \"depositTRC721\" === e.t0 ? 31 : \"retryDeposit\" === e.t0 ? 35 : \"retryMapping\" === e.t0 ? 39 : 43;\n              break;\n\n            case 27:\n              return e.next = 29, h.depositTRC20(a, r).send(s, o);\n\n            case 29:\n              return c = e.sent, e.abrupt(\"break\", 44);\n\n            case 31:\n              return e.next = 33, h.depositTRC721(a, r).send(s, o);\n\n            case 33:\n              return c = e.sent, e.abrupt(\"break\", 44);\n\n            case 35:\n              return e.next = 37, h.retryDeposit(r).send(s, o);\n\n            case 37:\n              return c = e.sent, e.abrupt(\"break\", 44);\n\n            case 39:\n              return e.next = 41, h.retryMapping(r).send(s, o);\n\n            case 41:\n              return c = e.sent, e.abrupt(\"break\", 44);\n\n            case 43:\n              return e.abrupt(\"break\", 44);\n\n            case 44:\n              u(null, c), e.next = 50;\n              break;\n\n            case 47:\n              return e.prev = 47, e.t1 = e.catch(10), e.abrupt(\"return\", u(e.t1));\n\n            case 50:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[10, 47]]);\n      })), function (e, t, r, n, i) {\n        return x.apply(this, arguments);\n      })\n    }, {\n      key: \"approveTrc20\",\n      value: (k = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, a = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, s = u.length > 5 && void 0 !== u[5] && u[5], o = \"approve\", e.abrupt(\"return\", this.depositTrc(o, t, 0, r, n, i, a, s));\n\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return k.apply(this, arguments);\n      })\n    }, {\n      key: \"approveTrc721\",\n      value: (m = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, a = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, s = u.length > 5 && void 0 !== u[5] && u[5], o = \"approve\", e.abrupt(\"return\", this.depositTrc(o, t, 0, r, n, i, a, s));\n\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return m.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrc20\",\n      value: (g = f()(l.a.mark(function e(t, r, n, i) {\n        var a,\n            s,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return a = c.length > 4 && void 0 !== c[4] ? c[4] : {}, s = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, o = c.length > 6 && void 0 !== c[6] && c[6], u = \"depositTRC20\", e.abrupt(\"return\", this.depositTrc(u, t, r, n, i, a, s, o));\n\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, r, n) {\n        return g.apply(this, arguments);\n      })\n    }, {\n      key: \"depositTrc721\",\n      value: (p = f()(l.a.mark(function e(t, r, n, i) {\n        var a,\n            s,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return a = c.length > 4 && void 0 !== c[4] ? c[4] : {}, s = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, o = c.length > 6 && void 0 !== c[6] && c[6], u = \"depositTRC721\", e.abrupt(\"return\", this.depositTrc(u, t, r, n, i, a, s, o));\n\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, r, n) {\n        return p.apply(this, arguments);\n      })\n    }, {\n      key: \"mappingTrc\",\n      value: (v = f()(l.a.mark(function e(t, r, n, i) {\n        var a,\n            s,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (a = d.length > 4 && void 0 !== d[4] ? d[4] : {}, s = d.length > 5 && void 0 !== d[5] ? d[5] : this.mainchain.defaultPrivateKey, o = d.length > 6 ? d[6] : void 0, this.utils.isFunction(s) && (o = s, s = this.mainchain.defaultPrivateKey), this.utils.isFunction(a) && (o = a, a = {}), o) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.mappingTrc, t, r, n, i, a, s));\n\n            case 7:\n              if (!this.validator.notValid([{\n                name: \"trxHash\",\n                type: \"not-empty-string\",\n                value: t\n              }, {\n                name: \"mappingFee\",\n                type: \"integer\",\n                value: r,\n                gte: 0\n              }, {\n                name: \"feeLimit\",\n                type: \"integer\",\n                value: n,\n                gte: 0,\n                lte: 5e9\n              }], o)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 9:\n              return t = t.startsWith(\"0x\") ? t : \"0x\" + t, a = wt(wt({\n                feeLimit: n\n              }, a), {}, {\n                callValue: r\n              }), e.prev = 11, e.next = 14, this.mainchain.contract().at(this.mainGatewayAddress);\n\n            case 14:\n              if (u = e.sent, c = null, \"mappingTRC20\" !== i) {\n                e.next = 22;\n                break;\n              }\n\n              return e.next = 19, u.mappingTRC20(t).send(a, s);\n\n            case 19:\n              c = e.sent, e.next = 29;\n              break;\n\n            case 22:\n              if (\"mappingTRC721\" !== i) {\n                e.next = 28;\n                break;\n              }\n\n              return e.next = 25, u.mappingTRC721(t).send(a, s);\n\n            case 25:\n              c = e.sent, e.next = 29;\n              break;\n\n            case 28:\n              o(new Error(\"type must be trc20 or trc721\"));\n\n            case 29:\n              o(null, c), e.next = 35;\n              break;\n\n            case 32:\n              return e.prev = 32, e.t0 = e.catch(11), e.abrupt(\"return\", o(e.t0));\n\n            case 35:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[11, 32]]);\n      })), function (e, t, r, n) {\n        return v.apply(this, arguments);\n      })\n    }, {\n      key: \"mappingTrc20\",\n      value: (h = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, a = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, s = u.length > 5 && void 0 !== u[5] && u[5], o = \"mappingTRC20\", e.abrupt(\"return\", this.mappingTrc(t, r, n, o, i, a, s));\n\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return h.apply(this, arguments);\n      })\n    }, {\n      key: \"mappingTrc721\",\n      value: (d = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, a = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, s = u.length > 5 && void 0 !== u[5] && u[5], o = \"mappingTRC721\", e.abrupt(\"return\", this.mappingTrc(t, r, n, o, i, a, s));\n\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return d.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrx\",\n      value: (c = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (i = c.length > 3 && void 0 !== c[3] ? c[3] : {}, a = c.length > 4 && void 0 !== c[4] ? c[4] : this.mainchain.defaultPrivateKey, s = c.length > 5 && void 0 !== c[5] && c[5], this.utils.isFunction(a) && (s = a, a = this.mainchain.defaultPrivateKey), this.utils.isFunction(i) && (s = i, i = {}), s) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.withdrawTrx, t, r, n, i, a));\n\n            case 7:\n              if (!this.validator.notValid([{\n                name: \"callValue\",\n                type: \"integer\",\n                value: t,\n                gte: 0\n              }, {\n                name: \"withdrawFee\",\n                type: \"integer\",\n                value: r,\n                gte: 0\n              }, {\n                name: \"feeLimit\",\n                type: \"integer\",\n                value: n,\n                gte: 0,\n                lte: 1e9\n              }], s)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 9:\n              return i = wt({\n                callValue: Number(t) + Number(r),\n                feeLimit: n\n              }, i), e.prev = 10, e.next = 13, this.sidechain.contract().at(this.sideGatewayAddress);\n\n            case 13:\n              return o = e.sent, e.next = 16, o.withdrawTRX().send(i, a);\n\n            case 16:\n              return u = e.sent, e.abrupt(\"return\", s(null, u));\n\n            case 20:\n              return e.prev = 20, e.t0 = e.catch(10), e.abrupt(\"return\", s(e.t0));\n\n            case 23:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[10, 20]]);\n      })), function (e, t, r) {\n        return c.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrc10\",\n      value: (u = f()(l.a.mark(function e(t, r, n, i) {\n        var a,\n            s,\n            o,\n            u,\n            c,\n            d = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (a = d.length > 4 && void 0 !== d[4] ? d[4] : {}, s = d.length > 5 && void 0 !== d[5] ? d[5] : this.mainchain.defaultPrivateKey, o = d.length > 6 && void 0 !== d[6] && d[6], this.utils.isFunction(s) && (o = s, s = this.mainchain.defaultPrivateKey), this.utils.isFunction(a) && (o = a, a = {}), o) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.withdrawTrc10, t, r, n, i, a, s));\n\n            case 7:\n              if (!this.validator.notValid([{\n                name: \"tokenId\",\n                type: \"integer\",\n                value: t,\n                gte: 0\n              }, {\n                name: \"tokenValue\",\n                type: \"integer\",\n                value: r,\n                gte: 0\n              }, {\n                name: \"withdrawFee\",\n                type: \"integer\",\n                value: n,\n                gte: 0\n              }, {\n                name: \"feeLimit\",\n                type: \"integer\",\n                value: i,\n                gte: 0,\n                lte: 1e9\n              }], o)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 9:\n              return a = wt({\n                tokenValue: r,\n                tokenId: t,\n                callValue: n,\n                feeLimit: i\n              }, a), e.prev = 10, e.next = 13, this.sidechain.contract().at(this.sideGatewayAddress);\n\n            case 13:\n              return u = e.sent, e.next = 16, u.withdrawTRC10(t, r).send(a, s);\n\n            case 16:\n              return c = e.sent, e.abrupt(\"return\", o(null, c));\n\n            case 20:\n              return e.prev = 20, e.t0 = e.catch(10), e.abrupt(\"return\", o(e.t0));\n\n            case 23:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[10, 20]]);\n      })), function (e, t, r, n) {\n        return u.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrc\",\n      value: (o = f()(l.a.mark(function e(t, r, n, i, a) {\n        var s,\n            o,\n            u,\n            c,\n            d,\n            h,\n            v,\n            p,\n            g,\n            b,\n            m = this,\n            y = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (s = y.length > 5 && void 0 !== y[5] ? y[5] : {}, o = y.length > 6 && void 0 !== y[6] ? y[6] : this.mainchain.defaultPrivateKey, u = y.length > 7 && void 0 !== y[7] && y[7], this.utils.isFunction(o) && (u = o, o = this.mainchain.defaultPrivateKey), this.utils.isFunction(s) && (u = s, s = {}), u) {\n                e.next = 7;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.withdrawTrc, t, r, n, i, a, s, o));\n\n            case 7:\n              if (!this.validator.notValid([{\n                name: \"functionSelector\",\n                type: \"not-empty-string\",\n                value: t\n              }, {\n                name: \"numOrId\",\n                type: \"integer\",\n                value: r,\n                gte: 0\n              }, {\n                name: \"withdrawFee\",\n                type: \"integer\",\n                value: n,\n                gte: 0\n              }, {\n                name: \"feeLimit\",\n                type: \"integer\",\n                value: i,\n                gte: 0,\n                lte: 1e9\n              }, {\n                name: \"contractAddress\",\n                type: \"address\",\n                value: a\n              }], u)) {\n                e.next = 9;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 9:\n              return s = wt(wt({\n                feeLimit: i\n              }, s), {}, {\n                callValue: n\n              }), c = [{\n                type: \"uint256\",\n                value: r\n              }], e.prev = 11, d = o ? this.sidechain.address.fromPrivateKey(o) : this.sidechain.defaultAddress.base58, e.next = 15, this.sidechain.transactionBuilder.triggerSmartContract(a, t, s, c, this.sidechain.address.toHex(d));\n\n            case 15:\n              if ((h = e.sent).result && h.result.result) {\n                e.next = 18;\n                break;\n              }\n\n              return e.abrupt(\"return\", u(\"Unknown error: \" + JSON.stringify(h.transaction, null, 2)));\n\n            case 18:\n              return e.next = 20, this.sidechain.trx.sign(h.transaction, o);\n\n            case 20:\n              if ((v = e.sent).signature) {\n                e.next = 25;\n                break;\n              }\n\n              if (o) {\n                e.next = 24;\n                break;\n              }\n\n              return e.abrupt(\"return\", u(\"Transaction was not signed properly\"));\n\n            case 24:\n              return e.abrupt(\"return\", u(\"Invalid private key provided\"));\n\n            case 25:\n              return e.next = 27, this.sidechain.trx.sendRawTransaction(v);\n\n            case 27:\n              if (!(p = e.sent).code) {\n                e.next = 32;\n                break;\n              }\n\n              return g = {\n                error: p.code,\n                message: p.code\n              }, p.message && (g.message = this.sidechain.toUtf8(p.message)), e.abrupt(\"return\", u(g));\n\n            case 32:\n              if (s.shouldPollResponse) {\n                e.next = 34;\n                break;\n              }\n\n              return e.abrupt(\"return\", u(null, v.txID));\n\n            case 34:\n              (b = function () {\n                var e = f()(l.a.mark(function e() {\n                  var t,\n                      r,\n                      n,\n                      i = arguments;\n                  return l.a.wrap(function (e) {\n                    for (;;) switch (e.prev = e.next) {\n                      case 0:\n                        if (20 != (t = i.length > 0 && void 0 !== i[0] ? i[0] : 0)) {\n                          e.next = 3;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", u({\n                          error: \"Cannot find result in solidity node\",\n                          transaction: v\n                        }));\n\n                      case 3:\n                        return e.next = 5, m.sidechain.trx.getTransactionInfo(v.txID);\n\n                      case 5:\n                        if (r = e.sent, Object.keys(r).length) {\n                          e.next = 8;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", setTimeout(function () {\n                          b(t + 1);\n                        }, 3e3));\n\n                      case 8:\n                        if (!r.result || \"FAILED\" != r.result) {\n                          e.next = 10;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", u({\n                          error: m.sidechain.toUtf8(r.resMessage),\n                          transaction: v,\n                          output: r\n                        }));\n\n                      case 10:\n                        if (m.utils.hasProperty(r, \"contractResult\")) {\n                          e.next = 12;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", u({\n                          error: \"Failed to execute: \" + JSON.stringify(r, null, 2),\n                          transaction: v,\n                          output: r\n                        }));\n\n                      case 12:\n                        if (!s.rawResponse) {\n                          e.next = 14;\n                          break;\n                        }\n\n                        return e.abrupt(\"return\", u(null, r));\n\n                      case 14:\n                        return 1 === (n = decodeOutput(m.outputs, \"0x\" + r.contractResult[0])).length && (n = n[0]), e.abrupt(\"return\", u(null, n));\n\n                      case 17:\n                      case \"end\":\n                        return e.stop();\n                    }\n                  }, e);\n                }));\n                return function () {\n                  return e.apply(this, arguments);\n                };\n              }())(), e.next = 41;\n              break;\n\n            case 38:\n              return e.prev = 38, e.t0 = e.catch(11), e.abrupt(\"return\", u(e.t0));\n\n            case 41:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[11, 38]]);\n      })), function (e, t, r, n, i) {\n        return o.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrc20\",\n      value: (s = f()(l.a.mark(function e(t, r, n, i, a) {\n        var s,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return s = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, o = c.length > 6 && void 0 !== c[6] && c[6], u = \"withdrawal(uint256)\", e.abrupt(\"return\", this.withdrawTrc(u, t, r, n, i, a, s, o));\n\n            case 4:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, r, n, i) {\n        return s.apply(this, arguments);\n      })\n    }, {\n      key: \"withdrawTrc721\",\n      value: (a = f()(l.a.mark(function e(t, r, n, i, a) {\n        var s,\n            o,\n            u,\n            c = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return s = c.length > 5 && void 0 !== c[5] ? c[5] : this.mainchain.defaultPrivateKey, o = c.length > 6 && void 0 !== c[6] && c[6], u = \"withdrawal(uint256)\", e.abrupt(\"return\", this.withdrawTrc(u, t, r, n, i, a, s, o));\n\n            case 4:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, r, n, i) {\n        return a.apply(this, arguments);\n      })\n    }, {\n      key: \"injectFund\",\n      value: (i = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u,\n            c,\n            d,\n            h,\n            f = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (i = f.length > 3 && void 0 !== f[3] ? f[3] : this.mainchain.defaultPrivateKey, a = f.length > 4 && void 0 !== f[4] && f[4], this.utils.isFunction(i) && (a = i, i = this.mainchain.defaultPrivateKey), this.utils.isFunction(n) && (a = n, n = {}), a) {\n                e.next = 6;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.injectFund, t, r, n, i));\n\n            case 6:\n              if (!this.validator.notValid([{\n                name: \"num\",\n                type: \"integer\",\n                value: t,\n                gte: 0\n              }, {\n                name: \"feeLimit\",\n                type: \"integer\",\n                value: r,\n                gte: 0,\n                lte: 1e9\n              }], a)) {\n                e.next = 8;\n                break;\n              }\n\n              return e.abrupt(\"return\");\n\n            case 8:\n              return e.prev = 8, s = this.sidechain.address.fromPrivateKey(i), o = this.sidechain.address.toHex(s), e.next = 13, this.sidechain.fullNode.request(\"/wallet/fundinject\", {\n                owner_address: o,\n                amount: t\n              }, \"post\");\n\n            case 13:\n              return u = e.sent, e.next = 16, this.sidechain.trx.sign(u, i);\n\n            case 16:\n              if ((c = e.sent).signature) {\n                e.next = 21;\n                break;\n              }\n\n              if (i) {\n                e.next = 20;\n                break;\n              }\n\n              return e.abrupt(\"return\", a(\"Transaction was not signed properly\"));\n\n            case 20:\n              return e.abrupt(\"return\", a(\"Invalid private key provided\"));\n\n            case 21:\n              return e.next = 23, this.sidechain.trx.sendRawTransaction(c);\n\n            case 23:\n              if (!(d = e.sent).code) {\n                e.next = 28;\n                break;\n              }\n\n              return h = {\n                error: d.code,\n                message: d.code\n              }, d.message && (h.message = this.mainchain.toUtf8(d.message)), e.abrupt(\"return\", a(h));\n\n            case 28:\n              return e.abrupt(\"return\", a(null, c.txID));\n\n            case 31:\n              return e.prev = 31, e.t0 = e.catch(8), e.abrupt(\"return\", a(e.t0));\n\n            case 34:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[8, 31]]);\n      })), function (e, t, r) {\n        return i.apply(this, arguments);\n      })\n    }, {\n      key: \"retryWithdraw\",\n      value: (n = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, a = u.length > 4 && void 0 !== u[4] ? u[4] : this.sidechain.defaultPrivateKey, s = u.length > 5 && void 0 !== u[5] && u[5], o = \"retryWithdraw(uint256)\", e.abrupt(\"return\", this.withdrawTrc(o, t, r, n, this.sideGatewayAddress, i, a, s));\n\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, r) {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"retryDeposit\",\n      value: (r = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, a = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, s = u.length > 5 && void 0 !== u[5] && u[5], o = \"retryDeposit\", e.abrupt(\"return\", this.depositTrc(o, t, r, n, this.mainGatewayAddress, i, a, s));\n\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, t, n) {\n        return r.apply(this, arguments);\n      })\n    }, {\n      key: \"retryMapping\",\n      value: (t = f()(l.a.mark(function e(t, r, n) {\n        var i,\n            a,\n            s,\n            o,\n            u = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return i = u.length > 3 && void 0 !== u[3] ? u[3] : {}, a = u.length > 4 && void 0 !== u[4] ? u[4] : this.mainchain.defaultPrivateKey, s = u.length > 5 && void 0 !== u[5] && u[5], o = \"retryMapping\", e.abrupt(\"return\", this.depositTrc(o, t, r, n, this.mainGatewayAddress, i, a, s));\n\n            case 5:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function (e, r, n) {\n        return t.apply(this, arguments);\n      })\n    }]), e;\n  }();\n\n  function At(e) {\n    var t = function () {\n      if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n      if (Reflect.construct.sham) return !1;\n      if (\"function\" == typeof Proxy) return !0;\n\n      try {\n        return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;\n      } catch (e) {\n        return !1;\n      }\n    }();\n\n    return function () {\n      var r,\n          n = S()(e);\n\n      if (t) {\n        var i = S()(this).constructor;\n        r = Reflect.construct(n, arguments, i);\n      } else r = n.apply(this, arguments);\n\n      return P()(this, r);\n    };\n  }\n\n  var Pt = function (e) {\n    I()(a, e);\n    var t,\n        r,\n        n,\n        i = At(a);\n\n    function a() {\n      var e,\n          t,\n          r = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n          n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n          s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n          o = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],\n          u = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];\n      b()(this, a), e = i.call(this);\n      var c = !1,\n          d = !1;\n      return \"object\" === p()(r) && (r.fullNode || r.fullHost) ? (t = r.fullNode || r.fullHost, o = n, n = r.solidityNode || r.fullHost, s = r.eventServer || r.fullHost, c = r.headers || !1, d = r.eventHeaders || c, u = r.privateKey) : t = r, Re.isString(t) && (t = new He.HttpProvider(t)), Re.isString(n) && (n = new He.HttpProvider(n)), Re.isString(s) && (s = new He.HttpProvider(s)), e.event = new kt(x()(e)), e.transactionBuilder = new st(x()(e)), e.trx = new dt(x()(e)), e.plugin = new bt(x()(e), r), e.utils = Re, e.setFullNode(t), e.setSolidityNode(n), e.setEventServer(s), e.providers = He, e.BigNumber = qe.a, e.defaultBlock = !1, e.defaultPrivateKey = !1, e.defaultAddress = {\n        hex: !1,\n        base58: !1\n      }, [\"sha3\", \"toHex\", \"toUtf8\", \"fromUtf8\", \"toAscii\", \"fromAscii\", \"toDecimal\", \"fromDecimal\", \"toSun\", \"fromSun\", \"toBigNumber\", \"isAddress\", \"createAccount\", \"address\", \"version\"].forEach(function (t) {\n        e[t] = a[t];\n      }), \"object\" === p()(o) && (o.fullNode || o.fullHost) ? e.sidechain = new It(o, a, x()(e), u) : u = u || o, u && e.setPrivateKey(u), e.fullnodeVersion = \"3.5.0\", e.feeLimit = 15e7, e.injectPromise = Je()(x()(e)), c && e.setFullNodeHeader(c), d && e.setEventHeader(d), e;\n    }\n\n    return y()(a, [{\n      key: \"getFullnodeVersion\",\n      value: (n = f()(l.a.mark(function e() {\n        var t;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return e.prev = 0, e.next = 3, this.trx.getNodeInfo();\n\n            case 3:\n              t = e.sent, this.fullnodeVersion = t.configNodeInfo.codeVersion, 2 === this.fullnodeVersion.split(\".\").length && (this.fullnodeVersion += \".0\"), e.next = 11;\n              break;\n\n            case 8:\n              e.prev = 8, e.t0 = e.catch(0), this.fullnodeVersion = \"3.5.0\";\n\n            case 11:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this, [[0, 8]]);\n      })), function () {\n        return n.apply(this, arguments);\n      })\n    }, {\n      key: \"setDefaultBlock\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if ([!1, \"latest\", \"earliest\", 0].includes(e)) return this.defaultBlock = e;\n        if (!Re.isInteger(e) || !e) throw new Error(\"Invalid block ID provided\");\n        this.defaultBlock = Math.abs(e);\n      }\n    }, {\n      key: \"setPrivateKey\",\n      value: function (e) {\n        try {\n          this.setAddress(this.address.fromPrivateKey(e));\n        } catch (e) {\n          throw new Error(\"Invalid private key provided\");\n        }\n\n        this.defaultPrivateKey = e, this.emit(\"privateKeyChanged\", e);\n      }\n    }, {\n      key: \"setAddress\",\n      value: function (e) {\n        if (!this.isAddress(e)) throw new Error(\"Invalid address provided\");\n        var t = this.address.toHex(e),\n            r = this.address.fromHex(e);\n        this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== r && (this.defaultPrivateKey = !1), this.defaultAddress = {\n          hex: t,\n          base58: r\n        }, this.emit(\"addressChanged\", {\n          hex: t,\n          base58: r\n        });\n      }\n    }, {\n      key: \"fullnodeSatisfies\",\n      value: function (e) {\n        return Me.a.satisfies(this.fullnodeVersion, e);\n      }\n    }, {\n      key: \"isValidProvider\",\n      value: function (e) {\n        return Object.values(He).some(function (t) {\n          return e instanceof t;\n        });\n      }\n    }, {\n      key: \"setFullNode\",\n      value: function (e) {\n        if (Re.isString(e) && (e = new He.HttpProvider(e)), !this.isValidProvider(e)) throw new Error(\"Invalid full node provided\");\n        this.fullNode = e, this.fullNode.setStatusPage(\"wallet/getnowblock\"), this.getFullnodeVersion();\n      }\n    }, {\n      key: \"setSolidityNode\",\n      value: function (e) {\n        if (Re.isString(e) && (e = new He.HttpProvider(e)), !this.isValidProvider(e)) throw new Error(\"Invalid solidity node provided\");\n        this.solidityNode = e, this.solidityNode.setStatusPage(\"walletsolidity/getnowblock\");\n      }\n    }, {\n      key: \"setEventServer\",\n      value: function () {\n        var e;\n        (e = this.event).setServer.apply(e, arguments);\n      }\n    }, {\n      key: \"setHeader\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = new He.HttpProvider(this.fullNode.host, 3e4, !1, !1, e),\n            r = new He.HttpProvider(this.solidityNode.host, 3e4, !1, !1, e),\n            n = new He.HttpProvider(this.eventServer.host, 3e4, !1, !1, e);\n        this.setFullNode(t), this.setSolidityNode(r), this.setEventServer(n);\n      }\n    }, {\n      key: \"setFullNodeHeader\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = new He.HttpProvider(this.fullNode.host, 3e4, !1, !1, e),\n            r = new He.HttpProvider(this.solidityNode.host, 3e4, !1, !1, e);\n        this.setFullNode(t), this.setSolidityNode(r);\n      }\n    }, {\n      key: \"setEventHeader\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},\n            t = new He.HttpProvider(this.eventServer.host, 3e4, !1, !1, e);\n        this.setEventServer(t);\n      }\n    }, {\n      key: \"currentProviders\",\n      value: function () {\n        return {\n          fullNode: this.fullNode,\n          solidityNode: this.solidityNode,\n          eventServer: this.eventServer\n        };\n      }\n    }, {\n      key: \"currentProvider\",\n      value: function () {\n        return this.currentProviders();\n      }\n    }, {\n      key: \"getEventResult\",\n      value: function () {\n        for (var e, t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];\n\n        return \"object\" !== p()(r[1]) && (r[1] = {\n          sinceTimestamp: r[1] || 0,\n          eventName: r[2] || !1,\n          blockNumber: r[3] || !1,\n          size: r[4] || 20,\n          page: r[5] || 1\n        }, r.splice(2, 4), Re.isFunction(r[2]) || (Re.isFunction(r[1].page) ? (r[2] = r[1].page, r[1].page = 1) : Re.isFunction(r[1].size) && (r[2] = r[1].size, r[1].size = 20, r[1].page = 1))), (e = this.event).getEventsByContractAddress.apply(e, r);\n      }\n    }, {\n      key: \"getEventByTransactionID\",\n      value: function () {\n        var e;\n        return (e = this.event).getEventsByTransactionID.apply(e, arguments);\n      }\n    }, {\n      key: \"contract\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],\n            t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n        return new gt(this, e, t);\n      }\n    }, {\n      key: \"isConnected\",\n      value: (r = f()(l.a.mark(function e() {\n        var t,\n            r = arguments;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              if (t = r.length > 0 && void 0 !== r[0] && r[0]) {\n                e.next = 3;\n                break;\n              }\n\n              return e.abrupt(\"return\", this.injectPromise(this.isConnected));\n\n            case 3:\n              return e.t0 = t, e.next = 6, this.fullNode.isConnected();\n\n            case 6:\n              return e.t1 = e.sent, e.next = 9, this.solidityNode.isConnected();\n\n            case 9:\n              if (e.t2 = e.sent, e.t3 = this.eventServer, !e.t3) {\n                e.next = 15;\n                break;\n              }\n\n              return e.next = 14, this.eventServer.isConnected();\n\n            case 14:\n              e.t3 = e.sent;\n\n            case 15:\n              return e.t4 = e.t3, e.t5 = {\n                fullNode: e.t1,\n                solidityNode: e.t2,\n                eventServer: e.t4\n              }, e.abrupt(\"return\", (0, e.t0)(null, e.t5));\n\n            case 18:\n            case \"end\":\n              return e.stop();\n          }\n        }, e, this);\n      })), function () {\n        return r.apply(this, arguments);\n      })\n    }], [{\n      key: \"sha3\",\n      value: function (e) {\n        var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];\n        return (t ? \"0x\" : \"\") + ie(Buffer.from(e, \"utf-8\")).toString().substring(2);\n      }\n    }, {\n      key: \"toHex\",\n      value: function (e) {\n        if (Re.isBoolean(e)) return a.fromDecimal(+e);\n        if (Re.isBigNumber(e)) return a.fromDecimal(e);\n        if (\"object\" === p()(e)) return a.fromUtf8(JSON.stringify(e));\n\n        if (Re.isString(e)) {\n          if (/^(-|)0x/.test(e)) return e;\n          if (!isFinite(e) || /^\\s*$/.test(e)) return a.fromUtf8(e);\n        }\n\n        var t = a.fromDecimal(e);\n        if (\"0xNaN\" === t) throw new Error(\"The passed value is not convertible to a hex string\");\n        return t;\n      }\n    }, {\n      key: \"toUtf8\",\n      value: function (e) {\n        if (Re.isHex(e)) return e = e.replace(/^0x/, \"\"), Buffer.from(e, \"hex\").toString(\"utf8\");\n        throw new Error(\"The passed value is not a valid hex string\");\n      }\n    }, {\n      key: \"fromUtf8\",\n      value: function (e) {\n        if (!Re.isString(e)) throw new Error(\"The passed value is not a valid utf-8 string\");\n        return \"0x\" + Buffer.from(e, \"utf8\").toString(\"hex\");\n      }\n    }, {\n      key: \"toAscii\",\n      value: function (e) {\n        if (Re.isHex(e)) {\n          var t = \"\",\n              r = 0,\n              n = e.length;\n\n          for (\"0x\" === e.substring(0, 2) && (r = 2); r < n; r += 2) {\n            var i = parseInt(e.substr(r, 2), 16);\n            t += String.fromCharCode(i);\n          }\n\n          return t;\n        }\n\n        throw new Error(\"The passed value is not a valid hex string\");\n      }\n    }, {\n      key: \"fromAscii\",\n      value: function (e, t) {\n        if (!Re.isString(e)) throw new Error(\"The passed value is not a valid utf-8 string\");\n        return \"0x\" + Buffer.from(e, \"ascii\").toString(\"hex\").padEnd(t, \"0\");\n      }\n    }, {\n      key: \"toDecimal\",\n      value: function (e) {\n        return a.toBigNumber(e).toNumber();\n      }\n    }, {\n      key: \"fromDecimal\",\n      value: function (e) {\n        var t = a.toBigNumber(e),\n            r = t.toString(16);\n        return t.isLessThan(0) ? \"-0x\" + r.substr(1) : \"0x\" + r;\n      }\n    }, {\n      key: \"fromSun\",\n      value: function (e) {\n        var t = a.toBigNumber(e).div(1e6);\n        return Re.isBigNumber(e) ? t : t.toString(10);\n      }\n    }, {\n      key: \"toSun\",\n      value: function (e) {\n        var t = a.toBigNumber(e).times(1e6);\n        return Re.isBigNumber(e) ? t : t.toString(10);\n      }\n    }, {\n      key: \"toBigNumber\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\n        return Re.isBigNumber(e) ? e : Re.isString(e) && /^(-|)0x/.test(e) ? new qe.a(e.replace(\"0x\", \"\"), 16) : new qe.a(e.toString(10), 10);\n      }\n    }, {\n      key: \"isAddress\",\n      value: function () {\n        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n        if (!Re.isString(e)) return !1;\n        if (42 === e.length) try {\n          return a.isAddress(Re.crypto.getBase58CheckAddress(Re.code.hexStr2byteArray(e)));\n        } catch (e) {\n          return !1;\n        }\n\n        try {\n          return Re.crypto.isAddressValid(e);\n        } catch (e) {\n          return !1;\n        }\n      }\n    }, {\n      key: \"createAccount\",\n      value: (t = f()(l.a.mark(function e() {\n        var t;\n        return l.a.wrap(function (e) {\n          for (;;) switch (e.prev = e.next) {\n            case 0:\n              return t = Re.accounts.generateAccount(), e.abrupt(\"return\", t);\n\n            case 2:\n            case \"end\":\n              return e.stop();\n          }\n        }, e);\n      })), function () {\n        return t.apply(this, arguments);\n      })\n    }, {\n      key: \"address\",\n      get: function () {\n        return {\n          fromHex: function (e) {\n            return Re.isHex(e) ? Re.crypto.getBase58CheckAddress(Re.code.hexStr2byteArray(e.replace(/^0x/, \"41\"))) : e;\n          },\n          toHex: function (e) {\n            return Re.isHex(e) ? e.toLowerCase().replace(/^0x/, \"41\") : Re.code.byteArray2hexStr(Re.crypto.decodeBase58Address(e)).toLowerCase();\n          },\n          fromPrivateKey: function (e) {\n            try {\n              return Re.crypto.pkToAddress(e);\n            } catch (e) {\n              return !1;\n            }\n          }\n        };\n      }\n    }]), a;\n  }(Le.a);\n\n  N()(Pt, \"providers\", He), N()(Pt, \"BigNumber\", qe.a), N()(Pt, \"TransactionBuilder\", st), N()(Pt, \"Trx\", dt), N()(Pt, \"Contract\", gt), N()(Pt, \"Plugin\", bt), N()(Pt, \"Event\", kt), N()(Pt, \"version\", Ue.a), N()(Pt, \"utils\", Re);\n}]).default;","map":{"version":3,"mappings":"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","names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","require","Base64","this","_keyStr","encode","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","input","length","charCodeAt","isNaN","e","charAt","encodeIgnoreUtf8","inputBytes","decode","replace","indexOf","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","byteArray","Array","utftext","_utf8_encode","string","c2","c3","byte2hexStr","byte","Error","str","bytesToString","arr","one","toString","v","match","bytesLength","store","slice","st","parseInt","hextoString","hex","split","out","tmp","concat","byteArray2hexStr","base64DecodeFromString","string64","base64EncodeToString","bytes","ADDRESS_PREFIX_REGEX","bin2String","array","arrayEquals","array1","array2","strict","JSON","stringify","stringToBytes","len","push","hexChar2byte","isHexChar","hexStr2byteArray","j","k","strToDate","test","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","Date","isNumber","getStringType","ALPHABET","ALPHABET_MAP","encode58","buffer","digits","carry","reverse","map","digit","join","decode58","keccak256","utils","sha256","toUtf8Bytes","toUtf8String","recoverAddress","SigningKey","AbiCoder","getBase58CheckAddress","addressBytes","hash0","SHA256","checkSum","decodeBase58Address","base58Sting","address","offset","checkSum1","signTransaction","priKeyBytes","transaction","signature","ECKeySign","txID","isArray","includes","arrayToBase64String","a","btoa","R","signBytes","privateKey","contents","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","getRawData","serializeBinary","genPriKey","priKeyHex","EC","genKeyPair","getPrivate","computeAddress","pubBytes","substring","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","hash1","isAddressValid","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","pubkey","keyFromPrivate","getPublic","x","y","xHex","yHex","hashBytes","sign","id","recoveryParam","rHex","sHex","msgBytes","msgHex","passwordToAddress","password","pkToAddress","generateAccount","pubKeyBytes","publicKey","base58","abiCoder","decodeParams","names","types","ignoreMethodHash","type","reduce","obj","arg","index","substr","toLowerCase","encodeParams","values","TronWeb","toHex","Re","isValidURL","url","validator","isURL","protocols","require_tld","isObject","isJson","parse","ex","isBoolean","bool","isBigNumber","number","BigNumber","constructor","isString","isFunction","isHex","isInteger","Number","hasProperty","hasProperties","properties","arguments","mapEvent","event","data","block","block_number","timestamp","block_timestamp","contract","contract_address","event_name","transaction_id","result","resourceNode","resource_Node","_unconfirmed","unconfirmed","_fingerprint","fingerprint","parseEvent","abi","inputs","padLeft","padding","amount","res","isNotNullOrUndefined","val","sleep","millis","Promise","setTimeout","resolve","code","accounts","crypto","ethersUtils","He","HttpProvider","host","timeout","user","headers","statusPage","b","instance","axios","baseURL","auth","request","then","payload","method","keys","params","self","Validator","tronWeb","param","msg","callback","Function","normalized","no","gt","lt","gte","lte","optional","se","isAddress","notPositive","notEqual","invalid","fromUtf8","resultManager","message","toUtf8","TransactionBuilder","injectPromise","injectpromise","to","from","defaultAddress","options","sendTrx","notValid","to_address","owner_address","permissionId","Permission_id","fullNode","err","tokenID","sendToken","asset_name","issuerAddress","buyer","purchaseToken","duration","resource","receiverAddress","undefined","freezeBalance","frozen_balance","frozen_duration","receiver_address","unfreezeBalance","withdrawBlockRewards","applyForSR","votes","voterAddress","vote","entries","srAddress","voteCount","vote_address","vote_count","createSmartContract","feeLimit","userFeePercentage","originEnergyLimit","callValue","tokenValue","tokenId","token_id","bytecode","f","parameters","entrys","payable","some","func","stateMutability","rawParameter","constructorParams","find","it","args","fee_limit","call_value","consume_user_resource_percent","origin_energy_limit","parameter","call_token_value","splice","_triggerSmartContract","_isConstant","triggerSmartContract","confirmed","contractAddress","functionSelector","assign","g","shieldedParameter","function_selector","ownerAddress","clearABI","trx","cache","contracts","brokerage","updateBrokerage","createToken","abbreviation","description","totalSupply","trxRatio","tokenRatio","saleStart","now","saleEnd","freeBandwidth","freeBandwidthLimit","I","frozenAmount","P","frozenDuration","S","voteScore","precision","abbr","total_supply","trx_num","num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","frozen_supply","frozen_amount","frozen_days","fullnodeSatisfies","vote_score","accountName","updateAccount","account_name","accountId","setAccountId","startsWith","account_id","updateToken","u","new_limit","new_public_limit","createProposal","proposalID","deleteProposal","proposal_id","isApproval","voteProposal","is_add_approval","tokenName","tokenBalance","trxBalance","createTRXExchange","first_token_id","first_token_balance","second_token_id","second_token_balance","resources","firstTokenName","firstTokenBalance","secondTokenName","secondTokenBalance","createTokenExchange","exchangeID","tokenAmount","injectExchangeTokens","exchange_id","quant","withdrawExchangeTokens","tokenAmountSold","tokenAmountExpected","tradeExchangeTokens","fromAscii","expected","updateSetting","updateEnergyLimit","permissions","permission_name","threshold","weight","operations","ownerPermissions","witnessPermissions","activesPermissions","updateAccountPermissions","checkPermissions","activesPermission","owner","witness","actives","newTxID","newTransaction","visible","alterTransaction","dataFormat","raw_data","extension","expiration","extendExpiration","addUpdateData","Trx","token","getCurrentBlock","getConfirmedCurrentBlock","solidityNode","defaultBlock","getBlockByHash","getBlockByNumber","getBlock","blockHash","blockID","getBlockTransactionCount","transactions","getTransactionFromBlock","transactionID","getTransaction","getConfirmedTransaction","_getTransactionInfoById","limit","getTransactionsRelated","getTransactionsToAddress","getTransactionsFromAddress","direction","all","tx","sort","t0","account","getAccount","getAccountById","getAccountInfoById","getBalance","balance","getUnconfirmedAccount","getUnconfirmedAccountById","getUnconfirmedBalance","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getBandwidth","assetIssue","tokens","_parseToken","getTokensIssuedByAddress","getTokenFromID","listNodes","nodes","port","start","end","startNum","endNum","getBlockRange","listSuperRepresentatives","witnesses","listTokens","timeUntilNextVoteCycle","Math","floor","getContract","useTronHeader","verifyMessage","verifySignature","defaultPrivateKey","multisig","signatureHex","signString","fromPrivateKey","t1","multiSign","getSignWeight","signWeight","foundKey","permission","approved_list","getApprovedList","signedTransaction","sendRawTransaction","sendTransaction","ut","transactionBuilder","proposal","getProposal","listProposals","proposals","getChainParameters","chainParameter","getAccountResources","exchange","getExchangeByID","listExchanges","exchanges","listExchangesPaginated","getNodeInfo","info","getTokenListByName","getTokenByID","_getReward","_getBrokerage","reward","messageBytes","messageDigest","recovered","tronAddress","base58Address","fromHex","toHexString","signingKey","signDigest","getParamTypes","decodeOutput","filter","Method","outputs","getFunctionSelector","sha3","defaultOptions","shouldPollResponse","forEach","methodArgs","_call","send","_send","watch","_watch","deployed","ht","constant_result","msg2","chunk","broadcast","error","checkResult","getTransactionInfo","resMessage","rawResponse","decoded","contractResult","keepTxID","eventServer","listener","lastBlock","since","getEvents","eventName","blockNumber","filters","onlyUnconfirmed","onlyConfirmed","getEventsByContractAddress","events","latestEvent","newEvents","priorEvent","reject","bindListener","clearInterval","setInterval","stop","Contract","eventListener","methods","methodInstances","props","loadAbi","eventCallback","_getEvents","console","__proto__","prop","methodCall","onMethod","methodName","inputData","decodeInput","at","startCallback","_startEventListener","_stopEventListener","Plugin","pluginNoOverride","disablePlugins","pluginInterface","requires","components","libs","plugged","skipped","plugin","semver","satisfies","version","fullClass","className","classInstanceName","component","Event","healthcheck","providers","isValidProvider","isConnected","sinceTimestamp","size","page","fromTimestamp","previousLastEventFingerprint","previousFingerprint","routeParams","warn","qs","only_confirmed","only_unconfirmed","querystring","response","getEventsByTransactionID","SideChain","sideOptions","mainchain","fullHost","mainGatewayAddress","sideGatewayAddress","sideChainId","sidechain","setMainGatewayAddress","setSideGatewayAddress","setChainId","chainId","chainIdByteArr","byteArr","byteArrHash","depositFee","depositTrx","wt","contractInstance","depositTRX","depositTrc10","depositTRC10","fee","depositTrc","approveInstance","approve","depositTRC20","depositTRC721","retryDeposit","retryMapping","trxHash","mappingFee","mappingTrc","mappingTRC20","mappingTRC721","withdrawFee","withdrawTrx","withdrawTRX","withdrawTrc10","withdrawTRC10","numOrId","withdrawTrc","injectFund","hexAddress","nonce","retryWithdrawFee","retryDepositFee","retryMappingFee","eventHeaders","setFullNode","setSolidityNode","setEventServer","setPrivateKey","fullnodeVersion","setFullNodeHeader","setEventHeader","nodeInfo","configNodeInfo","codeVersion","abs","setAddress","emit","provider","knownProvider","setStatusPage","getFullnodeVersion","setServer","apply","currentProviders","prefix","Buffer","fromDecimal","isFinite","padEnd","toBigNumber","toNumber","isLessThan","sun","div","times","EventEmitter"],"sourceRoot":"","sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"injectpromise\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"ethers\"","webpack:///external \"bignumber.js\"","webpack:///external \"@babel/runtime/helpers/assertThisInitialized\"","webpack:///external \"semver\"","webpack:///external \"elliptic\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"axios\"","webpack:///external \"validator\"","webpack:///external \"eventemitter3\"","webpack:///external \"querystring\"","webpack:///src/utils/base64.js","webpack:///src/utils/bytes.js","webpack:///src/utils/address.js","webpack:///src/utils/code.js","webpack:///src/utils/base58.js","webpack:///src/utils/ethersUtils.js","webpack:///src/utils/crypto.js","webpack:///src/utils/accounts.js","webpack:///src/utils/abi.js","webpack:///src/utils/index.js","webpack:///src/lib/providers/index.js","webpack:///src/lib/providers/HttpProvider.js","webpack:///src/lib/transactionBuilder.js","webpack:///src/paramValidator/index.js","webpack:///src/lib/trx.js","webpack:///src/lib/contract/method.js","webpack:///src/lib/contract/index.js","webpack:///src/lib/plugin.js","webpack:///src/lib/event.js","webpack:///src/lib/sidechain.js","webpack:///src/index.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"injectpromise\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"ethers\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"semver\");","module.exports = require(\"elliptic\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"axios\");","module.exports = require(\"validator\");","module.exports = require(\"eventemitter3\");","module.exports = require(\"querystring\");","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = this._keyStr.indexOf(input.charAt(i++));\n            enc2 = this._keyStr.indexOf(input.charAt(i++));\n            enc3 = this._keyStr.indexOf(input.charAt(i++));\n            enc4 = this._keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n\n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = 0;\n        let c2 = 0;\n        let c3 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}\n","import {Base64} from './base64';\n\nexport function byte2hexStr(byte) {\n    if (typeof byte !== 'number')\n        throw new Error('Input must be a number');\n\n    if (byte < 0 || byte > 255)\n        throw new Error('Input must be a byte');\n\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n\n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.replace(/^0x/, '').split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n\n    return str;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n","export const ADDRESS_SIZE = 34;\nexport const ADDRESS_PREFIX = \"41\";\nexport const ADDRESS_PREFIX_BYTE = 0x41;\nexport const ADDRESS_PREFIX_REGEX = /^(41)/;\n","import {\n    byte2hexStr,\n    bytesToString,\n    hextoString,\n    byteArray2hexStr,\n    base64DecodeFromString,\n    base64EncodeToString\n} from './bytes';\n\nexport function bin2String(array) {\n    // TODO Do we need this alias?\n    return bytesToString(array);\n}\n\nexport function arrayEquals(array1, array2, strict) {\n    if (array1.length != array2.length)\n        return false;\n\n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (strict) {\n            if (array1[i] != array2[i])\n                return false;\n        } else if (JSON.stringify(array1[i]) != JSON.stringify(array2[i]))\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport {byte2hexStr, bytesToString, hextoString, byteArray2hexStr, base64DecodeFromString, base64EncodeToString}\n\nexport function hexChar2byte(c) {\n    let d;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n\n    if (typeof d === 'number')\n        return d;\n    else\n        throw new Error('The passed hex char is not a valid hex char');\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    if (typeof str !== 'string')\n        throw new Error('The passed string is not a string')\n\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        } else\n            throw new Error('The passed hex char is not a valid hex string')\n    }\n\n    return byteArray;\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n\n    if (!/^\\d{4}-\\d{2}-\\d{2}( \\d{2}-\\d{2}-\\d{2}|)/.test(str))\n        throw new Error('The passed date string is not valid')\n\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10);\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n\n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    // TODO Should we return 1 if someone passes a full, 42-chars long address?\n    // if (str.length == 42 && /^41/.test(str)) {\n    //     for (; i < 40; i++) {\n    //         var c = str.charAt(i+2);\n    //\n    //         if (!isHexChar(c))\n    //             break;\n    //     }\n    // } else\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; // All Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; // At least one visible character\n    }\n\n    return -1;\n}\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0)\n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++)\n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++)\n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0)\n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++)\n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}\n","import { utils } from \"ethers\";\n\nconst keccak256 = utils.keccak256;\nconst sha256 = utils.sha256;\nconst toUtf8Bytes = utils.toUtf8Bytes;\nconst toUtf8String = utils.toUtf8String;\nconst recoverAddress = utils.recoverAddress;\nconst SigningKey = utils.SigningKey;\nconst AbiCoder = utils.AbiCoder;\n\nexport {\n    keccak256,\n    sha256,\n    toUtf8Bytes,\n    toUtf8String,\n    recoverAddress,\n    SigningKey,\n    AbiCoder,\n};\n","import {ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE, ADDRESS_SIZE} from './address';\nimport {base64EncodeToString} from './code';\nimport {base64DecodeFromString, hexStr2byteArray} from './code';\nimport {encode58, decode58} from './base58';\nimport {byte2hexStr, byteArray2hexStr} from './bytes';\nimport {ec as EC} from 'elliptic';\nimport {keccak256, sha256} from './ethersUtils';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    throw new Error('Invalid address provided');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    if (Array.isArray(transaction.signature)) {\n        if (!transaction.signature.includes(signature))\n            transaction.signature.push(signature);\n    } else\n        transaction.signature = [signature];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString().substring(2);\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n\n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n\n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n\n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const msgHex = byteArray2hexStr(msgBytes);\n    const hashHex = sha256('0x' + msgHex).replace(/^0x/, '')\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n","import {byteArray2hexStr} from './bytes';\nimport {\n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n\n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}\n","import {AbiCoder} from './ethersUtils';\nimport TronWeb from 'index';\nimport {ADDRESS_PREFIX, ADDRESS_PREFIX_REGEX} from 'utils/address';\n\nconst abiCoder = new AbiCoder();\n\nexport function decodeParams(names, types, output, ignoreMethodHash) {\n\n    if (!output || typeof output === 'boolean') {\n        ignoreMethodHash = output;\n        output = types;\n        types = names;\n        names = [];\n    }\n\n    if (ignoreMethodHash && output.replace(/^0x/, '').length % 64 === 8)\n        output = '0x' + output.replace(/^0x/, '').substring(8);\n\n    if (output.replace(/^0x/, '').length % 64)\n        throw new Error('The encoded string is not valid. Its length must be a multiple of 64.');\n\n    // workaround for unsupported trcToken type\n    types = types.map(type => {\n        if (/trcToken/.test(type)) {\n            type = type.replace(/trcToken/, 'uint256')\n        }\n        return type\n    })\n\n    return abiCoder.decode(types, output).reduce((obj, arg, index) => {\n        if (types[index] == 'address')\n            arg = ADDRESS_PREFIX + arg.substr(2).toLowerCase();\n\n        if (names.length)\n            obj[names[index]] = arg;\n        else obj.push(arg);\n\n        return obj;\n    }, names.length ? {} : []);\n}\n\nexport function encodeParams(types, values) {\n\n    for (let i = 0; i < types.length; i++) {\n        if (types[i] === 'address') {\n            values[i] = TronWeb.address.toHex(values[i]).replace(ADDRESS_PREFIX_REGEX, '0x');\n        }\n    }\n\n    return abiCoder.encode(types, values);\n}\n","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\nimport * as abi from './abi';\nimport * as ethersUtils from './ethersUtils';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\nimport {ADDRESS_PREFIX} from 'utils/address';\n\nconst utils = {\n    isValidURL(url) {\n        if (typeof url !== 'string')\n            return false;\n        return validator.isURL(url.toString(), {\n            protocols: ['http', 'https'],\n            require_tld: false\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return (typeof string === 'string'\n            && !isNaN(parseInt(string, 16))\n            && /^(0x|)[a-fA-F0-9]+$/.test(string));\n    },\n\n    isInteger(number) {\n        if (number === null)\n            return false\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    mapEvent(event) {\n        let data = {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result,\n            resourceNode: event.resource_Node || (event._unconfirmed ? 'fullNode' : 'solidityNode')\n        };\n        if (event._unconfirmed) {\n            data.unconfirmed = event._unconfirmed\n        }\n        if (event._fingerprint) {\n            data.fingerprint = event._fingerprint;\n        }\n        return data;\n    },\n\n    parseEvent(event, {inputs: abi}) {\n        if (!event.result)\n            return event;\n\n        if (this.isObject(event.result)) {\n            for (var i = 0; i < abi.length; i++) {\n                let obj = abi[i];\n                if (obj.type == 'address' && obj.name in event.result)\n                    event.result[obj.name] = ADDRESS_PREFIX + event.result[obj.name].substr(2).toLowerCase();\n            }\n        } else if (this.isArray(event.result)) {\n            event.result = event.result.reduce((obj, result, index) => {\n                const {\n                    name,\n                    type\n                } = abi[index];\n\n                if (type == 'address')\n                    result = ADDRESS_PREFIX + result.substr(2).toLowerCase();\n\n                obj[name] = result;\n\n                return obj;\n            }, {});\n        }\n\n        return event;\n    },\n\n    padLeft(input, padding, amount) {\n        let res = input.toString();\n\n        while (res.length < amount)\n            res = padding + res;\n\n        return res;\n    },\n\n    isNotNullOrUndefined(val) {\n        return val !== null && typeof val !== 'undefined';\n    },\n\n    async sleep(millis = 1000){\n        return new Promise(resolve => setTimeout(resolve, millis));\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto,\n    abi,\n    ethersUtils\n};\n","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if (!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if (isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if (!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        host = host.replace(/\\/+$/, '');\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({\n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user && {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && Object.keys(payload).length ? payload : null,\n            params: method == 'get' && payload,\n            url,\n            method\n        }).then(({data}) => data);\n    }\n};\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport {AbiCoder} from 'utils/ethersUtils';\nimport Validator from 'paramValidator';\nimport {ADDRESS_PREFIX_REGEX} from 'utils/address';\nimport injectpromise from 'injectpromise';\n\nlet self;\n\n//helpers\n\nfunction toHex(value) {\n    return TronWeb.address.toHex(value);\n}\n\nfunction fromUtf8(value) {\n    return self.tronWeb.fromUtf8(value);\n}\n\nfunction resultManager(transaction, callback) {\n    if (transaction.Error)\n        return callback(transaction.Error);\n\n    if (transaction.result && transaction.result.message) {\n        return callback(\n            self.tronWeb.toUtf8(transaction.result.message)\n        );\n    }\n\n    return callback(null, transaction);\n}\n\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        self = this;\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n        this.validator = new Validator(tronWeb);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(from)) {\n            options = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from, options);\n\n        // accept amounts passed as strings\n        amount = parseInt(amount)\n\n        if (this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer TRX to the same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(to),\n            owner_address: toHex(from),\n            amount: amount,\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/createtransaction', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(from)) {\n            options = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from, options);\n\n        amount = parseInt(amount)\n        if (this.validator.notValid([\n            {\n                name: 'recipient',\n                type: 'address',\n                value: to\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: from,\n            },\n            {\n                names: ['recipient', 'origin'],\n                type: 'notEqual',\n                msg: 'Cannot transfer tokens to the same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenID\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(to),\n            owner_address: toHex(from),\n            asset_name: fromUtf8(tokenID),\n            amount: parseInt(amount)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/transferasset', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(buyer)) {\n            options = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'buyer',\n                type: 'address',\n                value: buyer\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                names: ['buyer', 'issuer'],\n                type: 'notEqual',\n                msg: 'Cannot purchase tokens from same account'\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'token ID',\n                type: 'tokenId',\n                value: tokenID\n            }\n        ], callback))\n            return;\n\n        const data = {\n            to_address: toHex(issuerAddress),\n            owner_address: toHex(buyer),\n            asset_name: fromUtf8(tokenID),\n            amount: parseInt(amount)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/participateassetissue', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        } else if (utils.isObject(receiverAddress)) {\n            options = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, address, receiverAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n                optional: true\n            },\n            {\n                name: 'amount',\n                type: 'integer',\n                gt: 0,\n                value: amount\n            },\n            {\n                name: 'duration',\n                type: 'integer',\n                gte: 3,\n                value: duration\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration),\n            resource: resource\n        }\n\n        if (utils.isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress) !== toHex(address)) {\n            data.receiver_address = toHex(receiverAddress)\n        }\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/freezebalance', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    unfreezeBalance(resource = \"BANDWIDTH\", address = this.tronWeb.defaultAddress.hex, receiverAddress = undefined, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        } else if (utils.isObject(receiverAddress)) {\n            options = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, address, receiverAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n                value: receiverAddress,\n                optional: true\n            },\n            {\n                name: 'resource',\n                type: 'resource',\n                value: resource,\n                msg: 'Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY'\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address),\n            resource: resource\n        }\n\n        if (utils.isNotNullOrUndefined(receiverAddress) && toHex(receiverAddress) !== toHex(address)) {\n            data.receiver_address = toHex(receiverAddress)\n        }\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/unfreezebalance', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(address)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/withdrawbalance', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    applyForSR(\n        address = this.tronWeb.defaultAddress.hex,\n        url = false,\n        options,\n        callback = false\n    ) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (utils.isObject(url) && utils.isValidURL(address)) {\n            options = url;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.applyForSR, address, url, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            },\n            {\n                name: 'url',\n                type: 'url',\n                value: url,\n                msg: 'Invalid url provided'\n            }\n        ], callback))\n            return;\n\n\n        const data = {\n            owner_address: toHex(address),\n            url: fromUtf8(url)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/createwitness', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(voterAddress)) {\n            options = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.vote, votes, voterAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress\n            },\n            {\n                name: 'votes',\n                type: 'notEmptyObject',\n                value: votes\n            }\n        ], callback))\n            return;\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([srAddress, voteCount]) => {\n            if (invalid)\n                return;\n\n            if (this.validator.notValid([\n                {\n                    name: 'SR',\n                    type: 'address',\n                    value: srAddress\n                },\n                {\n                    name: 'vote count',\n                    type: 'integer',\n                    gt: 0,\n                    value: voteCount,\n                    msg: 'Invalid vote count provided for SR: ' + srAddress\n                }\n            ]))\n                return invalid = true;\n\n            return {\n                vote_address: toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if (invalid)\n            return;\n\n        const data = {\n            owner_address: toHex(voterAddress),\n            votes,\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/votewitnessaccount', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        const feeLimit = options.feeLimit || this.tronWeb.feeLimit;\n        let userFeePercentage = options.userFeePercentage;\n        if (typeof userFeePercentage !== 'number' && !userFeePercentage) {\n            userFeePercentage = 100;\n        }\n        const originEnergyLimit = options.originEnergyLimit || 10_000_000;\n        const callValue = options.callValue || 0;\n        const tokenValue = options.tokenValue;\n        const tokenId = options.tokenId || options.token_id;\n\n        let {\n            abi = false,\n            bytecode = false,\n            parameters = [],\n            name = \"\"\n        } = options;\n\n        if (abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch {\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if (abi.entrys)\n            abi = abi.entrys;\n\n        if (!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n\n        const payable = abi.some(func => {\n            return func.type === 'constructor' && 'payable' === func.stateMutability.toLowerCase();\n        });\n\n        if (this.validator.notValid([\n            {\n                name: 'bytecode',\n                type: 'hex',\n                value: bytecode\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0,\n                lte: 5_000_000_000\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], callback))\n            return;\n\n        if (payable && callValue == 0 && tokenValue == 0)\n            return callback('When contract is payable, options.callValue or options.tokenValue must be a positive integer');\n\n        if (!payable && (callValue > 0 || tokenValue > 0))\n            return callback('When contract is not payable, options.callValue and options.tokenValue must be 0');\n\n\n        if (options.rawParameter && utils.isString(options.rawParameter)) {\n            parameters = options.rawParameter.replace(/^(0x)/, '');\n        } else {\n            var constructorParams = abi.find(\n                (it) => {\n                    return it.type === 'constructor';\n                }\n            );\n\n            if (typeof constructorParams !== 'undefined' && constructorParams) {\n                const abiCoder = new AbiCoder();\n                const types = [];\n                const values = [];\n                constructorParams = constructorParams.inputs;\n\n                if (parameters.length != constructorParams.length)\n                    return callback(`constructor needs ${constructorParams.length} but ${parameters.length} provided`);\n\n                for (let i = 0; i < parameters.length; i++) {\n                    let type = constructorParams[i].type;\n                    let value = parameters[i];\n\n                    if (!type || !utils.isString(type) || !type.length)\n                        return callback('Invalid parameter type provided: ' + type);\n\n                    if (type === 'address')\n                        value = toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n                    else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)[0] === 'address[')\n                        value = value.map(v => toHex(v).replace(ADDRESS_PREFIX_REGEX, '0x'));\n                    else if (/trcToken/.test(type)) {\n                        type = type.replace(/trcToken/, 'uint256')\n                    }\n\n                    types.push(type);\n                    values.push(value);\n                }\n\n                try {\n                    parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n                } catch (ex) {\n                    return callback(ex);\n                }\n            } else parameters = '';\n        }\n\n        const args = {\n            owner_address: toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: userFeePercentage,\n            origin_energy_limit: originEnergyLimit,\n            abi: JSON.stringify(abi),\n            bytecode,\n            parameter: parameters,\n            name\n        };\n\n        // tokenValue and tokenId can cause errors if provided when the trx10 proposal has not been approved yet. So we set them only if they are passed to the method.\n        if (utils.isNotNullOrUndefined(tokenValue))\n            args.call_token_value = parseInt(tokenValue)\n        if (utils.isNotNullOrUndefined(tokenId))\n            args.token_id = parseInt(tokenId)\n        if (options && options.permissionId)\n            args.Permission_id = options.permissionId;\n\n        this.tronWeb.fullNode.request('wallet/deploycontract', args, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    triggerSmartContract(...params) {\n        if (typeof params[2] !== 'object') {\n            params[2] = {\n                feeLimit: params[2],\n                callValue: params[3]\n            }\n            params.splice(3, 1)\n        }\n        return this._triggerSmartContract(...params);\n    }\n\n    triggerConstantContract(...params) {\n        params[2]._isConstant = true\n        return this.triggerSmartContract(...params);\n    }\n\n    triggerConfirmedConstantContract(...params) {\n        params[2]._isConstant = true\n        params[2].confirmed = true\n        return this.triggerSmartContract(...params);\n    }\n\n    _triggerSmartContract(\n        contractAddress,\n        functionSelector,\n        options = {},\n        parameters = [],\n        issuerAddress = this.tronWeb.defaultAddress.hex,\n        callback = false\n    ) {\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if (!callback) {\n            return this.injectPromise(\n                this._triggerSmartContract,\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                issuerAddress\n            );\n        }\n\n        let {\n            tokenValue,\n            tokenId,\n            callValue,\n            feeLimit,\n        } = Object.assign({\n            callValue: 0,\n            feeLimit: this.tronWeb.feeLimit\n        }, options)\n\n        if (this.validator.notValid([\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gt: 0,\n                lte: 5_000_000_000\n            },\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'parameters',\n                type: 'array',\n                value: parameters\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress,\n                optional: true\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0,\n                optional: true\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0,\n                optional: true\n            }\n        ], callback))\n            return;\n\n        const args = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(issuerAddress)\n        };\n\n        if (functionSelector && utils.isString(functionSelector)) {\n            functionSelector = functionSelector.replace('/\\s*/g', '');\n            if (parameters.length) {\n                const abiCoder = new AbiCoder();\n                let types = [];\n                const values = [];\n\n                for (let i = 0; i < parameters.length; i++) {\n                    let {type, value} = parameters[i];\n\n                    if (!type || !utils.isString(type) || !type.length)\n                        return callback('Invalid parameter type provided: ' + type);\n\n                    if (type === 'address')\n                        value = toHex(value).replace(ADDRESS_PREFIX_REGEX, '0x');\n                    else if (type.match(/^([^\\x5b]*)(\\x5b|$)/)[0] === 'address[')\n                        value = value.map(v => toHex(v).replace(ADDRESS_PREFIX_REGEX, '0x'));\n\n                    types.push(type);\n                    values.push(value);\n                }\n\n                try {\n                    // workaround for unsupported trcToken type\n                    types = types.map(type => {\n                        if (/trcToken/.test(type)) {\n                            type = type.replace(/trcToken/, 'uint256')\n                        }\n                        return type\n                    })\n\n                    parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n                } catch (ex) {\n                    return callback(ex);\n                }\n            } else parameters = '';\n\n            if (options.shieldedParameter && utils.isString(options.shieldedParameter)) {\n                parameters = options.shieldedParameter.replace(/^(0x)/, '');\n            }\n\n            if (options.rawParameter && utils.isString(options.rawParameter)) {\n                parameters = options.rawParameter.replace(/^(0x)/, '');\n            }\n\n            args.function_selector = functionSelector;\n            args.parameter = parameters;\n        }\n\n\n        if (!options._isConstant) {\n            args.call_value = parseInt(callValue)\n            args.fee_limit = parseInt(feeLimit)\n            if (utils.isNotNullOrUndefined(tokenValue))\n                args.call_token_value = parseInt(tokenValue)\n            if (utils.isNotNullOrUndefined(tokenId))\n                args.token_id = parseInt(tokenId)\n        }\n\n        if (options.permissionId) {\n            args.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/trigger${options._isConstant ? 'constant' : 'smart'}contract`, args, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    clearABI(contractAddress, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.clearABI, contractAddress, ownerAddress);\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid owner address provided');\n\n        const data = {\n            contract_address: toHex(contractAddress),\n            owner_address: toHex(ownerAddress)\n        };\n\n        if (this.tronWeb.trx.cache.contracts[contractAddress]) {\n            delete this.tronWeb.trx.cache.contracts[contractAddress]\n        }\n        this.tronWeb.fullNode.request('wallet/clearabi', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n\n    }\n\n    updateBrokerage(brokerage, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.updateBrokerage, brokerage, ownerAddress);\n\n        if (!utils.isNotNullOrUndefined(brokerage))\n            return callback('Invalid brokerage provided');\n\n        if (!utils.isInteger(brokerage) || brokerage < 0 || brokerage > 100)\n            return callback('Brokerage must be an integer between 0 and 100');\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid owner address provided');\n\n        const data = {\n            brokerage: parseInt(brokerage),\n            owner_address: toHex(ownerAddress)\n        };\n\n        this.tronWeb.fullNode.request('wallet/updateBrokerage', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = false,\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0,\n            // for now there is no default for the following values\n            voteScore,\n            precision\n        } = options;\n\n        if (this.validator.notValid([\n            {\n                name: 'Supply amount',\n                type: 'positive-integer',\n                value: totalSupply\n            },\n            {\n                name: 'TRX ratio',\n                type: 'positive-integer',\n                value: trxRatio\n            },\n            {\n                name: 'Token ratio',\n                type: 'positive-integer',\n                value: tokenRatio\n            },\n            {\n                name: 'token abbreviation',\n                type: 'not-empty-string',\n                value: abbreviation\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: name\n            },\n            {\n                name: 'token description',\n                type: 'not-empty-string',\n                value: description\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'sale start timestamp',\n                type: 'integer',\n                value: saleStart,\n                gte: Date.now()\n            },\n            {\n                name: 'sale end timestamp',\n                type: 'integer',\n                value: saleEnd,\n                gt: saleStart\n            },\n            {\n                name: 'Free bandwidth amount',\n                type: 'integer',\n                value: freeBandwidth,\n                gte: 0\n            },\n            {\n                name: 'Free bandwidth limit',\n                type: 'integer',\n                value: freeBandwidthLimit,\n                gte: 0\n            },\n            {\n                name: 'Frozen supply',\n                type: 'integer',\n                value: frozenAmount,\n                gte: 0\n            },\n            {\n                name: 'Frozen duration',\n                type: 'integer',\n                value: frozenDuration,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        if (utils.isNotNullOrUndefined(voteScore) && (!utils.isInteger(voteScore) || voteScore <= 0))\n            return callback('voteScore must be a positive integer greater than 0');\n\n        if (utils.isNotNullOrUndefined(precision) && (!utils.isInteger(precision) || precision < 0 || precision > 6))\n            return callback('precision must be a positive integer >= 0 and <= 6');\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            name: fromUtf8(name),\n            abbr: fromUtf8(abbreviation),\n            description: fromUtf8(description),\n            url: fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            free_asset_net_limit: parseInt(freeBandwidth),\n            public_free_asset_net_limit: parseInt(freeBandwidthLimit),\n            frozen_supply: {\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }\n        }\n        if (this.tronWeb.fullnodeSatisfies('>=3.5.0') && !(parseInt(frozenAmount) > 0)) {\n            delete data.frozen_supply\n        }\n        if (precision && !isNaN(parseInt(precision))) {\n            data.precision = parseInt(precision);\n        }\n        if (voteScore && !isNaN(parseInt(voteScore))) {\n            data.vote_score = parseInt(voteScore)\n        }\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/createassetissue', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    updateAccount(accountName = false, address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.updateAccount, accountName, address, options);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'Name',\n                type: 'not-empty-string',\n                value: accountName\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            account_name: fromUtf8(accountName),\n            owner_address: toHex(address),\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/updateaccount', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    setAccountId(accountId, address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback) {\n            return this.injectPromise(this.setAccountId, accountId, address);\n        }\n\n        if (accountId && utils.isString(accountId) && accountId.startsWith('0x')) {\n            accountId = accountId.slice(2);\n        }\n\n        if (this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: accountId\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: accountId\n            },\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n\n        this.tronWeb.fullNode.request('wallet/setaccountid', {\n            account_id: accountId,\n            owner_address: toHex(address),\n        }, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = false,\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n\n        if (this.validator.notValid([\n            {\n                name: 'token description',\n                type: 'not-empty-string',\n                value: description\n            },\n            {\n                name: 'token url',\n                type: 'url',\n                value: url\n            },\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'Free bandwidth amount',\n                type: 'positive-integer',\n                value: freeBandwidth\n            },\n            {\n                name: 'Free bandwidth limit',\n                type: 'positive-integer',\n                value: freeBandwidthLimit\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            description: fromUtf8(description),\n            url: fromUtf8(url),\n            new_limit: parseInt(freeBandwidth),\n            new_public_limit: parseInt(freeBandwidthLimit)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/updateasset', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n\n    /**\n     * Creates a proposal to modify the network.\n     * Can only be created by a current Super Representative.\n     */\n    createProposal(parameters = false, issuerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createProposal, parameters, issuerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            }\n        ], callback))\n            return;\n\n        const invalid = 'Invalid proposal parameters provided';\n\n        if (!parameters)\n            return callback(invalid);\n\n        if (!utils.isArray(parameters))\n            parameters = [parameters];\n\n        for (let parameter of parameters) {\n            if (!utils.isObject(parameter))\n                return callback(invalid);\n        }\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            parameters: parameters\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/proposalcreate', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Deletes a network modification proposal that the owner issued.\n     * Only current Super Representative can vote on a proposal.\n     */\n    deleteProposal(proposalID = false, issuerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(issuerAddress)) {\n            options = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.deleteProposal, proposalID, issuerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'issuer',\n                type: 'address',\n                value: issuerAddress\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(issuerAddress),\n            proposal_id: parseInt(proposalID)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/proposaldelete', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Adds a vote to an issued network modification proposal.\n     * Only current Super Representative can vote on a proposal.\n     */\n    voteProposal(proposalID = false, isApproval = false, voterAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(voterAddress)) {\n            options = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.voteProposal, proposalID, isApproval, voterAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'voter',\n                type: 'address',\n                value: voterAddress\n            },\n            {\n                name: 'proposalID',\n                type: 'integer',\n                value: proposalID,\n                gte: 0\n            },\n            {\n                name: 'has approval',\n                type: 'boolean',\n                value: isApproval\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(voterAddress),\n            proposal_id: parseInt(proposalID),\n            is_add_approval: isApproval\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/proposalapprove', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and TRX.\n     * Token Name should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTRXExchange(tokenName, tokenBalance, trxBalance, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createTRXExchange, tokenName, tokenBalance, trxBalance, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token balance',\n                type: 'positive-integer',\n                value: tokenBalance\n            },\n            {\n                name: 'trx balance',\n                type: 'positive-integer',\n                value: trxBalance\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            first_token_id: fromUtf8(tokenName),\n            first_token_balance: tokenBalance,\n            second_token_id: '5f', // Constant for TRX.\n            second_token_balance: trxBalance\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangecreate', data, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Create an exchange between a token and another token.\n     * DO NOT USE THIS FOR TRX.\n     * Token Names should be a CASE SENSITIVE string.\n     * PLEASE VERIFY THIS ON TRONSCAN.\n     */\n    createTokenExchange(firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.createTokenExchange, firstTokenName, firstTokenBalance, secondTokenName, secondTokenBalance, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'first token name',\n                type: 'not-empty-string',\n                value: firstTokenName\n            },\n            {\n                name: 'second token name',\n                type: 'not-empty-string',\n                value: secondTokenName\n            },\n            {\n                name: 'first token balance',\n                type: 'positive-integer',\n                value: firstTokenBalance\n            },\n            {\n                name: 'second token balance',\n                type: 'positive-integer',\n                value: secondTokenBalance\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            first_token_id: fromUtf8(firstTokenName),\n            first_token_balance: firstTokenBalance,\n            second_token_id: fromUtf8(secondTokenName),\n            second_token_balance: secondTokenBalance\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangecreate', data, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Adds tokens into a bancor style exchange.\n     * Will add both tokens at market rate.\n     * Use \"_\" for the constant value for TRX.\n     */\n    injectExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.injectExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangeinject', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Withdraws tokens from a bancor style exchange.\n     * Will withdraw at market rate both tokens.\n     * Use \"_\" for the constant value for TRX.\n     */\n    withdrawExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.withdrawExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'token amount',\n                type: 'integer',\n                value: tokenAmount,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: fromUtf8(tokenName),\n            quant: parseInt(tokenAmount)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangewithdraw', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Trade tokens on a bancor style exchange.\n     * Expected value is a validation and used to cap the total amt of token 2 spent.\n     * Use \"_\" for the constant value for TRX.\n     */\n    tradeExchangeTokens(exchangeID = false,\n                        tokenName = false,\n                        tokenAmountSold = 0,\n                        tokenAmountExpected = 0,\n                        ownerAddress = this.tronWeb.defaultAddress.hex,\n                        options,\n                        callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.tradeExchangeTokens, exchangeID, tokenName, tokenAmountSold, tokenAmountExpected, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'token name',\n                type: 'not-empty-string',\n                value: tokenName\n            },\n            {\n                name: 'tokenAmountSold',\n                type: 'integer',\n                value: tokenAmountSold,\n                gte: 1\n            },\n            {\n                name: 'tokenAmountExpected',\n                type: 'integer',\n                value: tokenAmountExpected,\n                gte: 1\n            },\n            {\n                name: 'exchangeID',\n                type: 'integer',\n                value: exchangeID,\n                gte: 0\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromAscii(tokenName),\n            quant: parseInt(tokenAmountSold),\n            expected: parseInt(tokenAmountExpected)\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/exchangetransaction', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Update userFeePercentage.\n     */\n    updateSetting(contractAddress = false,\n                  userFeePercentage = false,\n                  ownerAddress = this.tronWeb.defaultAddress.hex,\n                  options,\n                  callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateSetting, contractAddress, userFeePercentage, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'userFeePercentage',\n                type: 'integer',\n                value: userFeePercentage,\n                gte: 0,\n                lte: 100\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            contract_address: toHex(contractAddress),\n            consume_user_resource_percent: userFeePercentage\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/updatesetting', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    /**\n     * Update energy limit.\n     */\n    updateEnergyLimit(contractAddress = false,\n                      originEnergyLimit = false,\n                      ownerAddress = this.tronWeb.defaultAddress.hex,\n                      options,\n                      callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(ownerAddress)) {\n            options = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateEnergyLimit, contractAddress, originEnergyLimit, ownerAddress, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'owner',\n                type: 'address',\n                value: ownerAddress\n            },\n            {\n                name: 'contract',\n                type: 'address',\n                value: contractAddress\n            },\n            {\n                name: 'originEnergyLimit',\n                type: 'integer',\n                value: originEnergyLimit,\n                gte: 0,\n                lte: 10_000_000\n            }\n        ], callback))\n            return;\n\n        const data = {\n            owner_address: toHex(ownerAddress),\n            contract_address: toHex(contractAddress),\n            origin_energy_limit: originEnergyLimit\n        };\n\n        if (options && options.permissionId) {\n            data.Permission_id = options.permissionId;\n        }\n\n        this.tronWeb.fullNode.request('wallet/updateenergylimit', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    checkPermissions(permissions, type) {\n        if (permissions) {\n            if (permissions.type !== type\n                || !permissions.permission_name\n                || !utils.isString(permissions.permission_name)\n                || !utils.isInteger(permissions.threshold)\n                || permissions.threshold < 1\n                || !permissions.keys\n            ) {\n                return false\n            }\n            for (let key of permissions.keys) {\n                if (!this.tronWeb.isAddress(key.address)\n                    || !utils.isInteger(key.weight)\n                    || key.weight > permissions.threshold\n                    || key.weight < 1\n                    || (type === 2 && !permissions.operations)\n                ) {\n                    return false\n                }\n            }\n        }\n        return true\n    }\n\n    updateAccountPermissions(ownerAddress = this.tronWeb.defaultAddress.hex,\n                             ownerPermissions = false,\n                             witnessPermissions = false,\n                             activesPermissions = false,\n                             callback = false) {\n\n        if (utils.isFunction(activesPermissions)) {\n            callback = activesPermissions;\n            activesPermissions = false;\n        }\n\n        if (utils.isFunction(witnessPermissions)) {\n            callback = witnessPermissions;\n            witnessPermissions = activesPermissions = false;\n        }\n\n        if (utils.isFunction(ownerPermissions)) {\n            callback = ownerPermissions;\n            ownerPermissions = witnessPermissions = activesPermissions = false;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.updateAccountPermissions, ownerAddress, ownerPermissions, witnessPermissions, activesPermissions);\n\n        if (!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if (!this.checkPermissions(ownerPermissions, 0)) {\n            return callback('Invalid ownerPermissions provided');\n        }\n\n        if (!this.checkPermissions(witnessPermissions, 1)) {\n            return callback('Invalid witnessPermissions provided');\n        }\n\n        if (!Array.isArray(activesPermissions)) {\n            activesPermissions = [activesPermissions]\n        }\n\n        for (let activesPermission of activesPermissions) {\n            if (!this.checkPermissions(activesPermission, 2)) {\n                return callback('Invalid activesPermissions provided');\n            }\n        }\n\n        const data = {\n            owner_address: ownerAddress\n        }\n        if (ownerPermissions) {\n            data.owner = ownerPermissions\n        }\n        if (witnessPermissions) {\n            data.witness = witnessPermissions\n        }\n        if (activesPermissions) {\n            data.actives = activesPermissions.length === 1 ? activesPermissions[0] : activesPermissions\n        }\n\n        this.tronWeb.fullNode.request('wallet/accountpermissionupdate', data, 'post').then(transaction => resultManager(transaction, callback)).catch(err => callback(err));\n    }\n\n    async newTxID(transaction, callback) {\n\n        if (!callback)\n            return this.injectPromise(this.newTxID, transaction);\n\n        this.tronWeb.fullNode\n            .request(\n                'wallet/getsignweight',\n                transaction,\n                'post'\n            )\n            .then(newTransaction => {\n                newTransaction = newTransaction.transaction.transaction\n                if (typeof transaction.visible === 'boolean') {\n                    newTransaction.visible = transaction.visible\n                }\n                callback(null, newTransaction)\n            })\n            .catch(err => callback('Error generating a new transaction id.'));\n    }\n\n    async alterTransaction(transaction, options = {}, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.alterTransaction, transaction, options);\n\n        if (transaction.signature)\n            return callback('You can not extend the expiration of a signed transaction.')\n\n        if (options.data) {\n            if (options.dataFormat !== 'hex')\n                options.data = this.tronWeb.toHex(options.data);\n            options.data = options.data.replace(/^0x/, '')\n            if (options.data.length === 0)\n                return callback('Invalid data provided');\n            transaction.raw_data.data = options.data;\n        }\n\n        if (options.extension) {\n            options.extension = parseInt(options.extension * 1000);\n            if (isNaN(options.extension) || transaction.raw_data.expiration + options.extension <= Date.now() + 3000)\n                return callback('Invalid extension provided');\n            transaction.raw_data.expiration += options.extension;\n        }\n\n        this.newTxID(transaction, callback)\n    }\n\n    async extendExpiration(transaction, extension, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.extendExpiration, transaction, extension);\n\n        this.alterTransaction(transaction, {extension}, callback);\n    }\n\n    async addUpdateData(transaction, data, dataFormat = 'utf8', callback = false) {\n\n        if (utils.isFunction(dataFormat)) {\n            callback = dataFormat;\n            dataFormat = 'utf8';\n        }\n\n        if (!callback)\n            return this.injectPromise(this.addUpdateData, transaction, data, dataFormat);\n\n        this.alterTransaction(transaction, {data, dataFormat}, callback);\n    }\n\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Validator {\n\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n    }\n\n    invalid(param) {\n        return param.msg || `Invalid ${param.name}${param.type === 'address' ? ' address' : ''} provided`;\n    }\n\n    notPositive(param) {\n        return `${param.name} must be a positive integer`;\n    }\n\n    notEqual(param) {\n        return param.msg || `${param.names[0]} can not be equal to ${param.names[1]}`;\n    }\n\n    notValid(params = [], callback = new Function) {\n\n        let normalized = {};\n        let no = false;\n        for (const param of params) {\n            let {\n                name,\n                names,\n                value,\n                type,\n                gt,\n                lt,\n                gte,\n                lte,\n                se,\n                optional\n            } = param;\n            if (optional && (\n                !utils.isNotNullOrUndefined(value)\n                || (type !== 'boolean' && value === false)))\n                continue;\n            normalized[param.name] = param.value;\n            switch (type) {\n\n                case 'address':\n                    if (!this.tronWeb.isAddress(value)) {\n                        no = true;\n                    } else {\n                        normalized[name] = this.tronWeb.address.toHex(value);\n                    }\n                    break;\n\n                case 'integer':\n                    if (!utils.isInteger(value) ||\n                        (typeof gt === 'number' && value <= param.gt) ||\n                        (typeof lt === 'number' && value >= param.lt) ||\n                        (typeof gte === 'number' && value < param.gte) ||\n                        (typeof lte === 'number' && value > param.lte)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'positive-integer':\n                    if (!utils.isInteger(value) || value <= 0) {\n                        callback(this.notPositive(param));\n                        return;\n                    }\n                    break;\n\n                case 'tokenId':\n                    if (!utils.isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEmptyObject':\n                    if (!utils.isObject(value) || !Object.keys(value).length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'notEqual':\n                    if (normalized[names[0]] === normalized[names[1]]) {\n                        callback(this.notEqual(param));\n                        return true;\n                    }\n                    break;\n\n                case 'resource':\n                    if (!['BANDWIDTH', 'ENERGY'].includes(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'url':\n                    if (!utils.isValidURL(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'hex':\n                    if (!utils.isHex(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'array':\n                    if (!Array.isArray(value)) {\n                        no = true;\n                    }\n                    break;\n\n                case 'not-empty-string':\n                    if (!utils.isString(value) || !value.length) {\n                        no = true;\n                    }\n                    break;\n\n                case 'boolean':\n                    if (!utils.isBoolean(value)) {\n                        no = true;\n                    }\n                    break;\n                case 'string':\n                    if (!utils.isString(value) ||\n                        (typeof gt === 'number' && value.length <= param.gt) ||\n                        (typeof lt === 'number' && value.length >= param.lt) ||\n                        (typeof gte === 'number' && value.length < param.gte) ||\n                        (typeof lte === 'number' && value.length > param.lte)) {\n                        no = true;\n                    }\n                    break;\n            }\n            if (no) {\n                callback(this.invalid(param));\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport {keccak256, toUtf8Bytes, recoverAddress, SigningKey} from 'utils/ethersUtils';\nimport {ADDRESS_PREFIX} from 'utils/address';\nimport Validator from \"../paramValidator\";\nimport injectpromise from 'injectpromise';\n\nconst TRX_MESSAGE_HEADER = '\\x19TRON Signed Message:\\n32';\n// it should be: '\\x15TRON Signed Message:\\n32';\nconst ETH_MESSAGE_HEADER = '\\x19Ethereum Signed Message:\\n32';\n\nfunction toHex(value) {\n    return TronWeb.address.toHex(value);\n}\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n        this.cache = {\n            contracts: {}\n        }\n        this.validator = new Validator(tronWeb);\n    }\n\n    _parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getCurrentBlock);\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedCurrentBlock(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getConfirmedCurrentBlock);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if (block === false)\n            return callback('No block identifier provided');\n\n        if (block == 'earliest')\n            block = 0;\n\n        if (block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if (isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', {\n            value: blockHash\n        }, 'post').then(block => {\n            if (!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if (!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', {\n            num: parseInt(blockID)\n        }, 'post').then(block => {\n            if (!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({transactions = []}) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionFromBlock(block = this.tronWeb.defaultBlock, index, callback = false) {\n        if (utils.isFunction(index)) {\n            callback = index;\n            index = 0;\n        }\n\n        if (utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionFromBlock, block, index);\n\n        this.getBlock(block).then(({transactions = false}) => {\n            if (!transactions)\n                callback('Transaction not found in block');\n            else if (typeof index == 'number') {\n                if (index >= 0 && index < transactions.length)\n                    callback(null, transactions[index]);\n                else\n                    callback('Invalid transaction index provided');\n            } else\n                callback(null, transactions);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if (!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getConfirmedTransaction(transactionID, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getConfirmedTransaction, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactionbyid', {\n            value: transactionID\n        }, 'post').then(transaction => {\n            if (!Object.keys(transaction).length)\n                return callback('Transaction not found');\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedTransactionInfo(transactionID, callback = false) {\n        return this._getTransactionInfoById(transactionID, {confirmed: false}, callback)\n    }\n\n    getTransactionInfo(transactionID, callback = false) {\n        return this._getTransactionInfoById(transactionID, {confirmed: true}, callback)\n    }\n\n    _getTransactionInfoById(transactionID, options, callback = false) {\n        if (!callback)\n            return this.injectPromise(this._getTransactionInfoById, transactionID, options);\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/gettransactioninfobyid`, {\n            value: transactionID\n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        address = this.tronWeb.address.toHex(address);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;\n        }\n\n        if (utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if (!['to', 'from', 'all'].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n\n        if (direction == 'all') {\n            try {\n                const [from, to] = await Promise.all([\n                    this.getTransactionsRelated(address, 'from', limit, offset),\n                    this.getTransactionsRelated(address, 'to', limit, offset)\n                ])\n\n                return callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => {\n                    return b.raw_data.timestamp - a.raw_data.timestamp\n                }));\n            } catch (ex) {\n                return callback(ex);\n            }\n        }\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if (!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({transaction}) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getAccountById(id = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getAccountById, id);\n\n        this.getAccountInfoById(id, {confirmed: true}, callback);\n    }\n\n    getAccountInfoById(id, options, callback) {\n        if (this.validator.notValid([\n            {\n                name: 'accountId',\n                type: 'hex',\n                value: id\n            },\n            {\n                name: 'accountId',\n                type: 'string',\n                lte: 32,\n                gte: 8,\n                value: id\n            }\n        ], callback))\n            return;\n\n        if (id.startsWith('0x')) {\n            id = id.slice(2);\n        }\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getaccountbyid`, {\n            account_id: id\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedAccount, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getUnconfirmedAccountById(id, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedAccountById, id);\n\n        this.getAccountInfoById(id, {confirmed: false}, callback);\n    }\n\n    getUnconfirmedBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getUnconfirmedBalance, address);\n\n        this.getUnconfirmedAccount(address).then(({balance = 0}) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0}) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({assetIssue = false}) => {\n            if (!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this._parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({nodes = []}) => {\n            callback(null, nodes.map(({address: {host, port}}) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if (utils.isFunction(end)) {\n            callback = end;\n            end = 30;\n        }\n\n        if (utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if (!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if (!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', {\n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({block = []}) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({witnesses = []}) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if (!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if (!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if (!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({assetIssue = []}) => {\n                callback(null, assetIssue.map(token => this._parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({assetIssue = []}) => {\n            callback(null, assetIssue.map(token => this._parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({num = -1}) => {\n            if (num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (this.cache.contracts[contractAddress]) {\n            callback(null, this.cache.contracts[contractAddress]);\n            return;\n        }\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if (contract.Error)\n                return callback('Contract does not exist');\n            this.cache.contracts[contractAddress] = contract;\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    async verifyMessage(message = false, signature = false, address = this.tronWeb.defaultAddress.base58, useTronHeader = true, callback = false) {\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.base58;\n            useTronHeader = true;\n        }\n\n        if (utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.verifyMessage, message, signature, address, useTronHeader);\n\n        if (!utils.isHex(message))\n            return callback('Expected hex message input');\n\n        if (Trx.verifySignature(message, address, signature, useTronHeader))\n            return callback(null, true);\n\n        callback('Signature does not match');\n    }\n\n    static verifySignature(message, address, signature, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        signature = signature.replace(/^0x/, '');\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n\n        const messageDigest = keccak256(messageBytes);\n        const recovered = recoverAddress(messageDigest, {\n            recoveryParam: signature.substring(128, 130) == '1c' ? 1 : 0,\n            r: '0x' + signature.substring(0, 64),\n            s: '0x' + signature.substring(64, 128)\n        });\n\n        const tronAddress = ADDRESS_PREFIX + recovered.substr(2);\n        const base58Address = TronWeb.address.fromHex(tronAddress);\n\n        return base58Address == TronWeb.address.fromHex(address);\n    }\n\n    async sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, useTronHeader = true, multisig = false, callback = false) {\n\n        if (utils.isFunction(multisig)) {\n            callback = multisig;\n            multisig = false;\n        }\n\n        if (utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n\n        if (!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader, multisig);\n\n        // Message signing\n        if (utils.isString(transaction)) {\n\n            if (!utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signatureHex = Trx.signString(transaction, privateKey, useTronHeader)\n                return callback(null, signatureHex);\n            } catch (ex) {\n                callback(ex);\n            }\n        }\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if (!multisig && transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            if (!multisig) {\n                const address = this.tronWeb.address.toHex(\n                    this.tronWeb.address.fromPrivateKey(privateKey)\n                ).toLowerCase();\n\n                if (address !== this.tronWeb.address.toHex(transaction.raw_data.contract[0].parameter.value.owner_address))\n                    return callback('Private key does not match address in transaction');\n            }\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    static signString(message, privateKey, useTronHeader = true) {\n        message = message.replace(/^0x/, '');\n        const value ={\n            toHexString: function() {\n                return '0x' + privateKey\n            },\n            value: privateKey\n        }\n        const signingKey = new SigningKey(value);\n        const messageBytes = [\n            ...toUtf8Bytes(useTronHeader ? TRX_MESSAGE_HEADER : ETH_MESSAGE_HEADER),\n            ...utils.code.hexStr2byteArray(message)\n        ];\n        const messageDigest = keccak256(messageBytes);\n        const signature = signingKey.signDigest(messageDigest);\n        const signatureHex = [\n            '0x',\n            signature.r.substring(2),\n            signature.s.substring(2),\n            Number(signature.v).toString(16)\n        ].join('');\n        return signatureHex\n    }\n\n    async multiSign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, permissionId = false, callback = false) {\n\n        if (utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = 0;\n        }\n\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n            permissionId = 0;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.multiSign, transaction, privateKey, permissionId);\n\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract)\n            return callback('Invalid transaction provided');\n\n        // If owner permission or permission id exists in transaction, do sign directly\n        // If no permission id inside transaction or user passes permission id, use old way to reset permission id\n        if (!transaction.raw_data.contract[0].Permission_id && permissionId > 0) {\n            // set permission id\n            transaction.raw_data.contract[0].Permission_id = permissionId;\n\n            // check if private key insides permission list\n            const address = this.tronWeb.address.toHex(this.tronWeb.address.fromPrivateKey(privateKey)).toLowerCase();\n            const signWeight = await this.getSignWeight(transaction, permissionId);\n\n            if (signWeight.result.code === 'PERMISSION_ERROR') {\n                return callback(signWeight.result.message);\n            }\n\n            let foundKey = false;\n            signWeight.permission.keys.map(key => {\n                if (key.address === address)\n                    foundKey = true;\n            });\n\n            if (!foundKey)\n                return callback(privateKey + ' has no permission to sign');\n\n            if (signWeight.approved_list && signWeight.approved_list.indexOf(address) != -1) {\n                return callback(privateKey + ' already sign transaction');\n            }\n\n            // reset transaction\n            if (signWeight.transaction && signWeight.transaction.transaction) {\n                transaction = signWeight.transaction.transaction;\n                if (permissionId > 0) {\n                    transaction.raw_data.contract[0].Permission_id = permissionId;\n                }\n            } else {\n                return callback('Invalid transaction provided');\n            }\n        }\n\n        // sign\n        try {\n            return callback(null, utils.crypto.signTransaction(privateKey, transaction));\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    async getApprovedList(transaction, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getApprovedList, transaction);\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n\n        this.tronWeb.fullNode.request(\n            'wallet/getapprovedlist',\n            transaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async getSignWeight(transaction, permissionId, callback = false) {\n        if (utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = undefined;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getSignWeight, transaction, permissionId);\n\n        if (!utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract)\n            return callback('Invalid transaction provided');\n\n        if (utils.isInteger(permissionId)) {\n            transaction.raw_data.contract[0].Permission_id = parseInt(permissionId);\n        } else if (typeof transaction.raw_data.contract[0].Permission_id !== 'number') {\n            transaction.raw_data.contract[0].Permission_id = 0;\n        }\n\n        if (!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n\n        this.tronWeb.fullNode.request(\n            'wallet/getsignweight',\n            transaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    sendRawTransaction(signedTransaction = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction, options);\n\n        if (!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if (!utils.isObject(options))\n            return callback('Invalid options provided');\n\n        if (!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction',\n            signedTransaction,\n            'post'\n        ).then(result => {\n            if (result.result)\n                result.transaction = signedTransaction;\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, options);\n\n        if (!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, options);\n\n        if (!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.sign(transaction, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Freezes an amount of TRX.\n     * Will give bandwidth OR Energy and TRON Power(voting rights)\n     * to the owner of the frozen tokens.\n     *\n     * @param amount - is the number of frozen trx\n     * @param duration - is the duration in days to be frozen\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async freezeBalance(amount = 0, duration = 3, resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n        if (utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.freezeBalance, amount, duration, resource, options, receiverAddress);\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        if (!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if (!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const freezeBalance = await this.tronWeb.transactionBuilder.freezeBalance(amount, duration, resource, address, receiverAddress);\n            const signedTransaction = await this.sign(freezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Unfreeze TRX that has passed the minimum freeze duration.\n     * Unfreezing will remove bandwidth and TRON Power.\n     *\n     * @param resource - is the type, must be either \"ENERGY\" or \"BANDWIDTH\"\n     * @param options\n     * @param callback\n     */\n    async unfreezeBalance(resource = \"BANDWIDTH\", options = {}, receiverAddress = undefined, callback = false) {\n        if (utils.isFunction(receiverAddress)) {\n            callback = receiverAddress;\n            receiverAddress = undefined;\n        }\n\n        if (utils.isFunction(resource)) {\n            callback = resource;\n            resource = 'BANDWIDTH';\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback)\n            return this.injectPromise(this.unfreezeBalance, resource, options, receiverAddress);\n\n        if (!['BANDWIDTH', 'ENERGY'].includes(resource))\n            return callback('Invalid resource provided: Expected \"BANDWIDTH\" or \"ENERGY\"');\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const unfreezeBalance = await this.tronWeb.transactionBuilder.unfreezeBalance(resource, address, receiverAddress);\n            const signedTransaction = await this.sign(unfreezeBalance, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    /**\n     * Modify account name\n     * Note: Username is allowed to edit only once.\n     *\n     * @param privateKey - Account private Key\n     * @param accountName - name of the account\n     * @param callback\n     *\n     * @return modified Transaction Object\n     */\n    async updateAccount(accountName = false, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (typeof options === 'string')\n            options = {privateKey: options};\n\n        if (!callback) {\n            return this.injectPromise(this.updateAccount, accountName, options);\n        }\n\n        if (!utils.isString(accountName) || !accountName.length) {\n            return callback('Name must be a string');\n        }\n\n        options = {\n            privateKey: this.tronWeb.defaultPrivateKey,\n            address: this.tronWeb.defaultAddress.hex,\n            ...options\n        };\n\n        if (!options.privateKey && !options.address)\n            return callback('Function requires either a private key or address to be set');\n\n        try {\n            const address = options.privateKey ? this.tronWeb.address.fromPrivateKey(options.privateKey) : options.address;\n            const updateAccount = await this.tronWeb.transactionBuilder.updateAccount(accountName, address);\n            const signedTransaction = await this.sign(updateAccount, options.privateKey || undefined);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    signMessage(...args) {\n        return this.sign(...args);\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n\n    /**\n     * Gets a network modification proposal by ID.\n     */\n    getProposal(proposalID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getProposal, proposalID);\n\n        if (!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/getproposalbyid', {\n            id: parseInt(proposalID),\n        }, 'post').then(proposal => {\n            callback(null, proposal);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listProposals(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listProposals);\n\n        this.tronWeb.fullNode.request('wallet/listproposals', {}, 'post').then(({proposals = []}) => {\n            callback(null, proposals);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all parameters available for network modification proposals.\n     */\n    getChainParameters(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getChainParameters);\n\n        this.tronWeb.fullNode.request('wallet/getchainparameters', {}, 'post').then(({chainParameter = []}) => {\n            callback(null, chainParameter);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the account resources\n     */\n    getAccountResources(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getAccountResources, address);\n\n        if (!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/getaccountresource', {\n            address: this.tronWeb.address.toHex(address),\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get the exchange ID.\n     */\n    getExchangeByID(exchangeID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getExchangeByID, exchangeID);\n\n        if (!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        this.tronWeb.fullNode.request('wallet/getexchangebyid', {\n            id: exchangeID,\n        }, 'post').then(exchange => {\n            callback(null, exchange);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists the exchanges\n     */\n    listExchanges(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.listExchanges);\n\n        this.tronWeb.fullNode.request('wallet/listexchanges', {}, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }, 'post').catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listExchangesPaginated(limit = 10, offset = 0, callback = false) {\n        if (utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;\n        }\n        if (utils.isFunction(limit)) {\n            callback = limit;\n            limit = 10;\n        }\n        if (!callback)\n            return this.injectPromise(this.listExchangesPaginated, limit, offset);\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedexchangelist', {\n            limit,\n            offset\n        }, 'post').then(({exchanges = []}) => {\n            callback(null, exchanges);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Get info about thre node\n     */\n    getNodeInfo(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getNodeInfo);\n\n        this.tronWeb.fullNode.request('wallet/getnodeinfo', {}, 'post').then(info => {\n            callback(null, info);\n        }, 'post').catch(err => callback(err));\n    }\n\n\n    getTokenListByName(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenListByName, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuelistbyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if (Array.isArray(token.assetIssue)) {\n                callback(null, token.assetIssue.map(t => this._parseToken(t)));\n            } else if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    getTokenByID(tokenID = false, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.getTokenByID, tokenID);\n\n        if (utils.isInteger(tokenID))\n            tokenID = tokenID.toString()\n\n        if (!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyid', {\n            value: tokenID\n        }, 'post').then(token => {\n            if (!token.name)\n                return callback('Token does not exist');\n\n            callback(null, this._parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    async getReward(address, options = {}, callback = false) {\n        options.confirmed = true;\n        return this._getReward(address, options, callback);\n    }\n\n    async getUnconfirmedReward(address, options = {}, callback = false) {\n        options.confirmed = false;\n        return this._getReward(address, options, callback);\n    }\n\n    async getBrokerage(address, options = {}, callback = false) {\n        options.confirmed = true;\n        return this._getBrokerage(address, options, callback);\n    }\n\n    async getUnconfirmedBrokerage(address, options = {}, callback = false) {\n        options.confirmed = false;\n        return this._getBrokerage(address, options, callback);\n    }\n\n    async _getReward(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._getReward, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            address: toHex(address)\n        };\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getReward`, data, 'post')\n            .then((result = {}) => {\n\n                if (typeof result.reward === 'undefined')\n                    return callback('Not found.');\n\n                callback(null, result.reward);\n            }).catch(err => callback(err));\n    }\n\n\n    async _getBrokerage(address = this.tronWeb.defaultAddress.hex, options, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        } else if (utils.isObject(address)) {\n            options = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if (!callback)\n            return this.injectPromise(this._getBrokerage, address, options);\n\n        if (this.validator.notValid([\n            {\n                name: 'origin',\n                type: 'address',\n                value: address\n            }\n        ], callback))\n            return;\n\n        const data = {\n            address: toHex(address)\n        };\n\n        this.tronWeb[options.confirmed ? 'solidityNode' : 'fullNode'].request(`wallet${options.confirmed ? 'solidity' : ''}/getBrokerage`, data, 'post')\n            .then((result = {}) => {\n\n                if (typeof result.brokerage === 'undefined')\n                    return callback('Not found.');\n\n                callback(null, result.brokerage);\n            }).catch(err => callback(err));\n    }\n\n};\n","import utils from 'utils';\nimport {ADDRESS_PREFIX_REGEX} from 'utils/address';\nimport injectpromise from 'injectpromise';\n\nconst getFunctionSelector = abi => {\n    return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\n}\n\nconst getParamTypes = params => {\n    return params.map(({type}) => type);\n}\n\nconst decodeOutput = (abi, output) => {\n    const names = abi.map(({name}) => name).filter(name => !!name);\n    const types = abi.map(({type}) => type);\n\n    return utils.abi.decodeParams(names, types, output);\n};\n\nexport default class Method {\n    constructor(contract, abi) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;\n        this.name = abi.name || (abi.name = abi.type);\n\n        this.inputs = abi.inputs || [];\n        this.outputs = abi.outputs || [];\n\n        this.functionSelector = getFunctionSelector(abi);\n        this.signature = this.tronWeb.sha3(this.functionSelector, false).slice(0, 8);\n        this.injectPromise = injectpromise(this);\n\n        this.defaultOptions = {\n            feeLimit: this.tronWeb.feeLimit,\n            callValue: 0,\n            userFeePercentage: 100,\n            shouldPollResponse: false // Only used for sign()\n        };\n    }\n\n    decodeInput(data) {\n        return decodeOutput(this.inputs, '0x' + data);\n    }\n\n    onMethod(...args) {\n        const types = getParamTypes(this.inputs);\n\n        args.forEach((arg, index) => {\n            if (types[index] === 'address')\n                args[index] = this.tronWeb.address.toHex(arg).replace(ADDRESS_PREFIX_REGEX, '0x')\n\n            if (types[index].match(/^([^\\x5b]*)(\\x5b|$)/)[0] === 'address[') {\n                args[index] = args[index].map(address => {\n                    return this.tronWeb.address.toHex(address).replace(ADDRESS_PREFIX_REGEX, '0x')\n                })\n            }\n        });\n\n        return {\n            call: (...methodArgs) => this._call(types, args, ...methodArgs),\n            send: (...methodArgs) => this._send(types, args, ...methodArgs),\n            watch: (...methodArgs) => this._watch(...methodArgs)\n        }\n    }\n\n    async _call(types, args, options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._call, types, args, options);\n\n        if (types.length !== args.length)\n            return callback('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (!['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use send()`);\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector,\n            options,\n            parameters,\n            options.from ? this.tronWeb.address.toHex(options.from) : false,\n            (err, transaction) => {\n                if (err)\n                    return callback(err);\n\n                if (!utils.hasProperty(transaction, 'constant_result'))\n                    return callback('Failed to execute');\n\n                try {\n\n                    const len = transaction.constant_result[0].length\n                    if (len === 0 || len % 64 === 8) {\n                        let msg = 'The call has been reverted or has thrown an error.'\n                        if (len !== 0) {\n                            msg += ' Error message: '\n                            let msg2 = ''\n                            let chunk = transaction.constant_result[0].substring(8)\n                            for (let i = 0; i < len - 8; i += 64) {\n                                msg2 += this.tronWeb.toUtf8(chunk.substring(i, i + 64))\n                            }\n                            msg += msg2.replace(/(\\u0000|\\u000b|\\f)+/g, ' ').replace(/ +/g, ' ').replace(/\\s+$/g, '');\n                        }\n                        return callback(msg)\n                    }\n\n                    let output = decodeOutput(this.outputs, '0x' + transaction.constant_result[0]);\n\n                    if (output.length === 1)\n                        output = output[0];\n\n                    return callback(null, output);\n                } catch (ex) {\n                    return callback(ex);\n                }\n            });\n    }\n\n    async _send(types, args, options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this._send, types, args, options, privateKey);\n\n        if (types.length !== args.length)\n            throw new Error('Invalid argument count provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const {stateMutability} = this.abi;\n\n        if (['pure', 'view'].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use call()`);\n\n        // If a function isn't payable, dont provide a callValue.\n        if (!['payable'].includes(stateMutability.toLowerCase()))\n            options.callValue = 0;\n\n        options = {\n            ...this.defaultOptions,\n            from: this.tronWeb.defaultAddress.hex,\n            ...options,\n        };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        try {\n            const address = privateKey ? this.tronWeb.address.fromPrivateKey(privateKey) : this.tronWeb.defaultAddress.base58;\n            const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n                this.contract.address,\n                this.functionSelector,\n                options,\n                parameters,\n                this.tronWeb.address.toHex(address)\n            );\n\n            if (!transaction.result || !transaction.result.result)\n                return callback('Unknown error: ' + JSON.stringify(transaction, null, 2));\n\n            // If privateKey is false, this won't be signed here. We assume sign functionality will be replaced.\n            const signedTransaction = await this.tronWeb.trx.sign(transaction.transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.tronWeb.toUtf8(broadcast.message);\n                return callback(err)\n            }\n\n            if (!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if (index === 20) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n                if (!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if (output.result && output.result === 'FAILED') {\n                    return callback({\n                        error: this.tronWeb.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (!utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (options.rawResponse)\n                    return callback(null, output);\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if (decoded.length === 1)\n                    decoded = decoded[0];\n\n                if (options.keepTxID) {\n                    return callback(null, [signedTransaction.txID, decoded]);\n                }\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async _watch(options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!utils.isFunction(callback))\n            throw new Error('Expected callback to be provided');\n\n        if (!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if (!this.abi.type || !/event/i.test(this.abi.type))\n            return callback('Invalid method type for event watching');\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        let listener = false;\n        let lastBlock = false;\n        let since = Date.now() - 1000;\n\n        const getEvents = async () => {\n            try {\n\n                const params = {\n                    since,\n                    eventName: this.name,\n                    sort: 'block_timestamp',\n                    blockNumber: 'latest',\n                    filters: options.filters\n                }\n                if (options.resourceNode) {\n                    if (/full/i.test(options.resourceNode))\n                        params.onlyUnconfirmed = true\n                    else\n                        params.onlyConfirmed = true\n                }\n\n                const events = await this.tronWeb.event.getEventsByContractAddress(this.contract.address, params);\n                const [latestEvent] = events.sort((a, b) => b.block - a.block);\n                const newEvents = events.filter((event, index) => {\n\n                    if (options.resourceNode && event.resourceNode &&\n                        options.resourceNode.toLowerCase() !== event.resourceNode.toLowerCase()) {\n                        return false\n                    }\n\n                    const duplicate = events.slice(0, index).some(priorEvent => (\n                        JSON.stringify(priorEvent) == JSON.stringify(event)\n                    ));\n\n                    if (duplicate)\n                        return false;\n\n                    if (!lastBlock)\n                        return true;\n\n                    return event.block > lastBlock;\n                });\n\n                if (latestEvent)\n                    lastBlock = latestEvent.block;\n\n                return newEvents;\n            } catch (ex) {\n                return Promise.reject(ex);\n            }\n\n        };\n\n        const bindListener = () => {\n            if (listener)\n                clearInterval(listener);\n\n            listener = setInterval(() => {\n                getEvents().then(events => events.forEach(event => {\n                    callback(null, utils.parseEvent(event, this.abi))\n                })).catch(err => callback(err));\n            }, 3000);\n        };\n\n        await getEvents();\n        bindListener();\n\n        return {\n            start: bindListener,\n            stop: () => {\n                if (!listener)\n                    return;\n\n                clearInterval(listener);\n                listener = false;\n            }\n        }\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport Method from './method';\nimport injectpromise from 'injectpromise';\n\nexport default class Contract {\n    constructor(tronWeb = false, abi = [], address = false) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;\n        this.deployed = false;\n        this.lastBlock = false;\n\n        this.methods = {};\n        this.methodInstances = {};\n        this.props = [];\n\n        if (this.tronWeb.isAddress(address))\n            this.deployed = true;\n        else this.address = false;\n\n        this.loadAbi(abi);\n    }\n\n    async _getEvents(options = {}) {\n        const events = await this.tronWeb.event.getEventsByContractAddress(this.address, options);\n        const [latestEvent] = events.sort((a, b) => b.block - a.block);\n        const newEvents = events.filter((event, index) => {\n\n            if (options.resourceNode && event.resourceNode &&\n                options.resourceNode.toLowerCase() !== event.resourceNode.toLowerCase()) {\n                return false\n            }\n\n            const duplicate = events.slice(0, index).some(priorEvent => (\n                JSON.stringify(priorEvent) == JSON.stringify(event)\n            ));\n\n            if (duplicate)\n                return false;\n\n            if (!this.lastBlock)\n                return true;\n\n            return event.block > this.lastBlock;\n        });\n\n        if (latestEvent)\n            this.lastBlock = latestEvent.block;\n\n        return newEvents;\n    }\n\n    async _startEventListener(options = {}, callback) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (this.eventListener)\n            clearInterval(this.eventListener);\n\n        if (!this.tronWeb.eventServer)\n            throw new Error('Event server is not configured');\n\n        if (!this.address)\n            throw new Error('Contract is not configured with an address');\n\n        this.eventCallback = callback;\n        await this._getEvents(options);\n\n        this.eventListener = setInterval(() => {\n            this._getEvents(options).then(newEvents => newEvents.forEach(event => {\n                this.eventCallback && this.eventCallback(event)\n            })).catch(err => {\n                console.error('Failed to get event list', err);\n            });\n        }, 3000);\n    }\n\n    _stopEventListener() {\n        if (!this.eventListener)\n            return;\n\n        clearInterval(this.eventListener);\n        this.eventListener = false;\n        this.eventCallback = false;\n    }\n\n    hasProperty(property) {\n        return this.hasOwnProperty(property) || this.__proto__.hasOwnProperty(property);\n    }\n\n    loadAbi(abi) {\n        this.abi = abi;\n        this.methods = {};\n\n        this.props.forEach(prop => delete this[prop]);\n\n        abi.forEach(func => {\n            // Don't build a method for constructor function. That's handled through contract create.\n            if (!func.type || /constructor/i.test(func.type))\n                return;\n\n            const method = new Method(this, func);\n            const methodCall = method.onMethod.bind(method);\n\n            const {\n                name,\n                functionSelector,\n                signature\n            } = method;\n\n            this.methods[name] = methodCall;\n            this.methods[functionSelector] = methodCall;\n            this.methods[signature] = methodCall;\n\n            this.methodInstances[name] = method;\n            this.methodInstances[functionSelector] = method;\n            this.methodInstances[signature] = method;\n\n            if (!this.hasProperty(name)) {\n                this[name] = methodCall;\n                this.props.push(name);\n            }\n\n            if (!this.hasProperty(functionSelector)) {\n                this[functionSelector] = methodCall;\n                this.props.push(functionSelector);\n            }\n\n            if (!this.hasProperty(signature)) {\n                this[signature] = methodCall;\n                this.props.push(signature);\n            }\n        });\n    }\n\n    decodeInput(data) {\n\n        const methodName = data.substring(0, 8);\n        const inputData = data.substring(8);\n\n        if (!this.methodInstances[methodName])\n            throw new Error('Contract method ' + methodName + \" not found\");\n\n        const methodInstance = this.methodInstances[methodName];\n\n        return {\n            name: methodInstance.name,\n            params: this.methodInstances[methodName].decodeInput(inputData),\n        }\n    }\n\n    async new(options, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if (utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.new, options, privateKey);\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address);\n            const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n            const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if (contract.code)\n                return callback({\n                    error: contract.code,\n                    message: this.tronWeb.toUtf8(contract.message)\n                })\n\n            await utils.sleep(3000);\n            return this.at(signedTransaction.contract_address, callback);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async at(contractAddress, callback = false) {\n        if (!callback)\n            return this.injectPromise(this.at, contractAddress);\n\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if (!contract.contract_address)\n                return callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi ? contract.abi.entrys ? contract.abi.entrys : [] : []);\n\n            return callback(null, this);\n        } catch (ex) {\n            if (ex.toString().includes('does not exist'))\n                return callback('Contract has not been deployed on the network');\n\n            return callback(ex);\n        }\n    }\n\n    events(options = {}, callback = false) {\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!utils.isFunction(callback))\n            throw new Error('Callback function expected');\n\n        const self = this;\n\n        return {\n            start(startCallback = false) {\n                if (!startCallback) {\n                    self._startEventListener(options, callback);\n                    return this;\n                }\n\n                self._startEventListener(options, callback).then(() => {\n                    startCallback();\n                }).catch(err => {\n                    startCallback(err)\n                });\n\n                return this;\n            },\n            stop() {\n                self._stopEventListener();\n            }\n        };\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport semver from 'semver';\n\nexport default class Plugin {\n\n    constructor(tronWeb = false, options = {}) {\n        if (!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n        this.pluginNoOverride = ['register'];\n        this.disablePlugins = options.disablePlugins;\n    }\n\n    register(Plugin, options) {\n        let pluginInterface = {\n            requires: '0.0.0',\n            components: {}\n        }\n        let result = {\n            libs: [],\n            plugged: [],\n            skipped: []\n        }\n        if (this.disablePlugins) {\n            result.error = 'This instance of TronWeb has plugins disabled.'\n            return result;\n        }\n        const plugin = new Plugin(this.tronWeb)\n        if (utils.isFunction(plugin.pluginInterface)) {\n            pluginInterface = plugin.pluginInterface(options)\n        }\n        if (semver.satisfies(TronWeb.version, pluginInterface.requires)) {\n            if (pluginInterface.fullClass) {\n                // plug the entire class at the same level of tronWeb.trx\n                let className = plugin.constructor.name\n                let classInstanceName = className.substring(0, 1).toLowerCase() + className.substring(1)\n                if (className !== classInstanceName) {\n                    TronWeb[className] = Plugin\n                    this.tronWeb[classInstanceName] = plugin\n                    result.libs.push(className)\n                }\n            } else {\n                // plug methods into a class, like trx\n                for (let component in pluginInterface.components) {\n                    if (!this.tronWeb.hasOwnProperty(component)) {\n                        continue\n                    }\n                    let methods = pluginInterface.components[component]\n                    let pluginNoOverride = this.tronWeb[component].pluginNoOverride || []\n                    for (let method in methods) {\n                        if (method === 'constructor' || (this.tronWeb[component][method] &&\n                            (pluginNoOverride.includes(method) // blacklisted methods\n                                || /^_/.test(method)) // private methods\n                        )) {\n                            result.skipped.push(method)\n                            continue\n                        }\n                        this.tronWeb[component][method] = methods[method].bind(this.tronWeb[component])\n                        result.plugged.push(method)\n                    }\n                }\n            }\n        } else {\n            throw new Error('The plugin is not compatible with this version of TronWeb')\n        }\n        return result\n    }\n}\n\n","import TronWeb from 'index';\nimport utils from 'utils';\nimport providers from \"./providers\";\nimport querystring from \"querystring\";\nimport injectpromise from 'injectpromise';\n\nexport default class Event {\n\n    constructor(tronWeb = false) {\n        if (!tronWeb || !(tronWeb instanceof TronWeb))\n            throw new Error('Expected instance of TronWeb');\n        this.tronWeb = tronWeb;\n        this.injectPromise = injectpromise(this);\n    }\n\n    setServer(eventServer = false, healthcheck = 'healthcheck') {\n        if (!eventServer)\n            return this.tronWeb.eventServer = false;\n\n        if (utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        if (!this.tronWeb.isValidProvider(eventServer))\n            throw new Error('Invalid event server provided');\n\n        this.tronWeb.eventServer = eventServer;\n        this.tronWeb.eventServer.isConnected = () => this.tronWeb.eventServer.request(healthcheck).then(() => true).catch(() => false);\n    }\n\n    getEventsByContractAddress(contractAddress = false, options = {}, callback = false) {\n\n        let {\n            sinceTimestamp,\n            since,\n            fromTimestamp,\n            eventName,\n            blockNumber,\n            size,\n            page,\n            onlyConfirmed,\n            onlyUnconfirmed,\n            previousLastEventFingerprint,\n            previousFingerprint,\n            fingerprint,\n            rawResponse,\n            sort,\n            filters\n        } = Object.assign({\n            sinceTimestamp: 0,\n            eventName: false,\n            blockNumber: false,\n            size: 20,\n            page: 1\n        }, options)\n\n        if (!callback)\n            return this.injectPromise(this.getEventsByContractAddress, contractAddress, options);\n\n        fromTimestamp = fromTimestamp || sinceTimestamp || since;\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        const routeParams = [];\n\n        if (!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if (eventName && !contractAddress)\n            return callback('Usage of event name filtering requires a contract address');\n\n        if (typeof fromTimestamp !== 'undefined' && !utils.isInteger(fromTimestamp))\n            return callback('Invalid fromTimestamp provided');\n\n        if (!utils.isInteger(size))\n            return callback('Invalid size provided');\n\n        if (size > 200) {\n            console.warn('Defaulting to maximum accepted size: 200');\n            size = 200;\n        }\n\n        if (!utils.isInteger(page))\n            return callback('Invalid page provided');\n\n        if (blockNumber && !eventName)\n            return callback('Usage of block number filtering requires an event name');\n\n        if (contractAddress)\n            routeParams.push(this.tronWeb.address.fromHex(contractAddress));\n\n        if (eventName)\n            routeParams.push(eventName);\n\n        if (blockNumber)\n            routeParams.push(blockNumber);\n\n        const qs = {\n            size,\n            page\n        }\n\n        if (typeof filters === 'object' && Object.keys(filters).length > 0) {\n            qs.filters = JSON.stringify(filters);\n        }\n\n        if (fromTimestamp) {\n            qs.fromTimestamp = qs.since = fromTimestamp;\n        }\n\n        if (onlyConfirmed)\n            qs.only_confirmed = onlyConfirmed\n\n        if (onlyUnconfirmed && !onlyConfirmed)\n            qs.only_unconfirmed = onlyUnconfirmed\n\n        if (sort)\n            qs.sort = sort\n\n        fingerprint = fingerprint || previousFingerprint || previousLastEventFingerprint\n        if (fingerprint)\n            qs.fingerprint = fingerprint\n\n        return this.tronWeb.eventServer.request(`event/contract/${routeParams.join('/')}?${querystring.stringify(qs)}`).then((data = false) => {\n            if (!data)\n                return callback('Unknown error occurred');\n\n            if (!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                rawResponse === true ? data : data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n\n    getEventsByTransactionID(transactionID = false, options = {}, callback = false) {\n\n        if (utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback)\n            return this.injectPromise(this.getEventsByTransactionID, transactionID, options);\n\n        if (!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        return this.tronWeb.eventServer.request(`event/transaction/${transactionID}`).then((data = false) => {\n            if (!data)\n                return callback('Unknown error occurred');\n\n            if (!utils.isArray(data))\n                return callback(data);\n\n            return callback(null,\n                options.rawResponse === true ? data : data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n}\n\n","import injectpromise from 'injectpromise';\nimport Validator from 'paramValidator';\n\nconst MAX_FEE_LIMIT = 5_000_000_000;\nexport default class SideChain {\n    constructor(sideOptions, TronWeb = false, mainchain = false, privateKey = false) {\n        this.mainchain = mainchain;\n        const { fullHost, fullNode, solidityNode, eventServer, mainGatewayAddress, sideGatewayAddress, sideChainId } = sideOptions;\n        this.sidechain = new TronWeb(fullHost || fullNode, fullHost || solidityNode, fullHost || eventServer, privateKey);\n        this.isAddress = this.mainchain.isAddress;\n        this.utils = this.mainchain.utils;\n        this.setMainGatewayAddress(mainGatewayAddress);\n        this.setSideGatewayAddress(sideGatewayAddress);\n        this.setChainId(sideChainId);\n        this.injectPromise = injectpromise(this);\n        this.validator = new Validator(this.sidechain);\n\n        const self = this;\n        this.sidechain.trx.sign = (...args) => {\n            return self.sign(...args);\n        };\n        this.sidechain.trx.multiSign = (...args) => {\n            return self.multiSign(...args);\n        };\n    }\n    setMainGatewayAddress(mainGatewayAddress) {\n        if (!this.isAddress(mainGatewayAddress))\n            throw new Error('Invalid main gateway address provided');\n        this.mainGatewayAddress = mainGatewayAddress;\n    }\n\n    setSideGatewayAddress(sideGatewayAddress) {\n        if (!this.isAddress(sideGatewayAddress))\n            throw new Error('Invalid side gateway address provided');\n        this.sideGatewayAddress = sideGatewayAddress;\n    }\n\n    setChainId(sideChainId) {\n        if (!this.utils.isString(sideChainId) || !sideChainId)\n            throw new Error('Invalid side chainId provided');\n        this.chainId = sideChainId;\n    }\n\n    signTransaction(priKeyBytes, transaction) {\n        if (typeof priKeyBytes === 'string') {\n            priKeyBytes = this.utils.code.hexStr2byteArray(priKeyBytes);\n        }\n        let chainIdByteArr = this.utils.code.hexStr2byteArray(this.chainId);\n\n        let byteArr = this.utils.code.hexStr2byteArray(transaction.txID).concat(chainIdByteArr);\n        let byteArrHash = this.sidechain.utils.ethersUtils.sha256(byteArr);\n\n        const signature = this.utils.crypto.ECKeySign(this.utils.code.hexStr2byteArray(byteArrHash.replace(/^0x/, '')), priKeyBytes);\n\n        if (Array.isArray(transaction.signature)) {\n            if (!transaction.signature.includes(signature))\n                transaction.signature.push(signature);\n        } else\n            transaction.signature = [signature];\n        return transaction;\n    }\n\n    async multiSign(transaction = false, privateKey = this.sidechain.defaultPrivateKey, permissionId = false, callback = false) {\n        if (this.utils.isFunction(permissionId)) {\n            callback = permissionId;\n            permissionId = 0;\n        }\n\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n            permissionId = 0;\n        }\n\n        if (!callback) return this.injectPromise(this.multiSign, transaction, privateKey, permissionId);\n\n        if (!this.utils.isObject(transaction) || !transaction.raw_data || !transaction.raw_data.contract) return callback('Invalid transaction provided');\n\n        if (!transaction.raw_data.contract[0].Permission_id && permissionId > 0) {\n            // set permission id\n            transaction.raw_data.contract[0].Permission_id = permissionId;\n\n            // check if private key insides permission list\n            const address = this.sidechain.address.toHex(this.sidechain.address.fromPrivateKey(privateKey)).toLowerCase();\n            const signWeight = await this.sidechain.trx.getSignWeight(transaction, permissionId);\n\n            if (signWeight.result.code === 'PERMISSION_ERROR') {\n                return callback(signWeight.result.message);\n            }\n\n            let foundKey = false;\n            signWeight.permission.keys.map(key => {\n                if (key.address === address) foundKey = true;\n            });\n\n            if (!foundKey) return callback(privateKey + ' has no permission to sign');\n\n            if (signWeight.approved_list && signWeight.approved_list.indexOf(address) != -1) {\n                return callback(privateKey + ' already sign transaction');\n            }\n\n            // reset transaction\n            if (signWeight.transaction && signWeight.transaction.transaction) {\n                transaction = signWeight.transaction.transaction;\n                transaction.raw_data.contract[0].Permission_id = permissionId;\n            } else {\n                return callback('Invalid transaction provided');\n            }\n        }\n        // sign\n        try {\n            return callback(null, this.signTransaction(privateKey, transaction));\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    async sign(transaction = false, privateKey = this.sidechain.defaultPrivateKey, useTronHeader = true, multisig = false, callback = false) {\n        if (this.utils.isFunction(multisig)) {\n            callback = multisig;\n            multisig = false;\n        }\n\n        if (this.utils.isFunction(useTronHeader)) {\n            callback = useTronHeader;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.sidechain.defaultPrivateKey;\n            useTronHeader = true;\n            multisig = false;\n        }\n\n        if (!callback)\n            return this.injectPromise(this.sign, transaction, privateKey, useTronHeader, multisig);\n\n        // Message signing\n        if (this.utils.isString(transaction)) {\n\n            if (!this.utils.isHex(transaction))\n                return callback('Expected hex message input');\n\n            try {\n                const signatureHex = this.sidechain.trx.signString(transaction, privateKey, useTronHeader);\n                return callback(null, signatureHex);\n            } catch (ex) {\n                callback(ex);\n            }\n        }\n\n        if (!this.utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if (!multisig && transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            if (!multisig) {\n                const address = this.sidechain.address.toHex(\n                    this.sidechain.address.fromPrivateKey(privateKey)\n                ).toLowerCase();\n                if (address !== this.sidechain.address.toHex(transaction.raw_data.contract[0].parameter.value.owner_address))\n                    return callback('Private key does not match address in transaction');\n            }\n            return callback(null,\n                this.signTransaction(privateKey, transaction)\n            );\n        } catch (ex) {\n            callback(ex);\n        }\n    }\n\n    /**\n    * deposit asset to sidechain\n    */\n    async depositTrx(\n        callValue,\n        depositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrx, callValue, depositFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'depositFee',\n                type: 'integer',\n                value: depositFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: MAX_FEE_LIMIT\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            callValue: Number(callValue) + Number(depositFee),\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            const result = await contractInstance.depositTRX().send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async depositTrc10(\n        tokenId,\n        tokenValue,\n        depositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrc10, tokenId, tokenValue, depositFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0\n            },\n            {\n                name: 'depositFee',\n                type: 'integer',\n                value: depositFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: MAX_FEE_LIMIT\n            },\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            tokenId,\n            tokenValue,\n            feeLimit,\n            ...options,\n            callValue: depositFee\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            const result = await contractInstance.depositTRC10(tokenId, tokenValue).send(options, privateKey);\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async depositTrc(\n        functionSelector,\n        num,\n        fee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.depositTrc, functionSelector, num, fee, feeLimit, contractAddress, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'functionSelector',\n                type: 'not-empty-string',\n                value: functionSelector\n            },\n            {\n                name: 'num',\n                type: 'integer',\n                value: num,\n                gte: 0\n            },\n            {\n                name: 'fee',\n                type: 'integer',\n                value: fee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: MAX_FEE_LIMIT\n            },\n            {\n                name: 'contractAddress',\n                type: 'address',\n                value: contractAddress\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            feeLimit,\n            ...options,\n            callValue: fee,\n            tokenId: '',\n            tokenValue: 0\n        };\n        try {\n            let result = null;\n            if (functionSelector === 'approve') {\n                const approveInstance = await this.mainchain.contract().at(contractAddress);\n                result = await approveInstance.approve(this.mainGatewayAddress, num).send(options, privateKey);\n            } else {\n                const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n                switch (functionSelector) {\n                    case 'depositTRC20':\n                        result = await contractInstance.depositTRC20(contractAddress, num).send(options, privateKey);\n                        break;\n                    case 'depositTRC721':\n                        result = await contractInstance.depositTRC721(contractAddress, num).send(options, privateKey);\n                        break;\n                    case 'retryDeposit':\n                        result = await contractInstance.retryDeposit(num).send(options, privateKey);\n                        break;\n                    case 'retryMapping':\n                        result = await contractInstance.retryMapping(num).send(options, privateKey);\n                        break;\n                    default:\n                        break;\n                }\n            }\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async approveTrc20(\n        num,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'approve';\n        return this.depositTrc(\n            functionSelector,\n            num,\n            0,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async approveTrc721(\n        id,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'approve';\n        return this.depositTrc(\n            functionSelector,\n            id,\n            0,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async depositTrc20(\n        num,\n        depositFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'depositTRC20';\n        return this.depositTrc(\n            functionSelector,\n            num,\n            depositFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async depositTrc721(\n        id,\n        depositFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'depositTRC721';\n        return this.depositTrc(\n            functionSelector,\n            id,\n            depositFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    /**\n     * mapping asset TRC20 or TRC721 to DAppChain\n     */\n    async mappingTrc(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        functionSelector,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.mappingTrc, trxHash, mappingFee, feeLimit, functionSelector, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'trxHash',\n                type: 'not-empty-string',\n                value: trxHash\n            },\n            {\n                name: 'mappingFee',\n                type: 'integer',\n                value: mappingFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: MAX_FEE_LIMIT\n            }\n        ], callback)) {\n            return;\n        }\n        trxHash = trxHash.startsWith('0x') ? trxHash : ('0x' + trxHash);\n        options = {\n            feeLimit,\n            ...options,\n            callValue: mappingFee\n        };\n        try {\n            const contractInstance = await this.mainchain.contract().at(this.mainGatewayAddress);\n            let result = null;\n            if (functionSelector === 'mappingTRC20') {\n                result = await contractInstance.mappingTRC20(trxHash).send(options, privateKey);\n            } else if (functionSelector === 'mappingTRC721') {\n                result = await contractInstance.mappingTRC721(trxHash).send(options, privateKey);\n            } else {\n                callback(new Error('type must be trc20 or trc721'));\n            }\n            callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async mappingTrc20(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'mappingTRC20';\n        return this.mappingTrc(\n            trxHash,\n            mappingFee,\n            feeLimit,\n            functionSelector,\n            options,\n            privateKey,\n            callback);\n    }\n\n    async mappingTrc721(\n        trxHash,\n        mappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'mappingTRC721';\n        return this.mappingTrc(\n            trxHash,\n            mappingFee,\n            feeLimit,\n            functionSelector,\n            options,\n            privateKey,\n            callback);\n    }\n\n    /**\n     * withdraw trx from sidechain to mainchain\n     */\n    async withdrawTrx(\n        callValue,\n        withdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrx, callValue, withdrawFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'callValue',\n                type: 'integer',\n                value: callValue,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            callValue: Number(callValue) + Number(withdrawFee),\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.sidechain.contract().at(this.sideGatewayAddress);\n            const result = await contractInstance.withdrawTRX().send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc10(\n        tokenId,\n        tokenValue,\n        withdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrc10, tokenId, tokenValue, withdrawFee, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'tokenId',\n                type: 'integer',\n                value: tokenId,\n                gte: 0\n            },\n            {\n                name: 'tokenValue',\n                type: 'integer',\n                value: tokenValue,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            tokenValue,\n            tokenId,\n            callValue: withdrawFee,\n            feeLimit,\n            ...options\n        };\n        try {\n            const contractInstance = await this.sidechain.contract().at(this.sideGatewayAddress);\n            const result = await contractInstance.withdrawTRC10(tokenId, tokenValue).send(options, privateKey);\n            return callback(null, result);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc(\n        functionSelector,\n        numOrId,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.withdrawTrc, functionSelector, numOrId, withdrawFee, feeLimit, contractAddress, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'functionSelector',\n                type: 'not-empty-string',\n                value: functionSelector\n            },\n            {\n                name: 'numOrId',\n                type: 'integer',\n                value: numOrId,\n                gte: 0\n            },\n            {\n                name: 'withdrawFee',\n                type: 'integer',\n                value: withdrawFee,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            },\n            {\n                name: 'contractAddress',\n                type: 'address',\n                value: contractAddress\n            }\n        ], callback)) {\n            return;\n        }\n        options = {\n            feeLimit,\n            ...options,\n            callValue: withdrawFee\n        };\n        const parameters = [\n            {\n                type: 'uint256',\n                value: numOrId\n            }\n        ];\n\n        try {\n            const address = privateKey ? this.sidechain.address.fromPrivateKey(privateKey) : this.sidechain.defaultAddress.base58;\n            const transaction = await this.sidechain.transactionBuilder.triggerSmartContract(\n                contractAddress,\n                functionSelector,\n                options,\n                parameters,\n                this.sidechain.address.toHex(address)\n            );\n            if (!transaction.result || !transaction.result.result) {\n                return callback('Unknown error: ' + JSON.stringify(transaction.transaction, null, 2));\n            }\n\n            const signedTransaction = await this.sidechain.trx.sign(transaction.transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.sidechain.trx.sendRawTransaction(signedTransaction);\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.sidechain.toUtf8(broadcast.message);\n                return callback(err)\n            }\n\n            if (!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if (index == 20) {\n                    return callback({\n                        error: 'Cannot find result in solidity node',\n                        transaction: signedTransaction\n                    });\n                }\n\n                const output = await this.sidechain.trx.getTransactionInfo(signedTransaction.txID);\n\n                if (!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if (output.result && output.result == 'FAILED') {\n                    return callback({\n                        error: this.sidechain.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (!this.utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if (options.rawResponse)\n                    return callback(null, output);\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if (decoded.length === 1)\n                    decoded = decoded[0];\n\n                return callback(null, decoded);\n            }\n\n            checkResult();\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async withdrawTrc20(\n        num,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'withdrawal(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            num,\n            withdrawFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback);\n    }\n\n    async withdrawTrc721(\n        id,\n        withdrawFee,\n        feeLimit,\n        contractAddress,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'withdrawal(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            id,\n            withdrawFee,\n            feeLimit,\n            contractAddress,\n            options,\n            privateKey,\n            callback);\n    }\n\n\n    async injectFund(\n        num,\n        feeLimit,\n        options,\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        if (this.utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.mainchain.defaultPrivateKey;\n        }\n\n        if (this.utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n        if (!callback) {\n            return this.injectPromise(this.injectFund, num, feeLimit, options, privateKey);\n        }\n        if (this.validator.notValid([\n            {\n                name: 'num',\n                type: 'integer',\n                value: num,\n                gte: 0\n            },\n            {\n                name: 'feeLimit',\n                type: 'integer',\n                value: feeLimit,\n                gte: 0,\n                lte: 1_000_000_000\n            }\n        ], callback)) {\n            return;\n        }\n\n        try {\n            const address = this.sidechain.address.fromPrivateKey(privateKey);\n            const hexAddress = this.sidechain.address.toHex(address);\n            const transaction = await this.sidechain.fullNode.request('/wallet/fundinject', {\n                owner_address: hexAddress,\n                amount: num\n            }, 'post');\n\n            const signedTransaction = await this.sidechain.trx.sign(transaction, privateKey);\n\n            if (!signedTransaction.signature) {\n                if (!privateKey)\n                    return callback('Transaction was not signed properly');\n\n                return callback('Invalid private key provided');\n            }\n\n            const broadcast = await this.sidechain.trx.sendRawTransaction(signedTransaction);\n            if (broadcast.code) {\n                const err = {\n                    error: broadcast.code,\n                    message: broadcast.code\n                };\n                if (broadcast.message)\n                    err.message = this.mainchain.toUtf8(broadcast.message);\n                return callback(err)\n            }\n            return callback(null, signedTransaction.txID);\n        } catch (ex) {\n            return callback(ex);\n        }\n    }\n\n    async retryWithdraw(\n        nonce,\n        retryWithdrawFee,\n        feeLimit,\n        options = {},\n        privateKey = this.sidechain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryWithdraw(uint256)';\n        return this.withdrawTrc(\n            functionSelector,\n            nonce,\n            retryWithdrawFee,\n            feeLimit,\n            this.sideGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async retryDeposit(\n        nonce,\n        retryDepositFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryDeposit';\n        return this.depositTrc(\n            functionSelector,\n            nonce,\n            retryDepositFee,\n            feeLimit,\n            this.mainGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n\n    async retryMapping(\n        nonce,\n        retryMappingFee,\n        feeLimit,\n        options = {},\n        privateKey = this.mainchain.defaultPrivateKey,\n        callback = false\n    ) {\n        const functionSelector = 'retryMapping';\n        return this.depositTrc(\n            functionSelector,\n            nonce,\n            retryMappingFee,\n            feeLimit,\n            this.mainGatewayAddress,\n            options,\n            privateKey,\n            callback\n        );\n    }\n}\n\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport BigNumber from 'bignumber.js';\nimport EventEmitter from 'eventemitter3';\nimport { version } from '../package.json';\nimport semver from 'semver';\nimport injectpromise from 'injectpromise';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Contract from 'lib/contract';\nimport Plugin from 'lib/plugin';\nimport Event from 'lib/event';\nimport SideChain from 'lib/sidechain';\nimport { keccak256 } from 'utils/ethersUtils';\nimport { ADDRESS_PREFIX } from 'utils/address';\n\nconst DEFAULT_VERSION = '3.5.0';\n\nconst FEE_LIMIT = 150000000;\n\nexport default class TronWeb extends EventEmitter {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    static TransactionBuilder = TransactionBuilder;\n    static Trx = Trx;\n    static Contract = Contract;\n    static Plugin = Plugin;\n    static Event = Event;\n    static version = version;\n    static utils = utils;\n\n    constructor(options = false,\n        // for retro-compatibility:\n        solidityNode = false, eventServer = false, sideOptions = false, privateKey = false) {\n        super();\n\n        let fullNode;\n        let headers = false;\n        let eventHeaders = false;\n\n        if (typeof options === 'object' && (options.fullNode || options.fullHost)) {\n            fullNode = options.fullNode || options.fullHost;\n            sideOptions = solidityNode;\n            solidityNode = options.solidityNode || options.fullHost;\n            eventServer = options.eventServer || options.fullHost;\n            headers = options.headers || false;\n            eventHeaders = options.eventHeaders || headers;\n            privateKey = options.privateKey;\n        } else {\n            fullNode = options;\n        }\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if (utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (utils.isString(eventServer))\n            eventServer = new providers.HttpProvider(eventServer);\n\n        this.event = new Event(this);\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.plugin = new Plugin(this, options);\n        this.utils = utils;\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n\n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n\n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'createAccount', 'address', 'version'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n        // for sidechain\n        if (typeof sideOptions === 'object' && (sideOptions.fullNode || sideOptions.fullHost)) {\n            this.sidechain = new SideChain(sideOptions, TronWeb, this, privateKey);\n        } else {\n            privateKey = privateKey || sideOptions;\n        }\n\n        if (privateKey)\n            this.setPrivateKey(privateKey);\n        this.fullnodeVersion = DEFAULT_VERSION;\n        this.feeLimit = FEE_LIMIT;\n        this.injectPromise = injectpromise(this);\n\n        if (headers) {\n            this.setFullNodeHeader(headers);\n        }\n\n        if (eventHeaders) {\n            this.setEventHeader(eventHeaders);\n        }\n    }\n\n    async getFullnodeVersion() {\n        try {\n            const nodeInfo = await this.trx.getNodeInfo()\n            this.fullnodeVersion = nodeInfo.configNodeInfo.codeVersion\n            if (this.fullnodeVersion.split('.').length === 2) {\n                this.fullnodeVersion += '.0';\n            }\n        } catch (err) {\n            this.fullnodeVersion = DEFAULT_VERSION;\n        }\n    }\n\n    setDefaultBlock(blockID = false) {\n        if ([false, 'latest', 'earliest', 0].includes(blockID)) {\n            return this.defaultBlock = blockID;\n        }\n\n        if (!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = Math.abs(blockID);\n    }\n\n    setPrivateKey(privateKey) {\n        try {\n            this.setAddress(\n                this.address.fromPrivateKey(privateKey)\n            );\n        } catch {\n            throw new Error('Invalid private key provided');\n        }\n\n        this.defaultPrivateKey = privateKey;\n        this.emit('privateKeyChanged', privateKey);\n    }\n\n    setAddress(address) {\n        if (!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        const hex = this.address.toHex(address);\n        const base58 = this.address.fromHex(address);\n\n        if (this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== base58)\n            this.defaultPrivateKey = false;\n\n        this.defaultAddress = {\n            hex,\n            base58\n        };\n\n        this.emit('addressChanged', { hex, base58 });\n    }\n\n    fullnodeSatisfies(version) {\n        return semver.satisfies(this.fullnodeVersion, version);\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    setFullNode(fullNode) {\n        if (utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if (!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n\n        this.getFullnodeVersion();\n    }\n\n    setSolidityNode(solidityNode) {\n        if (utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if (!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(...params) {\n        this.event.setServer(...params)\n    }\n\n    setHeader (headers = {}) {\n        const fullNode = new providers.HttpProvider(this.fullNode.host, 30000, false, false, headers);\n        const solidityNode = new providers.HttpProvider(this.solidityNode.host, 30000, false, false, headers);\n        const eventServer = new providers.HttpProvider(this.eventServer.host, 30000, false, false, headers);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n    }\n\n    setFullNodeHeader (headers = {}) {\n        const fullNode = new providers.HttpProvider(this.fullNode.host, 30000, false, false, headers);\n        const solidityNode = new providers.HttpProvider(this.solidityNode.host, 30000, false, false, headers);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n    }\n\n    setEventHeader (headers = {}) {\n        const eventServer = new providers.HttpProvider(this.eventServer.host, 30000, false, false, headers);\n        this.setEventServer(eventServer);\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n\n    getEventResult(...params) {\n\n        if (typeof params[1] !== 'object') {\n            params[1] = {\n                sinceTimestamp: params[1] || 0,\n                eventName: params[2] || false,\n                blockNumber: params[3] || false,\n                size: params[4] || 20,\n                page: params[5] || 1\n            }\n            params.splice(2, 4)\n\n            // callback:\n            if (!utils.isFunction(params[2])) {\n\n                if (utils.isFunction(params[1].page)) {\n                    params[2] = params[1].page;\n                    params[1].page = 1;\n                } else if (utils.isFunction(params[1].size)) {\n                    params[2] = params[1].size;\n                    params[1].size = 20;\n                    params[1].page = 1;\n                }\n            }\n        }\n\n        return this.event.getEventsByContractAddress(...params);\n    }\n\n    getEventByTransactionID(...params) {\n        return this.event.getEventsByTransactionID(...params)\n    }\n\n    contract(abi = [], address = false) {\n        return new Contract(this, abi, address);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if (!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address.replace(/^0x/, ADDRESS_PREFIX))\n                );\n            },\n            toHex(address) {\n                if (utils.isHex(address))\n                    return address.toLowerCase().replace(/^0x/, ADDRESS_PREFIX);\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                ).toLowerCase();\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch {\n                    return false;\n                }\n            }\n        }\n    }\n\n    static sha3(string, prefix = true) {\n        return (prefix ? '0x' : '') + keccak256(Buffer.from(string, 'utf-8')).toString().substring(2);\n    }\n\n    static toHex(val) {\n        if (utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if (utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if (typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if (utils.isString(val)) {\n            if (/^(-|)0x/.test(val))\n                return val;\n\n            if ((!isFinite(val)) || /^\\s*$/.test(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        let result = TronWeb.fromDecimal(val);\n        if (result === '0xNaN') {\n            throw new Error('The passed value is not convertible to a hex string');\n        } else {\n            return result;\n        }\n    }\n\n    static toUtf8(hex) {\n        if (utils.isHex(hex)) {\n            hex = hex.replace(/^0x/, '');\n            return Buffer.from(hex, 'hex').toString('utf8');\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromUtf8(string) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        if (utils.isHex(hex)) {\n            let str = \"\";\n            let i = 0, l = hex.length;\n            if (hex.substring(0, 2) === '0x') {\n                i = 2;\n            }\n            for (; i < l; i += 2) {\n                let code = parseInt(hex.substr(i, 2), 16);\n                str += String.fromCharCode(code);\n            }\n            return str;\n        } else {\n            throw new Error('The passed value is not a valid hex string');\n        }\n    }\n\n    static fromAscii(string, padding) {\n        if (!utils.isString(string)) {\n            throw new Error('The passed value is not a valid utf-8 string')\n        }\n        return '0x' + Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.isLessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(sun).div(1_000_000);\n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);\n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if (utils.isBigNumber(amount))\n            return amount;\n\n        if (utils.isString(amount) && /^(-|)0x/.test(amount))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if (!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if (address.length === 42) {\n            try {\n                return TronWeb.isAddress(\n                    utils.crypto.getBase58CheckAddress(\n                        utils.code.hexStr2byteArray(address) // it throws an error if the address starts with 0x\n                    )\n                );\n            } catch (err) {\n                return false;\n            }\n        }\n        try {\n            return utils.crypto.isAddressValid(address);\n        } catch (err) {\n            return false;\n        }\n    }\n\n    static async createAccount() {\n        const account = utils.accounts.generateAccount();\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if (!callback)\n            return this.injectPromise(this.isConnected);\n\n        return callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: this.eventServer && await this.eventServer.isConnected()\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"script"}