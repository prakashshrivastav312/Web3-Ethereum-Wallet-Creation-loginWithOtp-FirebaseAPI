{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\nexport var IS_LENGTH = 'isLength';\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\n\nexport function length(value, min, max) {\n  return typeof value === 'string' && isLengthValidator(value, {\n    min: min,\n    max: max\n  });\n}\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\n\nexport function Length(min, max, validationOptions) {\n  return ValidateBy({\n    name: IS_LENGTH,\n    constraints: [min, max],\n    validator: {\n      validate: function (value, args) {\n        return length(value, args.constraints[0], args.constraints[1]);\n      },\n      defaultMessage: buildMessage(function (eachPrefix, args) {\n        var isMinLength = args.constraints[0] !== null && args.constraints[0] !== undefined;\n        var isMaxLength = args.constraints[1] !== null && args.constraints[1] !== undefined;\n\n        if (isMinLength && (!args.value || args.value.length < args.constraints[0])) {\n          return eachPrefix + '$property must be longer than or equal to $constraint1 characters';\n        } else if (isMaxLength && args.value.length > args.constraints[1]) {\n          return eachPrefix + '$property must be shorter than or equal to $constraint2 characters';\n        }\n\n        return eachPrefix + '$property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"mappings":"AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,sBAAzC;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AAEA,OAAO,IAAMC,SAAS,GAAG,UAAlB;AAEP;;;;;AAIA,OAAM,SAAUC,MAAV,CAAiBC,KAAjB,EAAiCC,GAAjC,EAA8CC,GAA9C,EAA0D;EAC9D,OAAO,OAAOF,KAAP,KAAiB,QAAjB,IAA6BH,iBAAiB,CAACG,KAAD,EAAQ;IAAEC,GAAG,KAAL;IAAOC,GAAG;EAAV,CAAR,CAArD;AACD;AAED;;;;;AAIA,OAAM,SAAUC,MAAV,CAAiBF,GAAjB,EAA8BC,GAA9B,EAA4CE,iBAA5C,EAAiF;EACrF,OAAOR,UAAU,CACf;IACES,IAAI,EAAEP,SADR;IAEEQ,WAAW,EAAE,CAACL,GAAD,EAAMC,GAAN,CAFf;IAGEK,SAAS,EAAE;MACTC,QAAQ,EAAE,UAACR,KAAD,EAAQS,IAAR,EAAY;QAAc,aAAM,CAACT,KAAD,EAAQS,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAR,EAA6BG,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAA7B,CAAN;MAAuD,CADlF;MAETI,cAAc,EAAEf,YAAY,CAAC,UAACgB,UAAD,EAAaF,IAAb,EAAiB;QAC5C,IAAMG,WAAW,GAAGH,IAAI,CAACH,WAAL,CAAiB,CAAjB,MAAwB,IAAxB,IAAgCG,IAAI,CAACH,WAAL,CAAiB,CAAjB,MAAwBO,SAA5E;QACA,IAAMC,WAAW,GAAGL,IAAI,CAACH,WAAL,CAAiB,CAAjB,MAAwB,IAAxB,IAAgCG,IAAI,CAACH,WAAL,CAAiB,CAAjB,MAAwBO,SAA5E;;QACA,IAAID,WAAW,KAAK,CAACH,IAAI,CAACT,KAAN,IAAeS,IAAI,CAACT,KAAL,CAAWD,MAAX,GAAoBU,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAxC,CAAf,EAA6E;UAC3E,OAAOK,UAAU,GAAG,mEAApB;QACD,CAFD,MAEO,IAAIG,WAAW,IAAIL,IAAI,CAACT,KAAL,CAAWD,MAAX,GAAoBU,IAAI,CAACH,WAAL,CAAiB,CAAjB,CAAvC,EAA4D;UACjE,OAAOK,UAAU,GAAG,oEAApB;QACD;;QACD,OACEA,UAAU,GACV,6GAFF;MAID,CAZ2B,EAYzBP,iBAZyB;IAFnB;EAHb,CADe,EAqBfA,iBArBe,CAAjB;AAuBD","names":["buildMessage","ValidateBy","isLengthValidator","IS_LENGTH","length","value","min","max","Length","validationOptions","name","constraints","validator","validate","args","defaultMessage","eachPrefix","isMinLength","undefined","isMaxLength"],"sourceRoot":"","sources":["../../../../src/decorator/string/Length.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}