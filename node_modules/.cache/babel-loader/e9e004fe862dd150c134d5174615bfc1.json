{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NullSigner = void 0;\n\nconst signature_1 = require(\"./signature\");\n/**\n * Null-object pattern: a null Signer, which does nothing.\n *\n * Useful for contract interaction flows with query-only purposes.\n */\n\n\nclass NullSigner {\n  /**\n   * Creates a NullSigner.\n   */\n  constructor(address) {\n    this.address = address;\n  }\n\n  getAddress() {\n    return this.address;\n  }\n  /**\n   * Applies a mock signature.\n   */\n\n\n  sign(signable) {\n    return __awaiter(this, void 0, void 0, function* () {\n      signable.applySignature(new signature_1.Signature(\"0\".repeat(128)), this.address);\n    });\n  }\n\n}\n\nexports.NullSigner = NullSigner;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AAEA;;;;;;;AAKA,MAAaA,UAAb,CAAuB;EAGnB;;;EAGAC,YAAYC,OAAZ,EAA4B;IACxB,KAAKA,OAAL,GAAeA,OAAf;EACH;;EAEDC,UAAU;IACN,OAAO,KAAKD,OAAZ;EACH;EAED;;;;;EAGME,IAAI,CAACC,QAAD,EAAoB;;MAC1BA,QAAQ,CAACC,cAAT,CAAwB,IAAIC,qBAAJ,CAAc,IAAIC,MAAJ,CAAW,GAAX,CAAd,CAAxB,EAAwD,KAAKN,OAA7D;IACH;EAAA;;AAnBkB;;AAAvBO","names":["NullSigner","constructor","address","getAddress","sign","signable","applySignature","signature_1","repeat","exports"],"sourceRoot":"","sources":["../src/nullSigner.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}